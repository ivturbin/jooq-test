/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.CoreCaseAudit;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Таблица версионирования core_case
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreCaseAuditRecord extends UpdatableRecordImpl<CoreCaseAuditRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>passport_international.core_case_audit.id</code>.
     * Идентификатор
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>passport_international.core_case_audit.id</code>.
     * Идентификатор
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>passport_international.core_case_audit.record_id</code>.
     * Иденитификатор версионируемой записи
     */
    public void setRecordId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>passport_international.core_case_audit.record_id</code>.
     * Иденитификатор версионируемой записи
     */
    public Long getRecordId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.correction_log_id</code>.
     * Идентификатор лога коррекции дела
     */
    public void setCorrectionLogId(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.correction_log_id</code>.
     * Идентификатор лога коррекции дела
     */
    public Long getCorrectionLogId() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.update_user</code>.
     * Пользователь создавший версию
     */
    public void setUpdateUser(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.update_user</code>.
     * Пользователь создавший версию
     */
    public String getUpdateUser() {
        return (String) get(3);
    }

    /**
     * Setter for <code>passport_international.core_case_audit.eff_dttm</code>.
     * Время начала действия версии effective from
     */
    public void setEffDttm(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>passport_international.core_case_audit.eff_dttm</code>.
     * Время начала действия версии effective from
     */
    public OffsetDateTime getEffDttm() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>passport_international.core_case_audit.exp_dttm</code>.
     * Время окончания действия версии expired
     */
    public void setExpDttm(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>passport_international.core_case_audit.exp_dttm</code>.
     * Время окончания действия версии expired
     */
    public OffsetDateTime getExpDttm() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>passport_international.core_case_audit.version</code>.
     */
    public void setVersion(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>passport_international.core_case_audit.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.invalid_id</code>.
     */
    public void setInvalidId(Long value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.invalid_id</code>.
     */
    public Long getInvalidId() {
        return (Long) get(7);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.in_checklist_bool</code>.
     */
    public void setInChecklistBool(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.in_checklist_bool</code>.
     */
    public Boolean getInChecklistBool() {
        return (Boolean) get(8);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.data_corrected_code_nval</code>.
     */
    public void setDataCorrectedCodeNval(BigDecimal value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.data_corrected_code_nval</code>.
     */
    public BigDecimal getDataCorrectedCodeNval() {
        return (BigDecimal) get(9);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.from_draft_bool</code>.
     */
    public void setFromDraftBool(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.from_draft_bool</code>.
     */
    public Boolean getFromDraftBool() {
        return (Boolean) get(10);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.case_type_id</code>.
     */
    public void setCaseTypeId(Long value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.case_type_id</code>.
     */
    public Long getCaseTypeId() {
        return (Long) get(11);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.department_id</code>.
     */
    public void setDepartmentId(Long value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.department_id</code>.
     */
    public Long getDepartmentId() {
        return (Long) get(12);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.case_status_id</code>.
     */
    public void setCaseStatusId(Long value) {
        set(13, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.case_status_id</code>.
     */
    public Long getCaseStatusId() {
        return (Long) get(13);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.create_supplier_id</code>.
     */
    public void setCreateSupplierId(Long value) {
        set(14, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.create_supplier_id</code>.
     */
    public Long getCreateSupplierId() {
        return (Long) get(14);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.reception_supplier_id</code>.
     */
    public void setReceptionSupplierId(Long value) {
        set(15, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.reception_supplier_id</code>.
     */
    public Long getReceptionSupplierId() {
        return (Long) get(15);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.reception_dt</code>.
     */
    public void setReceptionDt(LocalDate value) {
        set(16, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.reception_dt</code>.
     */
    public LocalDate getReceptionDt() {
        return (LocalDate) get(16);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.invalid_dt</code>.
     */
    public void setInvalidDt(LocalDate value) {
        set(17, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.invalid_dt</code>.
     */
    public LocalDate getInvalidDt() {
        return (LocalDate) get(17);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.cessation_dt</code>.
     */
    public void setCessationDt(LocalDate value) {
        set(18, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.cessation_dt</code>.
     */
    public LocalDate getCessationDt() {
        return (LocalDate) get(18);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.parent_case_id</code>.
     */
    public void setParentCaseId(Long value) {
        set(19, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.parent_case_id</code>.
     */
    public Long getParentCaseId() {
        return (Long) get(19);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.cessation_reason_id</code>.
     */
    public void setCessationReasonId(Long value) {
        set(20, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.cessation_reason_id</code>.
     */
    public Long getCessationReasonId() {
        return (Long) get(20);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.cessation_user</code>.
     */
    public void setCessationUser(String value) {
        set(21, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.cessation_user</code>.
     */
    public String getCessationUser() {
        return (String) get(21);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.invalid_user</code>.
     */
    public void setInvalidUser(String value) {
        set(22, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.invalid_user</code>.
     */
    public String getInvalidUser() {
        return (String) get(22);
    }

    /**
     * Setter for <code>passport_international.core_case_audit.case_no</code>.
     */
    public void setCaseNo(String value) {
        set(23, value);
    }

    /**
     * Getter for <code>passport_international.core_case_audit.case_no</code>.
     */
    public String getCaseNo() {
        return (String) get(23);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.case_arc_no</code>.
     */
    public void setCaseArcNo(String value) {
        set(24, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.case_arc_no</code>.
     */
    public String getCaseArcNo() {
        return (String) get(24);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.cessation_basis_desc</code>.
     */
    public void setCessationBasisDesc(String value) {
        set(25, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.cessation_basis_desc</code>.
     */
    public String getCessationBasisDesc() {
        return (String) get(25);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.comments_desc</code>.
     */
    public void setCommentsDesc(String value) {
        set(26, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.comments_desc</code>.
     */
    public String getCommentsDesc() {
        return (String) get(26);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.case_reason_id</code>.
     */
    public void setCaseReasonId(Long value) {
        set(27, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.case_reason_id</code>.
     */
    public Long getCaseReasonId() {
        return (Long) get(27);
    }

    /**
     * Setter for <code>passport_international.core_case_audit.person_id</code>.
     */
    public void setPersonId(Long value) {
        set(28, value);
    }

    /**
     * Getter for <code>passport_international.core_case_audit.person_id</code>.
     */
    public Long getPersonId() {
        return (Long) get(28);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.cancelled_bool</code>.
     */
    public void setCancelledBool(Boolean value) {
        set(29, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.cancelled_bool</code>.
     */
    public Boolean getCancelledBool() {
        return (Boolean) get(29);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.person_status_id</code>.
     */
    public void setPersonStatusId(Long value) {
        set(30, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.person_status_id</code>.
     */
    public Long getPersonStatusId() {
        return (Long) get(30);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.department_code</code>.
     */
    public void setDepartmentCode(String value) {
        set(31, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.department_code</code>.
     */
    public String getDepartmentCode() {
        return (String) get(31);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.person_document_id</code>.
     */
    public void setPersonDocumentId(Long value) {
        set(32, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.person_document_id</code>.
     */
    public Long getPersonDocumentId() {
        return (Long) get(32);
    }

    /**
     * Setter for <code>passport_international.core_case_audit.region_id</code>.
     */
    public void setRegionId(Long value) {
        set(33, value);
    }

    /**
     * Getter for <code>passport_international.core_case_audit.region_id</code>.
     */
    public Long getRegionId() {
        return (Long) get(33);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.application_no</code>.
     */
    public void setApplicationNo(String value) {
        set(34, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.application_no</code>.
     */
    public String getApplicationNo() {
        return (String) get(34);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.federal_id</code>.
     */
    public void setFederalId(String value) {
        set(35, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.federal_id</code>.
     */
    public String getFederalId() {
        return (String) get(35);
    }

    /**
     * Setter for <code>passport_international.core_case_audit.source_id</code>.
     */
    public void setSourceId(Long value) {
        set(36, value);
    }

    /**
     * Getter for <code>passport_international.core_case_audit.source_id</code>.
     */
    public Long getSourceId() {
        return (Long) get(36);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.source_case_id</code>.
     */
    public void setSourceCaseId(String value) {
        set(37, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.source_case_id</code>.
     */
    public String getSourceCaseId() {
        return (String) get(37);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_audit.create_user</code>.
     */
    public void setCreateUser(String value) {
        set(38, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_audit.create_user</code>.
     */
    public String getCreateUser() {
        return (String) get(38);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreCaseAuditRecord
     */
    public CoreCaseAuditRecord() {
        super(CoreCaseAudit.CORE_CASE_AUDIT);
    }

    /**
     * Create a detached, initialised CoreCaseAuditRecord
     */
    public CoreCaseAuditRecord(Long id, Long recordId, Long correctionLogId, String updateUser, OffsetDateTime effDttm, OffsetDateTime expDttm, Integer version, Long invalidId, Boolean inChecklistBool, BigDecimal dataCorrectedCodeNval, Boolean fromDraftBool, Long caseTypeId, Long departmentId, Long caseStatusId, Long createSupplierId, Long receptionSupplierId, LocalDate receptionDt, LocalDate invalidDt, LocalDate cessationDt, Long parentCaseId, Long cessationReasonId, String cessationUser, String invalidUser, String caseNo, String caseArcNo, String cessationBasisDesc, String commentsDesc, Long caseReasonId, Long personId, Boolean cancelledBool, Long personStatusId, String departmentCode, Long personDocumentId, Long regionId, String applicationNo, String federalId, Long sourceId, String sourceCaseId, String createUser) {
        super(CoreCaseAudit.CORE_CASE_AUDIT);

        setId(id);
        setRecordId(recordId);
        setCorrectionLogId(correctionLogId);
        setUpdateUser(updateUser);
        setEffDttm(effDttm);
        setExpDttm(expDttm);
        setVersion(version);
        setInvalidId(invalidId);
        setInChecklistBool(inChecklistBool);
        setDataCorrectedCodeNval(dataCorrectedCodeNval);
        setFromDraftBool(fromDraftBool);
        setCaseTypeId(caseTypeId);
        setDepartmentId(departmentId);
        setCaseStatusId(caseStatusId);
        setCreateSupplierId(createSupplierId);
        setReceptionSupplierId(receptionSupplierId);
        setReceptionDt(receptionDt);
        setInvalidDt(invalidDt);
        setCessationDt(cessationDt);
        setParentCaseId(parentCaseId);
        setCessationReasonId(cessationReasonId);
        setCessationUser(cessationUser);
        setInvalidUser(invalidUser);
        setCaseNo(caseNo);
        setCaseArcNo(caseArcNo);
        setCessationBasisDesc(cessationBasisDesc);
        setCommentsDesc(commentsDesc);
        setCaseReasonId(caseReasonId);
        setPersonId(personId);
        setCancelledBool(cancelledBool);
        setPersonStatusId(personStatusId);
        setDepartmentCode(departmentCode);
        setPersonDocumentId(personDocumentId);
        setRegionId(regionId);
        setApplicationNo(applicationNo);
        setFederalId(federalId);
        setSourceId(sourceId);
        setSourceCaseId(sourceCaseId);
        setCreateUser(createUser);
        resetChangedOnNotNull();
    }
}
