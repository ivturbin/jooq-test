/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.ErnError;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.TableRecordImpl;


/**
 * Сведения об ошибках, пришедших от ЕРН
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ErnErrorRecord extends TableRecordImpl<ErnErrorRecord> implements Record13<Long, Long, String, String, String, OffsetDateTime, OffsetDateTime, Long, Long, String, String, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>passport_international.ern_error.ern_error_id</code>.
     * Первичный ключ
     */
    public void setErnErrorId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>passport_international.ern_error.ern_error_id</code>.
     * Первичный ключ
     */
    public Long getErnErrorId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>passport_international.ern_error.core_case_id</code>.
     * Идентификатор дела
     */
    public void setCoreCaseId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>passport_international.ern_error.core_case_id</code>.
     * Идентификатор дела
     */
    public Long getCoreCaseId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>passport_international.ern_error.status_code</code>. Код
     * ЕРН
     */
    public void setStatusCode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>passport_international.ern_error.status_code</code>. Код
     * ЕРН
     */
    public String getStatusCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>passport_international.ern_error.status_desc</code>.
     * Описание ошибки
     */
    public void setStatusDesc(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>passport_international.ern_error.status_desc</code>.
     * Описание ошибки
     */
    public String getStatusDesc() {
        return (String) get(3);
    }

    /**
     * Setter for <code>passport_international.ern_error.action_ind</code>.
     * Индикатор операции dml(i-insert,d-delete,u-update)
     */
    public void setActionInd(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>passport_international.ern_error.action_ind</code>.
     * Индикатор операции dml(i-insert,d-delete,u-update)
     */
    public String getActionInd() {
        return (String) get(4);
    }

    /**
     * Setter for <code>passport_international.ern_error.create_dttm</code>.
     * Дата создания записи
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>passport_international.ern_error.create_dttm</code>.
     * Дата создания записи
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>passport_international.ern_error.modify_dttm</code>.
     * Дата изменения записи
     */
    public void setModifyDttm(OffsetDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>passport_international.ern_error.modify_dttm</code>.
     * Дата изменения записи
     */
    public OffsetDateTime getModifyDttm() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for <code>passport_international.ern_error.region_id</code>.
     * Регион
     */
    public void setRegionId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>passport_international.ern_error.region_id</code>.
     * Регион
     */
    public Long getRegionId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>passport_international.ern_error.department_id</code>.
     * Подразделение в котором заводили дело
     */
    public void setDepartmentId(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>passport_international.ern_error.department_id</code>.
     * Подразделение в котором заводили дело
     */
    public Long getDepartmentId() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>passport_international.ern_error.check_desk</code>. Код
     * ошибки
     */
    public void setCheckDesk(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>passport_international.ern_error.check_desk</code>. Код
     * ошибки
     */
    public String getCheckDesk() {
        return (String) get(9);
    }

    /**
     * Setter for <code>passport_international.ern_error.source_code</code>.
     * Категория ошибки
     */
    public void setSourceCode(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>passport_international.ern_error.source_code</code>.
     * Категория ошибки
     */
    public String getSourceCode() {
        return (String) get(10);
    }

    /**
     * Setter for <code>passport_international.ern_error.check_desk_code</code>.
     * Код ошибки НСИ
     */
    public void setCheckDeskCode(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>passport_international.ern_error.check_desk_code</code>.
     * Код ошибки НСИ
     */
    public Long getCheckDeskCode() {
        return (Long) get(11);
    }

    /**
     * Setter for
     * <code>passport_international.ern_error.correction_status</code>. Статус
     * коррекции
     */
    public void setCorrectionStatus(String value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>passport_international.ern_error.correction_status</code>. Статус
     * коррекции
     */
    public String getCorrectionStatus() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, Long, String, String, String, OffsetDateTime, OffsetDateTime, Long, Long, String, String, Long, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Long, Long, String, String, String, OffsetDateTime, OffsetDateTime, Long, Long, String, String, Long, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ErnError.ERN_ERROR.ERN_ERROR_ID;
    }

    @Override
    public Field<Long> field2() {
        return ErnError.ERN_ERROR.CORE_CASE_ID;
    }

    @Override
    public Field<String> field3() {
        return ErnError.ERN_ERROR.STATUS_CODE;
    }

    @Override
    public Field<String> field4() {
        return ErnError.ERN_ERROR.STATUS_DESC;
    }

    @Override
    public Field<String> field5() {
        return ErnError.ERN_ERROR.ACTION_IND;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return ErnError.ERN_ERROR.CREATE_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field7() {
        return ErnError.ERN_ERROR.MODIFY_DTTM;
    }

    @Override
    public Field<Long> field8() {
        return ErnError.ERN_ERROR.REGION_ID;
    }

    @Override
    public Field<Long> field9() {
        return ErnError.ERN_ERROR.DEPARTMENT_ID;
    }

    @Override
    public Field<String> field10() {
        return ErnError.ERN_ERROR.CHECK_DESK;
    }

    @Override
    public Field<String> field11() {
        return ErnError.ERN_ERROR.SOURCE_CODE;
    }

    @Override
    public Field<Long> field12() {
        return ErnError.ERN_ERROR.CHECK_DESK_CODE;
    }

    @Override
    public Field<String> field13() {
        return ErnError.ERN_ERROR.CORRECTION_STATUS;
    }

    @Override
    public Long component1() {
        return getErnErrorId();
    }

    @Override
    public Long component2() {
        return getCoreCaseId();
    }

    @Override
    public String component3() {
        return getStatusCode();
    }

    @Override
    public String component4() {
        return getStatusDesc();
    }

    @Override
    public String component5() {
        return getActionInd();
    }

    @Override
    public OffsetDateTime component6() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime component7() {
        return getModifyDttm();
    }

    @Override
    public Long component8() {
        return getRegionId();
    }

    @Override
    public Long component9() {
        return getDepartmentId();
    }

    @Override
    public String component10() {
        return getCheckDesk();
    }

    @Override
    public String component11() {
        return getSourceCode();
    }

    @Override
    public Long component12() {
        return getCheckDeskCode();
    }

    @Override
    public String component13() {
        return getCorrectionStatus();
    }

    @Override
    public Long value1() {
        return getErnErrorId();
    }

    @Override
    public Long value2() {
        return getCoreCaseId();
    }

    @Override
    public String value3() {
        return getStatusCode();
    }

    @Override
    public String value4() {
        return getStatusDesc();
    }

    @Override
    public String value5() {
        return getActionInd();
    }

    @Override
    public OffsetDateTime value6() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime value7() {
        return getModifyDttm();
    }

    @Override
    public Long value8() {
        return getRegionId();
    }

    @Override
    public Long value9() {
        return getDepartmentId();
    }

    @Override
    public String value10() {
        return getCheckDesk();
    }

    @Override
    public String value11() {
        return getSourceCode();
    }

    @Override
    public Long value12() {
        return getCheckDeskCode();
    }

    @Override
    public String value13() {
        return getCorrectionStatus();
    }

    @Override
    public ErnErrorRecord value1(Long value) {
        setErnErrorId(value);
        return this;
    }

    @Override
    public ErnErrorRecord value2(Long value) {
        setCoreCaseId(value);
        return this;
    }

    @Override
    public ErnErrorRecord value3(String value) {
        setStatusCode(value);
        return this;
    }

    @Override
    public ErnErrorRecord value4(String value) {
        setStatusDesc(value);
        return this;
    }

    @Override
    public ErnErrorRecord value5(String value) {
        setActionInd(value);
        return this;
    }

    @Override
    public ErnErrorRecord value6(OffsetDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public ErnErrorRecord value7(OffsetDateTime value) {
        setModifyDttm(value);
        return this;
    }

    @Override
    public ErnErrorRecord value8(Long value) {
        setRegionId(value);
        return this;
    }

    @Override
    public ErnErrorRecord value9(Long value) {
        setDepartmentId(value);
        return this;
    }

    @Override
    public ErnErrorRecord value10(String value) {
        setCheckDesk(value);
        return this;
    }

    @Override
    public ErnErrorRecord value11(String value) {
        setSourceCode(value);
        return this;
    }

    @Override
    public ErnErrorRecord value12(Long value) {
        setCheckDeskCode(value);
        return this;
    }

    @Override
    public ErnErrorRecord value13(String value) {
        setCorrectionStatus(value);
        return this;
    }

    @Override
    public ErnErrorRecord values(Long value1, Long value2, String value3, String value4, String value5, OffsetDateTime value6, OffsetDateTime value7, Long value8, Long value9, String value10, String value11, Long value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ErnErrorRecord
     */
    public ErnErrorRecord() {
        super(ErnError.ERN_ERROR);
    }

    /**
     * Create a detached, initialised ErnErrorRecord
     */
    public ErnErrorRecord(Long ernErrorId, Long coreCaseId, String statusCode, String statusDesc, String actionInd, OffsetDateTime createDttm, OffsetDateTime modifyDttm, Long regionId, Long departmentId, String checkDesk, String sourceCode, Long checkDeskCode, String correctionStatus) {
        super(ErnError.ERN_ERROR);

        setErnErrorId(ernErrorId);
        setCoreCaseId(coreCaseId);
        setStatusCode(statusCode);
        setStatusDesc(statusDesc);
        setActionInd(actionInd);
        setCreateDttm(createDttm);
        setModifyDttm(modifyDttm);
        setRegionId(regionId);
        setDepartmentId(departmentId);
        setCheckDesk(checkDesk);
        setSourceCode(sourceCode);
        setCheckDeskCode(checkDeskCode);
        setCorrectionStatus(correctionStatus);
        resetChangedOnNotNull();
    }
}
