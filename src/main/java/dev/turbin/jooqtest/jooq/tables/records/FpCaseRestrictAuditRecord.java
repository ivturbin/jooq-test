/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.FpCaseRestrictAudit;

import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Таблица версионирования fp_case_restrict
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FpCaseRestrictAuditRecord extends UpdatableRecordImpl<FpCaseRestrictAuditRecord> implements Record12<Long, Long, Long, String, OffsetDateTime, OffsetDateTime, LocalDate, LocalDate, LocalDate, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>passport_international.fp_case_restrict_audit.id</code>.
     * Идентификатор "fp_case_restrict_audit" с данными коррекции
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>passport_international.fp_case_restrict_audit.id</code>.
     * Идентификатор "fp_case_restrict_audit" с данными коррекции
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_restrict_audit.record_id</code>.
     * Внешний ключ на запись в таблице-мастере
     */
    public void setRecordId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_restrict_audit.record_id</code>.
     * Внешний ключ на запись в таблице-мастере
     */
    public Long getRecordId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_restrict_audit.correction_log_id</code>.
     * Идентификатор лога коррекции дела
     */
    public void setCorrectionLogId(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_restrict_audit.correction_log_id</code>.
     * Идентификатор лога коррекции дела
     */
    public Long getCorrectionLogId() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_restrict_audit.update_user</code>.
     * Пользователь, скорректировавший дело
     */
    public void setUpdateUser(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_restrict_audit.update_user</code>.
     * Пользователь, скорректировавший дело
     */
    public String getUpdateUser() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_restrict_audit.eff_dttm</code>. Дата
     * начала действия версии
     */
    public void setEffDttm(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_restrict_audit.eff_dttm</code>. Дата
     * начала действия версии
     */
    public OffsetDateTime getEffDttm() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_restrict_audit.exp_dttm</code>. Дата
     * окончания действия версии
     */
    public void setExpDttm(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_restrict_audit.exp_dttm</code>. Дата
     * окончания действия версии
     */
    public OffsetDateTime getExpDttm() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_restrict_audit.fpr_doc_issue_dt</code>.
     */
    public void setFprDocIssueDt(LocalDate value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_restrict_audit.fpr_doc_issue_dt</code>.
     */
    public LocalDate getFprDocIssueDt() {
        return (LocalDate) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_restrict_audit.fpr_start_dt</code>.
     */
    public void setFprStartDt(LocalDate value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_restrict_audit.fpr_start_dt</code>.
     */
    public LocalDate getFprStartDt() {
        return (LocalDate) get(7);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_restrict_audit.fpr_end_dt</code>.
     */
    public void setFprEndDt(LocalDate value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_restrict_audit.fpr_end_dt</code>.
     */
    public LocalDate getFprEndDt() {
        return (LocalDate) get(8);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_restrict_audit.fpr_doc_no</code>.
     */
    public void setFprDocNo(String value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_restrict_audit.fpr_doc_no</code>.
     */
    public String getFprDocNo() {
        return (String) get(9);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_restrict_audit.fpr_doc_type</code>.
     */
    public void setFprDocType(String value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_restrict_audit.fpr_doc_type</code>.
     */
    public String getFprDocType() {
        return (String) get(10);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_restrict_audit.comment</code>.
     */
    public void setComment(String value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_restrict_audit.comment</code>.
     */
    public String getComment() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, Long, Long, String, OffsetDateTime, OffsetDateTime, LocalDate, LocalDate, LocalDate, String, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Long, Long, Long, String, OffsetDateTime, OffsetDateTime, LocalDate, LocalDate, LocalDate, String, String, String> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return FpCaseRestrictAudit.FP_CASE_RESTRICT_AUDIT.ID;
    }

    @Override
    public Field<Long> field2() {
        return FpCaseRestrictAudit.FP_CASE_RESTRICT_AUDIT.RECORD_ID;
    }

    @Override
    public Field<Long> field3() {
        return FpCaseRestrictAudit.FP_CASE_RESTRICT_AUDIT.CORRECTION_LOG_ID;
    }

    @Override
    public Field<String> field4() {
        return FpCaseRestrictAudit.FP_CASE_RESTRICT_AUDIT.UPDATE_USER;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return FpCaseRestrictAudit.FP_CASE_RESTRICT_AUDIT.EFF_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return FpCaseRestrictAudit.FP_CASE_RESTRICT_AUDIT.EXP_DTTM;
    }

    @Override
    public Field<LocalDate> field7() {
        return FpCaseRestrictAudit.FP_CASE_RESTRICT_AUDIT.FPR_DOC_ISSUE_DT;
    }

    @Override
    public Field<LocalDate> field8() {
        return FpCaseRestrictAudit.FP_CASE_RESTRICT_AUDIT.FPR_START_DT;
    }

    @Override
    public Field<LocalDate> field9() {
        return FpCaseRestrictAudit.FP_CASE_RESTRICT_AUDIT.FPR_END_DT;
    }

    @Override
    public Field<String> field10() {
        return FpCaseRestrictAudit.FP_CASE_RESTRICT_AUDIT.FPR_DOC_NO;
    }

    @Override
    public Field<String> field11() {
        return FpCaseRestrictAudit.FP_CASE_RESTRICT_AUDIT.FPR_DOC_TYPE;
    }

    @Override
    public Field<String> field12() {
        return FpCaseRestrictAudit.FP_CASE_RESTRICT_AUDIT.COMMENT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getRecordId();
    }

    @Override
    public Long component3() {
        return getCorrectionLogId();
    }

    @Override
    public String component4() {
        return getUpdateUser();
    }

    @Override
    public OffsetDateTime component5() {
        return getEffDttm();
    }

    @Override
    public OffsetDateTime component6() {
        return getExpDttm();
    }

    @Override
    public LocalDate component7() {
        return getFprDocIssueDt();
    }

    @Override
    public LocalDate component8() {
        return getFprStartDt();
    }

    @Override
    public LocalDate component9() {
        return getFprEndDt();
    }

    @Override
    public String component10() {
        return getFprDocNo();
    }

    @Override
    public String component11() {
        return getFprDocType();
    }

    @Override
    public String component12() {
        return getComment();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getRecordId();
    }

    @Override
    public Long value3() {
        return getCorrectionLogId();
    }

    @Override
    public String value4() {
        return getUpdateUser();
    }

    @Override
    public OffsetDateTime value5() {
        return getEffDttm();
    }

    @Override
    public OffsetDateTime value6() {
        return getExpDttm();
    }

    @Override
    public LocalDate value7() {
        return getFprDocIssueDt();
    }

    @Override
    public LocalDate value8() {
        return getFprStartDt();
    }

    @Override
    public LocalDate value9() {
        return getFprEndDt();
    }

    @Override
    public String value10() {
        return getFprDocNo();
    }

    @Override
    public String value11() {
        return getFprDocType();
    }

    @Override
    public String value12() {
        return getComment();
    }

    @Override
    public FpCaseRestrictAuditRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FpCaseRestrictAuditRecord value2(Long value) {
        setRecordId(value);
        return this;
    }

    @Override
    public FpCaseRestrictAuditRecord value3(Long value) {
        setCorrectionLogId(value);
        return this;
    }

    @Override
    public FpCaseRestrictAuditRecord value4(String value) {
        setUpdateUser(value);
        return this;
    }

    @Override
    public FpCaseRestrictAuditRecord value5(OffsetDateTime value) {
        setEffDttm(value);
        return this;
    }

    @Override
    public FpCaseRestrictAuditRecord value6(OffsetDateTime value) {
        setExpDttm(value);
        return this;
    }

    @Override
    public FpCaseRestrictAuditRecord value7(LocalDate value) {
        setFprDocIssueDt(value);
        return this;
    }

    @Override
    public FpCaseRestrictAuditRecord value8(LocalDate value) {
        setFprStartDt(value);
        return this;
    }

    @Override
    public FpCaseRestrictAuditRecord value9(LocalDate value) {
        setFprEndDt(value);
        return this;
    }

    @Override
    public FpCaseRestrictAuditRecord value10(String value) {
        setFprDocNo(value);
        return this;
    }

    @Override
    public FpCaseRestrictAuditRecord value11(String value) {
        setFprDocType(value);
        return this;
    }

    @Override
    public FpCaseRestrictAuditRecord value12(String value) {
        setComment(value);
        return this;
    }

    @Override
    public FpCaseRestrictAuditRecord values(Long value1, Long value2, Long value3, String value4, OffsetDateTime value5, OffsetDateTime value6, LocalDate value7, LocalDate value8, LocalDate value9, String value10, String value11, String value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FpCaseRestrictAuditRecord
     */
    public FpCaseRestrictAuditRecord() {
        super(FpCaseRestrictAudit.FP_CASE_RESTRICT_AUDIT);
    }

    /**
     * Create a detached, initialised FpCaseRestrictAuditRecord
     */
    public FpCaseRestrictAuditRecord(Long id, Long recordId, Long correctionLogId, String updateUser, OffsetDateTime effDttm, OffsetDateTime expDttm, LocalDate fprDocIssueDt, LocalDate fprStartDt, LocalDate fprEndDt, String fprDocNo, String fprDocType, String comment) {
        super(FpCaseRestrictAudit.FP_CASE_RESTRICT_AUDIT);

        setId(id);
        setRecordId(recordId);
        setCorrectionLogId(correctionLogId);
        setUpdateUser(updateUser);
        setEffDttm(effDttm);
        setExpDttm(expDttm);
        setFprDocIssueDt(fprDocIssueDt);
        setFprStartDt(fprStartDt);
        setFprEndDt(fprEndDt);
        setFprDocNo(fprDocNo);
        setFprDocType(fprDocType);
        setComment(comment);
        resetChangedOnNotNull();
    }
}
