/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.FpPersonDocument;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * ДУЛ для модуля загранпаспорта
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FpPersonDocumentRecord extends UpdatableRecordImpl<FpPersonDocumentRecord> implements Record10<Long, String, String, String, Long, OffsetDateTime, OffsetDateTime, String, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.fp_person_document.fpa_person_document_id</code>.
     * Индефикатор ДЛУ
     */
    public void setFpaPersonDocumentId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_person_document.fpa_person_document_id</code>.
     * Индефикатор ДЛУ
     */
    public Long getFpaPersonDocumentId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.fp_person_document.first_name_lat</code>.
     * Имя латиница
     */
    public void setFirstNameLat(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_person_document.first_name_lat</code>.
     * Имя латиница
     */
    public String getFirstNameLat() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.fp_person_document.last_name_lat</code>.
     * Фамилия латиница
     */
    public void setLastNameLat(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_person_document.last_name_lat</code>.
     * Фамилия латиница
     */
    public String getLastNameLat() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.fp_person_document.middle_name_lat</code>.
     * Отчество латиница
     */
    public void setMiddleNameLat(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_person_document.middle_name_lat</code>.
     * Отчество латиница
     */
    public String getMiddleNameLat() {
        return (String) get(3);
    }

    /**
     * Setter for <code>passport_international.fp_person_document.src_id</code>.
     * Идентификатор источника с которого получены информация
     */
    public void setSrcId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>passport_international.fp_person_document.src_id</code>.
     * Идентификатор источника с которого получены информация
     */
    public Long getSrcId() {
        return (Long) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.fp_person_document.create_dttm</code>. Дата
     * время вставки записи в таблицу
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_person_document.create_dttm</code>. Дата
     * время вставки записи в таблицу
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.fp_person_document.modify_dttm</code>. Дата
     * время последнего изменения записи
     */
    public void setModifyDttm(OffsetDateTime value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_person_document.modify_dttm</code>. Дата
     * время последнего изменения записи
     */
    public OffsetDateTime getModifyDttm() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.fp_person_document.action_ind</code>.
     * Индикатор операции DML(I-insert,D-delete,U-update)
     */
    public void setActionInd(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_person_document.action_ind</code>.
     * Индикатор операции DML(I-insert,D-delete,U-update)
     */
    public String getActionInd() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>passport_international.fp_person_document.eff_dttm</code>. Поля
     * отображения периода действия технической истории
     */
    public void setEffDttm(OffsetDateTime value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_person_document.eff_dttm</code>. Поля
     * отображения периода действия технической истории
     */
    public OffsetDateTime getEffDttm() {
        return (OffsetDateTime) get(8);
    }

    /**
     * Setter for
     * <code>passport_international.fp_person_document.exp_dttm</code>. Поля
     * отображения периода действия технической истории
     */
    public void setExpDttm(OffsetDateTime value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_person_document.exp_dttm</code>. Поля
     * отображения периода действия технической истории
     */
    public OffsetDateTime getExpDttm() {
        return (OffsetDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, String, String, String, Long, OffsetDateTime, OffsetDateTime, String, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, String, String, String, Long, OffsetDateTime, OffsetDateTime, String, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return FpPersonDocument.FP_PERSON_DOCUMENT.FPA_PERSON_DOCUMENT_ID;
    }

    @Override
    public Field<String> field2() {
        return FpPersonDocument.FP_PERSON_DOCUMENT.FIRST_NAME_LAT;
    }

    @Override
    public Field<String> field3() {
        return FpPersonDocument.FP_PERSON_DOCUMENT.LAST_NAME_LAT;
    }

    @Override
    public Field<String> field4() {
        return FpPersonDocument.FP_PERSON_DOCUMENT.MIDDLE_NAME_LAT;
    }

    @Override
    public Field<Long> field5() {
        return FpPersonDocument.FP_PERSON_DOCUMENT.SRC_ID;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return FpPersonDocument.FP_PERSON_DOCUMENT.CREATE_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field7() {
        return FpPersonDocument.FP_PERSON_DOCUMENT.MODIFY_DTTM;
    }

    @Override
    public Field<String> field8() {
        return FpPersonDocument.FP_PERSON_DOCUMENT.ACTION_IND;
    }

    @Override
    public Field<OffsetDateTime> field9() {
        return FpPersonDocument.FP_PERSON_DOCUMENT.EFF_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field10() {
        return FpPersonDocument.FP_PERSON_DOCUMENT.EXP_DTTM;
    }

    @Override
    public Long component1() {
        return getFpaPersonDocumentId();
    }

    @Override
    public String component2() {
        return getFirstNameLat();
    }

    @Override
    public String component3() {
        return getLastNameLat();
    }

    @Override
    public String component4() {
        return getMiddleNameLat();
    }

    @Override
    public Long component5() {
        return getSrcId();
    }

    @Override
    public OffsetDateTime component6() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime component7() {
        return getModifyDttm();
    }

    @Override
    public String component8() {
        return getActionInd();
    }

    @Override
    public OffsetDateTime component9() {
        return getEffDttm();
    }

    @Override
    public OffsetDateTime component10() {
        return getExpDttm();
    }

    @Override
    public Long value1() {
        return getFpaPersonDocumentId();
    }

    @Override
    public String value2() {
        return getFirstNameLat();
    }

    @Override
    public String value3() {
        return getLastNameLat();
    }

    @Override
    public String value4() {
        return getMiddleNameLat();
    }

    @Override
    public Long value5() {
        return getSrcId();
    }

    @Override
    public OffsetDateTime value6() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime value7() {
        return getModifyDttm();
    }

    @Override
    public String value8() {
        return getActionInd();
    }

    @Override
    public OffsetDateTime value9() {
        return getEffDttm();
    }

    @Override
    public OffsetDateTime value10() {
        return getExpDttm();
    }

    @Override
    public FpPersonDocumentRecord value1(Long value) {
        setFpaPersonDocumentId(value);
        return this;
    }

    @Override
    public FpPersonDocumentRecord value2(String value) {
        setFirstNameLat(value);
        return this;
    }

    @Override
    public FpPersonDocumentRecord value3(String value) {
        setLastNameLat(value);
        return this;
    }

    @Override
    public FpPersonDocumentRecord value4(String value) {
        setMiddleNameLat(value);
        return this;
    }

    @Override
    public FpPersonDocumentRecord value5(Long value) {
        setSrcId(value);
        return this;
    }

    @Override
    public FpPersonDocumentRecord value6(OffsetDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public FpPersonDocumentRecord value7(OffsetDateTime value) {
        setModifyDttm(value);
        return this;
    }

    @Override
    public FpPersonDocumentRecord value8(String value) {
        setActionInd(value);
        return this;
    }

    @Override
    public FpPersonDocumentRecord value9(OffsetDateTime value) {
        setEffDttm(value);
        return this;
    }

    @Override
    public FpPersonDocumentRecord value10(OffsetDateTime value) {
        setExpDttm(value);
        return this;
    }

    @Override
    public FpPersonDocumentRecord values(Long value1, String value2, String value3, String value4, Long value5, OffsetDateTime value6, OffsetDateTime value7, String value8, OffsetDateTime value9, OffsetDateTime value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FpPersonDocumentRecord
     */
    public FpPersonDocumentRecord() {
        super(FpPersonDocument.FP_PERSON_DOCUMENT);
    }

    /**
     * Create a detached, initialised FpPersonDocumentRecord
     */
    public FpPersonDocumentRecord(Long fpaPersonDocumentId, String firstNameLat, String lastNameLat, String middleNameLat, Long srcId, OffsetDateTime createDttm, OffsetDateTime modifyDttm, String actionInd, OffsetDateTime effDttm, OffsetDateTime expDttm) {
        super(FpPersonDocument.FP_PERSON_DOCUMENT);

        setFpaPersonDocumentId(fpaPersonDocumentId);
        setFirstNameLat(firstNameLat);
        setLastNameLat(lastNameLat);
        setMiddleNameLat(middleNameLat);
        setSrcId(srcId);
        setCreateDttm(createDttm);
        setModifyDttm(modifyDttm);
        setActionInd(actionInd);
        setEffDttm(effDttm);
        setExpDttm(expDttm);
        resetChangedOnNotNull();
    }
}
