/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables;


import dev.turbin.jooqtest.jooq.PassportInternational;
import dev.turbin.jooqtest.jooq.tables.records.ViewFpaCancelRestrictCaseRecord;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.function.Function;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function16;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewFpaCancelRestrictCase extends TableImpl<ViewFpaCancelRestrictCaseRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>passport_international.view_fpa_cancel_restrict_case</code>
     */
    public static final ViewFpaCancelRestrictCase VIEW_FPA_CANCEL_RESTRICT_CASE = new ViewFpaCancelRestrictCase();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ViewFpaCancelRestrictCaseRecord> getRecordType() {
        return ViewFpaCancelRestrictCaseRecord.class;
    }

    /**
     * The column
     * <code>passport_international.view_fpa_cancel_restrict_case.fpa_cancel_restrict_case_id</code>.
     */
    public final TableField<ViewFpaCancelRestrictCaseRecord, Long> FPA_CANCEL_RESTRICT_CASE_ID = createField(DSL.name("fpa_cancel_restrict_case_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_cancel_restrict_case.fpa_case_restrict_id</code>.
     */
    public final TableField<ViewFpaCancelRestrictCaseRecord, Long> FPA_CASE_RESTRICT_ID = createField(DSL.name("fpa_case_restrict_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_cancel_restrict_case.type_doc_cval</code>.
     */
    public final TableField<ViewFpaCancelRestrictCaseRecord, String> TYPE_DOC_CVAL = createField(DSL.name("type_doc_cval"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_cancel_restrict_case.doc_no</code>.
     * Номер документа подтверждающий права в отношении несовершеннолетнего лица
     */
    public final TableField<ViewFpaCancelRestrictCaseRecord, String> DOC_NO = createField(DSL.name("doc_no"), SQLDataType.VARCHAR(128), this, "Номер документа подтверждающий права в отношении несовершеннолетнего лица");

    /**
     * The column
     * <code>passport_international.view_fpa_cancel_restrict_case.issue_dt</code>.
     * Дата выдачи документа подтверждающего права в отношении
     * несовершеннолетнего лица
     */
    public final TableField<ViewFpaCancelRestrictCaseRecord, LocalDate> ISSUE_DT = createField(DSL.name("issue_dt"), SQLDataType.LOCALDATE, this, "Дата выдачи документа подтверждающего права в отношении несовершеннолетнего лица");

    /**
     * The column
     * <code>passport_international.view_fpa_cancel_restrict_case.end_restrict_from_dt</code>.
     * Дата окончания ограничения с
     */
    public final TableField<ViewFpaCancelRestrictCaseRecord, LocalDate> END_RESTRICT_FROM_DT = createField(DSL.name("end_restrict_from_dt"), SQLDataType.LOCALDATE, this, "Дата окончания ограничения с");

    /**
     * The column
     * <code>passport_international.view_fpa_cancel_restrict_case.end_restrict_to_dt</code>.
     * Дата окончания ограничения по
     */
    public final TableField<ViewFpaCancelRestrictCaseRecord, LocalDate> END_RESTRICT_TO_DT = createField(DSL.name("end_restrict_to_dt"), SQLDataType.LOCALDATE, this, "Дата окончания ограничения по");

    /**
     * The column
     * <code>passport_international.view_fpa_cancel_restrict_case.type_doc_base_cval</code>.
     */
    public final TableField<ViewFpaCancelRestrictCaseRecord, String> TYPE_DOC_BASE_CVAL = createField(DSL.name("type_doc_base_cval"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_cancel_restrict_case.comment_base_desc</code>.
     */
    public final TableField<ViewFpaCancelRestrictCaseRecord, String> COMMENT_BASE_DESC = createField(DSL.name("comment_base_desc"), SQLDataType.VARCHAR(2048), this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_cancel_restrict_case.comment_desc</code>.
     */
    public final TableField<ViewFpaCancelRestrictCaseRecord, String> COMMENT_DESC = createField(DSL.name("comment_desc"), SQLDataType.VARCHAR(2048), this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_cancel_restrict_case.src_id</code>.
     * Идентификатор источника с которого получены информация
     */
    public final TableField<ViewFpaCancelRestrictCaseRecord, Long> SRC_ID = createField(DSL.name("src_id"), SQLDataType.BIGINT, this, "Идентификатор источника с которого получены информация");

    /**
     * The column
     * <code>passport_international.view_fpa_cancel_restrict_case.create_dttm</code>.
     * Дата время вставки записи в таблицу
     */
    public final TableField<ViewFpaCancelRestrictCaseRecord, OffsetDateTime> CREATE_DTTM = createField(DSL.name("create_dttm"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "Дата время вставки записи в таблицу");

    /**
     * The column
     * <code>passport_international.view_fpa_cancel_restrict_case.modify_dttm</code>.
     * Дата время последнего изменения записи
     */
    public final TableField<ViewFpaCancelRestrictCaseRecord, OffsetDateTime> MODIFY_DTTM = createField(DSL.name("modify_dttm"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "Дата время последнего изменения записи");

    /**
     * The column
     * <code>passport_international.view_fpa_cancel_restrict_case.exp_dttm</code>.
     * Поля отображения периода действия технической истории
     */
    public final TableField<ViewFpaCancelRestrictCaseRecord, OffsetDateTime> EXP_DTTM = createField(DSL.name("exp_dttm"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "Поля отображения периода действия технической истории");

    /**
     * The column
     * <code>passport_international.view_fpa_cancel_restrict_case.eff_dttm</code>.
     * Поля отображения периода действия технической истории
     */
    public final TableField<ViewFpaCancelRestrictCaseRecord, OffsetDateTime> EFF_DTTM = createField(DSL.name("eff_dttm"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "Поля отображения периода действия технической истории");

    /**
     * The column
     * <code>passport_international.view_fpa_cancel_restrict_case.action_ind</code>.
     * Индикатор операции DML(I-insert,D-delete,U-update)
     */
    public final TableField<ViewFpaCancelRestrictCaseRecord, String> ACTION_IND = createField(DSL.name("action_ind"), SQLDataType.VARCHAR(1), this, "Индикатор операции DML(I-insert,D-delete,U-update)");

    private ViewFpaCancelRestrictCase(Name alias, Table<ViewFpaCancelRestrictCaseRecord> aliased) {
        this(alias, aliased, null);
    }

    private ViewFpaCancelRestrictCase(Name alias, Table<ViewFpaCancelRestrictCaseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("""
        create view "view_fpa_cancel_restrict_case" as  SELECT fp_cancel_restrict_case.cancel_restrict_id AS fpa_cancel_restrict_case_id,
         fp_cancel_restrict_case.restrict_id AS fpa_case_restrict_id,
         fp_cancel_restrict_case.type_doc AS type_doc_cval,
         fp_cancel_restrict_case.doc_no,
         fp_cancel_restrict_case.issue_dt,
         fp_cancel_restrict_case.end_restrict_from_dt,
         fp_cancel_restrict_case.end_restrict_to_dt,
         fp_cancel_restrict_case.type_doc_base AS type_doc_base_cval,
         fp_cancel_restrict_case.comment_base AS comment_base_desc,
         fp_cancel_restrict_case.comment AS comment_desc,
         fp_cancel_restrict_case.src_id,
         fp_cancel_restrict_case.create_dttm,
         fp_cancel_restrict_case.modify_dttm,
         fp_cancel_restrict_case.exp_dttm,
         fp_cancel_restrict_case.eff_dttm,
         fp_cancel_restrict_case.action_ind
        FROM fp_cancel_restrict_case;
        """));
    }

    /**
     * Create an aliased
     * <code>passport_international.view_fpa_cancel_restrict_case</code> table
     * reference
     */
    public ViewFpaCancelRestrictCase(String alias) {
        this(DSL.name(alias), VIEW_FPA_CANCEL_RESTRICT_CASE);
    }

    /**
     * Create an aliased
     * <code>passport_international.view_fpa_cancel_restrict_case</code> table
     * reference
     */
    public ViewFpaCancelRestrictCase(Name alias) {
        this(alias, VIEW_FPA_CANCEL_RESTRICT_CASE);
    }

    /**
     * Create a
     * <code>passport_international.view_fpa_cancel_restrict_case</code> table
     * reference
     */
    public ViewFpaCancelRestrictCase() {
        this(DSL.name("view_fpa_cancel_restrict_case"), null);
    }

    public <O extends Record> ViewFpaCancelRestrictCase(Table<O> child, ForeignKey<O, ViewFpaCancelRestrictCaseRecord> key) {
        super(child, key, VIEW_FPA_CANCEL_RESTRICT_CASE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : PassportInternational.PASSPORT_INTERNATIONAL;
    }

    @Override
    public ViewFpaCancelRestrictCase as(String alias) {
        return new ViewFpaCancelRestrictCase(DSL.name(alias), this);
    }

    @Override
    public ViewFpaCancelRestrictCase as(Name alias) {
        return new ViewFpaCancelRestrictCase(alias, this);
    }

    @Override
    public ViewFpaCancelRestrictCase as(Table<?> alias) {
        return new ViewFpaCancelRestrictCase(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewFpaCancelRestrictCase rename(String name) {
        return new ViewFpaCancelRestrictCase(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewFpaCancelRestrictCase rename(Name name) {
        return new ViewFpaCancelRestrictCase(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewFpaCancelRestrictCase rename(Table<?> name) {
        return new ViewFpaCancelRestrictCase(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<Long, Long, String, String, LocalDate, LocalDate, LocalDate, String, String, String, Long, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, String> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function16<? super Long, ? super Long, ? super String, ? super String, ? super LocalDate, ? super LocalDate, ? super LocalDate, ? super String, ? super String, ? super String, ? super Long, ? super OffsetDateTime, ? super OffsetDateTime, ? super OffsetDateTime, ? super OffsetDateTime, ? super String, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function16<? super Long, ? super Long, ? super String, ? super String, ? super LocalDate, ? super LocalDate, ? super LocalDate, ? super String, ? super String, ? super String, ? super Long, ? super OffsetDateTime, ? super OffsetDateTime, ? super OffsetDateTime, ? super OffsetDateTime, ? super String, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
