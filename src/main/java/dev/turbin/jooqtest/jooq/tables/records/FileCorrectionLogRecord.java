/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.FileCorrectionLog;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Таблица ссылок на ФХ для документов-оснований коррекции
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FileCorrectionLogRecord extends UpdatableRecordImpl<FileCorrectionLogRecord> implements Record6<Long, Long, Long, OffsetDateTime, OffsetDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.file_correction_log.file_correction_log_id</code>.
     * Идентификатор файла причины изменения
     */
    public void setFileCorrectionLogId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.file_correction_log.file_correction_log_id</code>.
     * Идентификатор файла причины изменения
     */
    public Long getFileCorrectionLogId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.file_correction_log.correction_log_id</code>.
     * Идентификатор лога коррекции дела
     */
    public void setCorrectionLogId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.file_correction_log.correction_log_id</code>.
     * Идентификатор лога коррекции дела
     */
    public Long getCorrectionLogId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.file_correction_log.document_id</code>.
     * Ссылка на ФХ для прикрепляемых документов
     */
    public void setDocumentId(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.file_correction_log.document_id</code>.
     * Ссылка на ФХ для прикрепляемых документов
     */
    public Long getDocumentId() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.file_correction_log.create_dttm</code>. Дата
     * время вставки записи
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.file_correction_log.create_dttm</code>. Дата
     * время вставки записи
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.file_correction_log.modify_dttm</code>. Дата
     * время последнего изменения записи
     */
    public void setModifyDttm(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.file_correction_log.modify_dttm</code>. Дата
     * время последнего изменения записи
     */
    public OffsetDateTime getModifyDttm() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.file_correction_log.action_ind</code>.
     * Индикатор действия
     */
    public void setActionInd(String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.file_correction_log.action_ind</code>.
     * Индикатор действия
     */
    public String getActionInd() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Long, OffsetDateTime, OffsetDateTime, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, Long, OffsetDateTime, OffsetDateTime, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return FileCorrectionLog.FILE_CORRECTION_LOG.FILE_CORRECTION_LOG_ID;
    }

    @Override
    public Field<Long> field2() {
        return FileCorrectionLog.FILE_CORRECTION_LOG.CORRECTION_LOG_ID;
    }

    @Override
    public Field<Long> field3() {
        return FileCorrectionLog.FILE_CORRECTION_LOG.DOCUMENT_ID;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return FileCorrectionLog.FILE_CORRECTION_LOG.CREATE_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return FileCorrectionLog.FILE_CORRECTION_LOG.MODIFY_DTTM;
    }

    @Override
    public Field<String> field6() {
        return FileCorrectionLog.FILE_CORRECTION_LOG.ACTION_IND;
    }

    @Override
    public Long component1() {
        return getFileCorrectionLogId();
    }

    @Override
    public Long component2() {
        return getCorrectionLogId();
    }

    @Override
    public Long component3() {
        return getDocumentId();
    }

    @Override
    public OffsetDateTime component4() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime component5() {
        return getModifyDttm();
    }

    @Override
    public String component6() {
        return getActionInd();
    }

    @Override
    public Long value1() {
        return getFileCorrectionLogId();
    }

    @Override
    public Long value2() {
        return getCorrectionLogId();
    }

    @Override
    public Long value3() {
        return getDocumentId();
    }

    @Override
    public OffsetDateTime value4() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime value5() {
        return getModifyDttm();
    }

    @Override
    public String value6() {
        return getActionInd();
    }

    @Override
    public FileCorrectionLogRecord value1(Long value) {
        setFileCorrectionLogId(value);
        return this;
    }

    @Override
    public FileCorrectionLogRecord value2(Long value) {
        setCorrectionLogId(value);
        return this;
    }

    @Override
    public FileCorrectionLogRecord value3(Long value) {
        setDocumentId(value);
        return this;
    }

    @Override
    public FileCorrectionLogRecord value4(OffsetDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public FileCorrectionLogRecord value5(OffsetDateTime value) {
        setModifyDttm(value);
        return this;
    }

    @Override
    public FileCorrectionLogRecord value6(String value) {
        setActionInd(value);
        return this;
    }

    @Override
    public FileCorrectionLogRecord values(Long value1, Long value2, Long value3, OffsetDateTime value4, OffsetDateTime value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FileCorrectionLogRecord
     */
    public FileCorrectionLogRecord() {
        super(FileCorrectionLog.FILE_CORRECTION_LOG);
    }

    /**
     * Create a detached, initialised FileCorrectionLogRecord
     */
    public FileCorrectionLogRecord(Long fileCorrectionLogId, Long correctionLogId, Long documentId, OffsetDateTime createDttm, OffsetDateTime modifyDttm, String actionInd) {
        super(FileCorrectionLog.FILE_CORRECTION_LOG);

        setFileCorrectionLogId(fileCorrectionLogId);
        setCorrectionLogId(correctionLogId);
        setDocumentId(documentId);
        setCreateDttm(createDttm);
        setModifyDttm(modifyDttm);
        setActionInd(actionInd);
        resetChangedOnNotNull();
    }
}
