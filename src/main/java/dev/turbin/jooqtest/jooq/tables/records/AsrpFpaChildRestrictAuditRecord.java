/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.AsrpFpaChildRestrictAudit;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Таблица версионирования asrp_fpa_child_restrict
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AsrpFpaChildRestrictAuditRecord extends UpdatableRecordImpl<AsrpFpaChildRestrictAuditRecord> implements Record20<Long, Long, Long, String, OffsetDateTime, OffsetDateTime, Long, Long, Long, Long, String, Long, Long, Long, Long, String, String, String, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.id</code>.
     * Идентификатор "asrp_fpa_child_restrict_audit" с данными коррекции
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.id</code>.
     * Идентификатор "asrp_fpa_child_restrict_audit" с данными коррекции
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.record_id</code>.
     * Внешний ключ на запись в таблице-мастере
     */
    public void setRecordId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.record_id</code>.
     * Внешний ключ на запись в таблице-мастере
     */
    public Long getRecordId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.correction_log_id</code>.
     * Идентификатор лога коррекции дела
     */
    public void setCorrectionLogId(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.correction_log_id</code>.
     * Идентификатор лога коррекции дела
     */
    public Long getCorrectionLogId() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.update_user</code>.
     * Пользователь, скорректировавший дело
     */
    public void setUpdateUser(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.update_user</code>.
     * Пользователь, скорректировавший дело
     */
    public String getUpdateUser() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.eff_dttm</code>.
     * Дата начала действия версии
     */
    public void setEffDttm(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.eff_dttm</code>.
     * Дата начала действия версии
     */
    public OffsetDateTime getEffDttm() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.exp_dttm</code>.
     * Дата окончания действия версии
     */
    public void setExpDttm(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.exp_dttm</code>.
     * Дата окончания действия версии
     */
    public OffsetDateTime getExpDttm() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.declarant_id</code>.
     */
    public void setDeclarantId(Long value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.declarant_id</code>.
     */
    public Long getDeclarantId() {
        return (Long) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.declarant_person_id</code>.
     */
    public void setDeclarantPersonId(Long value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.declarant_person_id</code>.
     */
    public Long getDeclarantPersonId() {
        return (Long) get(7);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.declarant_doc_id</code>.
     */
    public void setDeclarantDocId(Long value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.declarant_doc_id</code>.
     */
    public Long getDeclarantDocId() {
        return (Long) get(8);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.declarant_person_document_id</code>.
     */
    public void setDeclarantPersonDocumentId(Long value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.declarant_person_document_id</code>.
     */
    public Long getDeclarantPersonDocumentId() {
        return (Long) get(9);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.relation_doc</code>.
     */
    public void setRelationDoc(String value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.relation_doc</code>.
     */
    public String getRelationDoc() {
        return (String) get(10);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.child_id</code>.
     */
    public void setChildId(Long value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.child_id</code>.
     */
    public Long getChildId() {
        return (Long) get(11);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.child_person_id</code>.
     */
    public void setChildPersonId(Long value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.child_person_id</code>.
     */
    public Long getChildPersonId() {
        return (Long) get(12);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.child_doc_id</code>.
     */
    public void setChildDocId(Long value) {
        set(13, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.child_doc_id</code>.
     */
    public Long getChildDocId() {
        return (Long) get(13);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.child_person_document_id</code>.
     */
    public void setChildPersonDocumentId(Long value) {
        set(14, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.child_person_document_id</code>.
     */
    public Long getChildPersonDocumentId() {
        return (Long) get(14);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.declarant_reg</code>.
     */
    public void setDeclarantReg(String value) {
        set(15, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.declarant_reg</code>.
     */
    public String getDeclarantReg() {
        return (String) get(15);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.declarent_address</code>.
     */
    public void setDeclarentAddress(String value) {
        set(16, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.declarent_address</code>.
     */
    public String getDeclarentAddress() {
        return (String) get(16);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.child_reg</code>.
     */
    public void setChildReg(String value) {
        set(17, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.child_reg</code>.
     */
    public String getChildReg() {
        return (String) get(17);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.information</code>.
     */
    public void setInformation(String value) {
        set(18, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.information</code>.
     */
    public String getInformation() {
        return (String) get(18);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.relation_type</code>.
     */
    public void setRelationType(Long value) {
        set(19, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict_audit.relation_type</code>.
     */
    public Long getRelationType() {
        return (Long) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row20<Long, Long, Long, String, OffsetDateTime, OffsetDateTime, Long, Long, Long, Long, String, Long, Long, Long, Long, String, String, String, String, Long> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    @Override
    public Row20<Long, Long, Long, String, OffsetDateTime, OffsetDateTime, Long, Long, Long, Long, String, Long, Long, Long, Long, String, String, String, String, Long> valuesRow() {
        return (Row20) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.ID;
    }

    @Override
    public Field<Long> field2() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.RECORD_ID;
    }

    @Override
    public Field<Long> field3() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.CORRECTION_LOG_ID;
    }

    @Override
    public Field<String> field4() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.UPDATE_USER;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.EFF_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.EXP_DTTM;
    }

    @Override
    public Field<Long> field7() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.DECLARANT_ID;
    }

    @Override
    public Field<Long> field8() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.DECLARANT_PERSON_ID;
    }

    @Override
    public Field<Long> field9() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.DECLARANT_DOC_ID;
    }

    @Override
    public Field<Long> field10() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.DECLARANT_PERSON_DOCUMENT_ID;
    }

    @Override
    public Field<String> field11() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.RELATION_DOC;
    }

    @Override
    public Field<Long> field12() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.CHILD_ID;
    }

    @Override
    public Field<Long> field13() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.CHILD_PERSON_ID;
    }

    @Override
    public Field<Long> field14() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.CHILD_DOC_ID;
    }

    @Override
    public Field<Long> field15() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.CHILD_PERSON_DOCUMENT_ID;
    }

    @Override
    public Field<String> field16() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.DECLARANT_REG;
    }

    @Override
    public Field<String> field17() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.DECLARENT_ADDRESS;
    }

    @Override
    public Field<String> field18() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.CHILD_REG;
    }

    @Override
    public Field<String> field19() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.INFORMATION;
    }

    @Override
    public Field<Long> field20() {
        return AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT.RELATION_TYPE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getRecordId();
    }

    @Override
    public Long component3() {
        return getCorrectionLogId();
    }

    @Override
    public String component4() {
        return getUpdateUser();
    }

    @Override
    public OffsetDateTime component5() {
        return getEffDttm();
    }

    @Override
    public OffsetDateTime component6() {
        return getExpDttm();
    }

    @Override
    public Long component7() {
        return getDeclarantId();
    }

    @Override
    public Long component8() {
        return getDeclarantPersonId();
    }

    @Override
    public Long component9() {
        return getDeclarantDocId();
    }

    @Override
    public Long component10() {
        return getDeclarantPersonDocumentId();
    }

    @Override
    public String component11() {
        return getRelationDoc();
    }

    @Override
    public Long component12() {
        return getChildId();
    }

    @Override
    public Long component13() {
        return getChildPersonId();
    }

    @Override
    public Long component14() {
        return getChildDocId();
    }

    @Override
    public Long component15() {
        return getChildPersonDocumentId();
    }

    @Override
    public String component16() {
        return getDeclarantReg();
    }

    @Override
    public String component17() {
        return getDeclarentAddress();
    }

    @Override
    public String component18() {
        return getChildReg();
    }

    @Override
    public String component19() {
        return getInformation();
    }

    @Override
    public Long component20() {
        return getRelationType();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getRecordId();
    }

    @Override
    public Long value3() {
        return getCorrectionLogId();
    }

    @Override
    public String value4() {
        return getUpdateUser();
    }

    @Override
    public OffsetDateTime value5() {
        return getEffDttm();
    }

    @Override
    public OffsetDateTime value6() {
        return getExpDttm();
    }

    @Override
    public Long value7() {
        return getDeclarantId();
    }

    @Override
    public Long value8() {
        return getDeclarantPersonId();
    }

    @Override
    public Long value9() {
        return getDeclarantDocId();
    }

    @Override
    public Long value10() {
        return getDeclarantPersonDocumentId();
    }

    @Override
    public String value11() {
        return getRelationDoc();
    }

    @Override
    public Long value12() {
        return getChildId();
    }

    @Override
    public Long value13() {
        return getChildPersonId();
    }

    @Override
    public Long value14() {
        return getChildDocId();
    }

    @Override
    public Long value15() {
        return getChildPersonDocumentId();
    }

    @Override
    public String value16() {
        return getDeclarantReg();
    }

    @Override
    public String value17() {
        return getDeclarentAddress();
    }

    @Override
    public String value18() {
        return getChildReg();
    }

    @Override
    public String value19() {
        return getInformation();
    }

    @Override
    public Long value20() {
        return getRelationType();
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value2(Long value) {
        setRecordId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value3(Long value) {
        setCorrectionLogId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value4(String value) {
        setUpdateUser(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value5(OffsetDateTime value) {
        setEffDttm(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value6(OffsetDateTime value) {
        setExpDttm(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value7(Long value) {
        setDeclarantId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value8(Long value) {
        setDeclarantPersonId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value9(Long value) {
        setDeclarantDocId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value10(Long value) {
        setDeclarantPersonDocumentId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value11(String value) {
        setRelationDoc(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value12(Long value) {
        setChildId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value13(Long value) {
        setChildPersonId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value14(Long value) {
        setChildDocId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value15(Long value) {
        setChildPersonDocumentId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value16(String value) {
        setDeclarantReg(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value17(String value) {
        setDeclarentAddress(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value18(String value) {
        setChildReg(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value19(String value) {
        setInformation(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord value20(Long value) {
        setRelationType(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictAuditRecord values(Long value1, Long value2, Long value3, String value4, OffsetDateTime value5, OffsetDateTime value6, Long value7, Long value8, Long value9, Long value10, String value11, Long value12, Long value13, Long value14, Long value15, String value16, String value17, String value18, String value19, Long value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AsrpFpaChildRestrictAuditRecord
     */
    public AsrpFpaChildRestrictAuditRecord() {
        super(AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT);
    }

    /**
     * Create a detached, initialised AsrpFpaChildRestrictAuditRecord
     */
    public AsrpFpaChildRestrictAuditRecord(Long id, Long recordId, Long correctionLogId, String updateUser, OffsetDateTime effDttm, OffsetDateTime expDttm, Long declarantId, Long declarantPersonId, Long declarantDocId, Long declarantPersonDocumentId, String relationDoc, Long childId, Long childPersonId, Long childDocId, Long childPersonDocumentId, String declarantReg, String declarentAddress, String childReg, String information, Long relationType) {
        super(AsrpFpaChildRestrictAudit.ASRP_FPA_CHILD_RESTRICT_AUDIT);

        setId(id);
        setRecordId(recordId);
        setCorrectionLogId(correctionLogId);
        setUpdateUser(updateUser);
        setEffDttm(effDttm);
        setExpDttm(expDttm);
        setDeclarantId(declarantId);
        setDeclarantPersonId(declarantPersonId);
        setDeclarantDocId(declarantDocId);
        setDeclarantPersonDocumentId(declarantPersonDocumentId);
        setRelationDoc(relationDoc);
        setChildId(childId);
        setChildPersonId(childPersonId);
        setChildDocId(childDocId);
        setChildPersonDocumentId(childPersonDocumentId);
        setDeclarantReg(declarantReg);
        setDeclarentAddress(declarentAddress);
        setChildReg(childReg);
        setInformation(information);
        setRelationType(relationType);
        resetChangedOnNotNull();
    }
}
