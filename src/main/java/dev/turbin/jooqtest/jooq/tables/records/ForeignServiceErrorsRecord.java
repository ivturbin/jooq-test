/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.ForeignServiceErrors;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * Ошибки сторонних учетов
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ForeignServiceErrorsRecord extends TableRecordImpl<ForeignServiceErrorsRecord> implements Record7<Long, String, String, String, String, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>passport_international.foreign_service_errors.id</code>.
     * Порядковый номер
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>passport_international.foreign_service_errors.id</code>.
     * Порядковый номер
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.foreign_service_errors.migration_source</code>.
     * Источник миграции
     */
    public void setMigrationSource(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.foreign_service_errors.migration_source</code>.
     * Источник миграции
     */
    public String getMigrationSource() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.foreign_service_errors.service_name</code>.
     * Название стороннего сервиса
     */
    public void setServiceName(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.foreign_service_errors.service_name</code>.
     * Название стороннего сервиса
     */
    public String getServiceName() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.foreign_service_errors.value</code>.
     * Значение, из-за которого получена ошибка
     */
    public void setValue(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.foreign_service_errors.value</code>.
     * Значение, из-за которого получена ошибка
     */
    public String getValue() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.foreign_service_errors.error_extra_info</code>.
     * Дополнительная информация об ошибке, к примеру название справочника НСИ
     */
    public void setErrorExtraInfo(String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.foreign_service_errors.error_extra_info</code>.
     * Дополнительная информация об ошибке, к примеру название справочника НСИ
     */
    public String getErrorExtraInfo() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.foreign_service_errors.create_dttm</code>.
     * Дата сохранения записи
     */
    public void setCreateDttm(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.foreign_service_errors.create_dttm</code>.
     * Дата сохранения записи
     */
    public LocalDateTime getCreateDttm() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.foreign_service_errors.error_title</code>.
     * Название ошибки
     */
    public void setErrorTitle(String value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.foreign_service_errors.error_title</code>.
     * Название ошибки
     */
    public String getErrorTitle() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, String, String, String, LocalDateTime, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, String, String, String, LocalDateTime, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ForeignServiceErrors.FOREIGN_SERVICE_ERRORS.ID;
    }

    @Override
    public Field<String> field2() {
        return ForeignServiceErrors.FOREIGN_SERVICE_ERRORS.MIGRATION_SOURCE;
    }

    @Override
    public Field<String> field3() {
        return ForeignServiceErrors.FOREIGN_SERVICE_ERRORS.SERVICE_NAME;
    }

    @Override
    public Field<String> field4() {
        return ForeignServiceErrors.FOREIGN_SERVICE_ERRORS.VALUE;
    }

    @Override
    public Field<String> field5() {
        return ForeignServiceErrors.FOREIGN_SERVICE_ERRORS.ERROR_EXTRA_INFO;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return ForeignServiceErrors.FOREIGN_SERVICE_ERRORS.CREATE_DTTM;
    }

    @Override
    public Field<String> field7() {
        return ForeignServiceErrors.FOREIGN_SERVICE_ERRORS.ERROR_TITLE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getMigrationSource();
    }

    @Override
    public String component3() {
        return getServiceName();
    }

    @Override
    public String component4() {
        return getValue();
    }

    @Override
    public String component5() {
        return getErrorExtraInfo();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateDttm();
    }

    @Override
    public String component7() {
        return getErrorTitle();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getMigrationSource();
    }

    @Override
    public String value3() {
        return getServiceName();
    }

    @Override
    public String value4() {
        return getValue();
    }

    @Override
    public String value5() {
        return getErrorExtraInfo();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateDttm();
    }

    @Override
    public String value7() {
        return getErrorTitle();
    }

    @Override
    public ForeignServiceErrorsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ForeignServiceErrorsRecord value2(String value) {
        setMigrationSource(value);
        return this;
    }

    @Override
    public ForeignServiceErrorsRecord value3(String value) {
        setServiceName(value);
        return this;
    }

    @Override
    public ForeignServiceErrorsRecord value4(String value) {
        setValue(value);
        return this;
    }

    @Override
    public ForeignServiceErrorsRecord value5(String value) {
        setErrorExtraInfo(value);
        return this;
    }

    @Override
    public ForeignServiceErrorsRecord value6(LocalDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public ForeignServiceErrorsRecord value7(String value) {
        setErrorTitle(value);
        return this;
    }

    @Override
    public ForeignServiceErrorsRecord values(Long value1, String value2, String value3, String value4, String value5, LocalDateTime value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ForeignServiceErrorsRecord
     */
    public ForeignServiceErrorsRecord() {
        super(ForeignServiceErrors.FOREIGN_SERVICE_ERRORS);
    }

    /**
     * Create a detached, initialised ForeignServiceErrorsRecord
     */
    public ForeignServiceErrorsRecord(Long id, String migrationSource, String serviceName, String value, String errorExtraInfo, LocalDateTime createDttm, String errorTitle) {
        super(ForeignServiceErrors.FOREIGN_SERVICE_ERRORS);

        setId(id);
        setMigrationSource(migrationSource);
        setServiceName(serviceName);
        setValue(value);
        setErrorExtraInfo(errorExtraInfo);
        setCreateDttm(createDttm);
        setErrorTitle(errorTitle);
        resetChangedOnNotNull();
    }
}
