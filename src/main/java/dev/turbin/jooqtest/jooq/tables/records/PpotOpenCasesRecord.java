/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.PpotOpenCases;

import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Открытые дела в системе ППОТ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PpotOpenCasesRecord extends UpdatableRecordImpl<PpotOpenCasesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.ppot_open_case_id</code>.
     * Идентификатор
     */
    public void setPpotOpenCaseId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.ppot_open_case_id</code>.
     * Идентификатор
     */
    public Long getPpotOpenCaseId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.source_system_id</code>.
     * Идентификатор системы источник
     */
    public void setSourceSystemId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.source_system_id</code>.
     * Идентификатор системы источник
     */
    public Long getSourceSystemId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.case_source_id</code>.
     * Идентификатор дела в системе источник
     */
    public void setCaseSourceId(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.case_source_id</code>.
     * Идентификатор дела в системе источник
     */
    public Long getCaseSourceId() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.case_type_id</code>. Тип
     * дела
     */
    public void setCaseTypeId(Long value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.case_type_id</code>. Тип
     * дела
     */
    public Long getCaseTypeId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>passport_international.ppot_open_cases.case_no</code>.
     * Номер дела
     */
    public void setCaseNo(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>passport_international.ppot_open_cases.case_no</code>.
     * Номер дела
     */
    public String getCaseNo() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.case_department_id</code>.
     * Департамент, где заведено дело
     */
    public void setCaseDepartmentId(Long value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.case_department_id</code>.
     * Департамент, где заведено дело
     */
    public Long getCaseDepartmentId() {
        return (Long) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.case_create_supplier_id</code>.
     * Идентификатор поставщика, в системе которого создано дело
     */
    public void setCaseCreateSupplierId(Long value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.case_create_supplier_id</code>.
     * Идентификатор поставщика, в системе которого создано дело
     */
    public Long getCaseCreateSupplierId() {
        return (Long) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.case_reception_supplier_id</code>.
     * Идентификатор поставщика данных для дела
     */
    public void setCaseReceptionSupplierId(Long value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.case_reception_supplier_id</code>.
     * Идентификатор поставщика данных для дела
     */
    public Long getCaseReceptionSupplierId() {
        return (Long) get(7);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.case_reception_dt</code>.
     * Дата приема заявления
     */
    public void setCaseReceptionDt(LocalDate value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.case_reception_dt</code>.
     * Дата приема заявления
     */
    public LocalDate getCaseReceptionDt() {
        return (LocalDate) get(8);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.case_create_dt</code>. Дата
     * создания записи
     */
    public void setCaseCreateDt(LocalDate value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.case_create_dt</code>. Дата
     * создания записи
     */
    public LocalDate getCaseCreateDt() {
        return (LocalDate) get(9);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.case_update_dt</code>. Дата
     * последнего изменения записи
     */
    public void setCaseUpdateDt(LocalDate value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.case_update_dt</code>. Дата
     * последнего изменения записи
     */
    public LocalDate getCaseUpdateDt() {
        return (LocalDate) get(10);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.doc_type_id</code>. Тип
     * документа
     */
    public void setDocTypeId(Long value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.doc_type_id</code>. Тип
     * документа
     */
    public Long getDocTypeId() {
        return (Long) get(11);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.doc_status_id</code>. Статус
     * документа
     */
    public void setDocStatusId(Long value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.doc_status_id</code>. Статус
     * документа
     */
    public Long getDocStatusId() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>passport_international.ppot_open_cases.doc_no</code>.
     * Номер документа
     */
    public void setDocNo(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>passport_international.ppot_open_cases.doc_no</code>.
     * Номер документа
     */
    public String getDocNo() {
        return (String) get(13);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.doc_series_code</code>.
     * Серия документа
     */
    public void setDocSeriesCode(String value) {
        set(14, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.doc_series_code</code>.
     * Серия документа
     */
    public String getDocSeriesCode() {
        return (String) get(14);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.doc_issued_dt</code>. Дата
     * выдачи
     */
    public void setDocIssuedDt(LocalDate value) {
        set(15, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.doc_issued_dt</code>. Дата
     * выдачи
     */
    public LocalDate getDocIssuedDt() {
        return (LocalDate) get(15);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.doc_valid_from_dt</code>.
     * Действителен с
     */
    public void setDocValidFromDt(LocalDate value) {
        set(16, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.doc_valid_from_dt</code>.
     * Действителен с
     */
    public LocalDate getDocValidFromDt() {
        return (LocalDate) get(16);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.doc_valid_to_dt</code>.
     * Действителен по
     */
    public void setDocValidToDt(LocalDate value) {
        set(17, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.doc_valid_to_dt</code>.
     * Действителен по
     */
    public LocalDate getDocValidToDt() {
        return (LocalDate) get(17);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.doc_birth_place_cval</code>.
     * Дата последнего изменения записи
     */
    public void setDocBirthPlaceCval(String value) {
        set(18, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.doc_birth_place_cval</code>.
     * Дата последнего изменения записи
     */
    public String getDocBirthPlaceCval() {
        return (String) get(18);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.doc_authority_id</code>.
     * Орган, выдавший документ
     */
    public void setDocAuthorityId(Long value) {
        set(19, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.doc_authority_id</code>.
     * Орган, выдавший документ
     */
    public Long getDocAuthorityId() {
        return (Long) get(19);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.doc_authority_code</code>.
     * Код подразделения, выдавшего документ
     */
    public void setDocAuthorityCode(String value) {
        set(20, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.doc_authority_code</code>.
     * Код подразделения, выдавшего документ
     */
    public String getDocAuthorityCode() {
        return (String) get(20);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.doc_authority_cval</code>.
     * Кем выдан документ
     */
    public void setDocAuthorityCval(String value) {
        set(21, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.doc_authority_cval</code>.
     * Кем выдан документ
     */
    public String getDocAuthorityCval() {
        return (String) get(21);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.person_first_name</code>.
     * Имя
     */
    public void setPersonFirstName(String value) {
        set(22, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.person_first_name</code>.
     * Имя
     */
    public String getPersonFirstName() {
        return (String) get(22);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.person_last_name</code>.
     * Фамилия
     */
    public void setPersonLastName(String value) {
        set(23, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.person_last_name</code>.
     * Фамилия
     */
    public String getPersonLastName() {
        return (String) get(23);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.person_middle_name</code>.
     * Отчество
     */
    public void setPersonMiddleName(String value) {
        set(24, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.person_middle_name</code>.
     * Отчество
     */
    public String getPersonMiddleName() {
        return (String) get(24);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.person_first_name_lat</code>.
     * Имя на латинице
     */
    public void setPersonFirstNameLat(String value) {
        set(25, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.person_first_name_lat</code>.
     * Имя на латинице
     */
    public String getPersonFirstNameLat() {
        return (String) get(25);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.person_last_name_lat</code>.
     * Фамилия на латинице
     */
    public void setPersonLastNameLat(String value) {
        set(26, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.person_last_name_lat</code>.
     * Фамилия на латинице
     */
    public String getPersonLastNameLat() {
        return (String) get(26);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.person_middle_name_lat</code>.
     * Отчество на латинице
     */
    public void setPersonMiddleNameLat(String value) {
        set(27, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.person_middle_name_lat</code>.
     * Отчество на латинице
     */
    public String getPersonMiddleNameLat() {
        return (String) get(27);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.person_gender_id</code>. Пол
     */
    public void setPersonGenderId(Long value) {
        set(28, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.person_gender_id</code>. Пол
     */
    public Long getPersonGenderId() {
        return (Long) get(28);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.person_birth_dt</code>. Дата
     * рождения
     */
    public void setPersonBirthDt(LocalDate value) {
        set(29, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.person_birth_dt</code>. Дата
     * рождения
     */
    public LocalDate getPersonBirthDt() {
        return (LocalDate) get(29);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.person_birth_dt_integrity</code>.
     * Полнота даты рождения: 0 - отсутствует, 1 - год, 2 - год и месяц, 3 -
     * полная дата
     */
    public void setPersonBirthDtIntegrity(Long value) {
        set(30, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.person_birth_dt_integrity</code>.
     * Полнота даты рождения: 0 - отсутствует, 1 - год, 2 - год и месяц, 3 -
     * полная дата
     */
    public Long getPersonBirthDtIntegrity() {
        return (Long) get(30);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.person_birth_country_id</code>.
     * Страна рождения
     */
    public void setPersonBirthCountryId(Long value) {
        set(31, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.person_birth_country_id</code>.
     * Страна рождения
     */
    public Long getPersonBirthCountryId() {
        return (Long) get(31);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.create_dttm</code>.
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(32, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.create_dttm</code>.
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(32);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.action_ind</code>.
     */
    public void setActionInd(String value) {
        set(33, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.action_ind</code>.
     */
    public String getActionInd() {
        return (String) get(33);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.core_case_id</code>.
     */
    public void setCoreCaseId(Long value) {
        set(34, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.core_case_id</code>.
     */
    public Long getCoreCaseId() {
        return (Long) get(34);
    }

    /**
     * Setter for
     * <code>passport_international.ppot_open_cases.modify_dttm</code>.
     */
    public void setModifyDttm(OffsetDateTime value) {
        set(35, value);
    }

    /**
     * Getter for
     * <code>passport_international.ppot_open_cases.modify_dttm</code>.
     */
    public OffsetDateTime getModifyDttm() {
        return (OffsetDateTime) get(35);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PpotOpenCasesRecord
     */
    public PpotOpenCasesRecord() {
        super(PpotOpenCases.PPOT_OPEN_CASES);
    }

    /**
     * Create a detached, initialised PpotOpenCasesRecord
     */
    public PpotOpenCasesRecord(Long ppotOpenCaseId, Long sourceSystemId, Long caseSourceId, Long caseTypeId, String caseNo, Long caseDepartmentId, Long caseCreateSupplierId, Long caseReceptionSupplierId, LocalDate caseReceptionDt, LocalDate caseCreateDt, LocalDate caseUpdateDt, Long docTypeId, Long docStatusId, String docNo, String docSeriesCode, LocalDate docIssuedDt, LocalDate docValidFromDt, LocalDate docValidToDt, String docBirthPlaceCval, Long docAuthorityId, String docAuthorityCode, String docAuthorityCval, String personFirstName, String personLastName, String personMiddleName, String personFirstNameLat, String personLastNameLat, String personMiddleNameLat, Long personGenderId, LocalDate personBirthDt, Long personBirthDtIntegrity, Long personBirthCountryId, OffsetDateTime createDttm, String actionInd, Long coreCaseId, OffsetDateTime modifyDttm) {
        super(PpotOpenCases.PPOT_OPEN_CASES);

        setPpotOpenCaseId(ppotOpenCaseId);
        setSourceSystemId(sourceSystemId);
        setCaseSourceId(caseSourceId);
        setCaseTypeId(caseTypeId);
        setCaseNo(caseNo);
        setCaseDepartmentId(caseDepartmentId);
        setCaseCreateSupplierId(caseCreateSupplierId);
        setCaseReceptionSupplierId(caseReceptionSupplierId);
        setCaseReceptionDt(caseReceptionDt);
        setCaseCreateDt(caseCreateDt);
        setCaseUpdateDt(caseUpdateDt);
        setDocTypeId(docTypeId);
        setDocStatusId(docStatusId);
        setDocNo(docNo);
        setDocSeriesCode(docSeriesCode);
        setDocIssuedDt(docIssuedDt);
        setDocValidFromDt(docValidFromDt);
        setDocValidToDt(docValidToDt);
        setDocBirthPlaceCval(docBirthPlaceCval);
        setDocAuthorityId(docAuthorityId);
        setDocAuthorityCode(docAuthorityCode);
        setDocAuthorityCval(docAuthorityCval);
        setPersonFirstName(personFirstName);
        setPersonLastName(personLastName);
        setPersonMiddleName(personMiddleName);
        setPersonFirstNameLat(personFirstNameLat);
        setPersonLastNameLat(personLastNameLat);
        setPersonMiddleNameLat(personMiddleNameLat);
        setPersonGenderId(personGenderId);
        setPersonBirthDt(personBirthDt);
        setPersonBirthDtIntegrity(personBirthDtIntegrity);
        setPersonBirthCountryId(personBirthCountryId);
        setCreateDttm(createDttm);
        setActionInd(actionInd);
        setCoreCaseId(coreCaseId);
        setModifyDttm(modifyDttm);
        resetChangedOnNotNull();
    }
}
