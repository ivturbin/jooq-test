/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.ViewCoreComment;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewCoreCommentRecord extends TableRecordImpl<ViewCoreCommentRecord> implements Record7<Long, Long, String, String, OffsetDateTime, OffsetDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.view_core_comment.core_comment_id</code>.
     */
    public void setCoreCommentId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.view_core_comment.core_comment_id</code>.
     */
    public Long getCoreCommentId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.view_core_comment.core_case_id</code>.
     */
    public void setCoreCaseId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.view_core_comment.core_case_id</code>.
     */
    public Long getCoreCaseId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.view_core_comment.create_user</code>.
     */
    public void setCreateUser(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.view_core_comment.create_user</code>.
     */
    public String getCreateUser() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.view_core_comment.comment_desc</code>.
     */
    public void setCommentDesc(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.view_core_comment.comment_desc</code>.
     */
    public String getCommentDesc() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.view_core_comment.create_dttm</code>.
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.view_core_comment.create_dttm</code>.
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.view_core_comment.modify_dttm</code>.
     */
    public void setModifyDttm(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.view_core_comment.modify_dttm</code>.
     */
    public OffsetDateTime getModifyDttm() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.view_core_comment.action_ind</code>.
     */
    public void setActionInd(String value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.view_core_comment.action_ind</code>.
     */
    public String getActionInd() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, String, String, OffsetDateTime, OffsetDateTime, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, String, String, OffsetDateTime, OffsetDateTime, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ViewCoreComment.VIEW_CORE_COMMENT.CORE_COMMENT_ID;
    }

    @Override
    public Field<Long> field2() {
        return ViewCoreComment.VIEW_CORE_COMMENT.CORE_CASE_ID;
    }

    @Override
    public Field<String> field3() {
        return ViewCoreComment.VIEW_CORE_COMMENT.CREATE_USER;
    }

    @Override
    public Field<String> field4() {
        return ViewCoreComment.VIEW_CORE_COMMENT.COMMENT_DESC;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return ViewCoreComment.VIEW_CORE_COMMENT.CREATE_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return ViewCoreComment.VIEW_CORE_COMMENT.MODIFY_DTTM;
    }

    @Override
    public Field<String> field7() {
        return ViewCoreComment.VIEW_CORE_COMMENT.ACTION_IND;
    }

    @Override
    public Long component1() {
        return getCoreCommentId();
    }

    @Override
    public Long component2() {
        return getCoreCaseId();
    }

    @Override
    public String component3() {
        return getCreateUser();
    }

    @Override
    public String component4() {
        return getCommentDesc();
    }

    @Override
    public OffsetDateTime component5() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime component6() {
        return getModifyDttm();
    }

    @Override
    public String component7() {
        return getActionInd();
    }

    @Override
    public Long value1() {
        return getCoreCommentId();
    }

    @Override
    public Long value2() {
        return getCoreCaseId();
    }

    @Override
    public String value3() {
        return getCreateUser();
    }

    @Override
    public String value4() {
        return getCommentDesc();
    }

    @Override
    public OffsetDateTime value5() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime value6() {
        return getModifyDttm();
    }

    @Override
    public String value7() {
        return getActionInd();
    }

    @Override
    public ViewCoreCommentRecord value1(Long value) {
        setCoreCommentId(value);
        return this;
    }

    @Override
    public ViewCoreCommentRecord value2(Long value) {
        setCoreCaseId(value);
        return this;
    }

    @Override
    public ViewCoreCommentRecord value3(String value) {
        setCreateUser(value);
        return this;
    }

    @Override
    public ViewCoreCommentRecord value4(String value) {
        setCommentDesc(value);
        return this;
    }

    @Override
    public ViewCoreCommentRecord value5(OffsetDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public ViewCoreCommentRecord value6(OffsetDateTime value) {
        setModifyDttm(value);
        return this;
    }

    @Override
    public ViewCoreCommentRecord value7(String value) {
        setActionInd(value);
        return this;
    }

    @Override
    public ViewCoreCommentRecord values(Long value1, Long value2, String value3, String value4, OffsetDateTime value5, OffsetDateTime value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewCoreCommentRecord
     */
    public ViewCoreCommentRecord() {
        super(ViewCoreComment.VIEW_CORE_COMMENT);
    }

    /**
     * Create a detached, initialised ViewCoreCommentRecord
     */
    public ViewCoreCommentRecord(Long coreCommentId, Long coreCaseId, String createUser, String commentDesc, OffsetDateTime createDttm, OffsetDateTime modifyDttm, String actionInd) {
        super(ViewCoreComment.VIEW_CORE_COMMENT);

        setCoreCommentId(coreCommentId);
        setCoreCaseId(coreCaseId);
        setCreateUser(createUser);
        setCommentDesc(commentDesc);
        setCreateDttm(createDttm);
        setModifyDttm(modifyDttm);
        setActionInd(actionInd);
        resetChangedOnNotNull();
    }
}
