/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.ViewFpaCaseValid;

import java.time.LocalDateTime;
import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewFpaCaseValidRecord extends TableRecordImpl<ViewFpaCaseValidRecord> implements Record8<Long, Long, Long, OffsetDateTime, OffsetDateTime, LocalDateTime, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.view_fpa_case_valid.fpa_case_valid_id</code>.
     */
    public void setFpaCaseValidId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.view_fpa_case_valid.fpa_case_valid_id</code>.
     */
    public Long getFpaCaseValidId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.view_fpa_case_valid.fpa_case_issue_id</code>.
     */
    public void setFpaCaseIssueId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.view_fpa_case_valid.fpa_case_issue_id</code>.
     */
    public Long getFpaCaseIssueId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.view_fpa_case_valid.src_id</code>.
     * Идентификатор источника с которого получены информация
     */
    public void setSrcId(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.view_fpa_case_valid.src_id</code>.
     * Идентификатор источника с которого получены информация
     */
    public Long getSrcId() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.view_fpa_case_valid.create_dttm</code>. Дата
     * время вставки записи в таблицу
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.view_fpa_case_valid.create_dttm</code>. Дата
     * время вставки записи в таблицу
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.view_fpa_case_valid.modify_dttm</code>. Дата
     * время последнего изменения записи
     */
    public void setModifyDttm(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.view_fpa_case_valid.modify_dttm</code>. Дата
     * время последнего изменения записи
     */
    public OffsetDateTime getModifyDttm() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.view_fpa_case_valid.exp_dttm</code>. Поля
     * отображения периода действия технической истории
     */
    public void setExpDttm(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.view_fpa_case_valid.exp_dttm</code>. Поля
     * отображения периода действия технической истории
     */
    public LocalDateTime getExpDttm() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.view_fpa_case_valid.eff_dttm</code>. Поля
     * отображения периода действия технической истории
     */
    public void setEffDttm(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.view_fpa_case_valid.eff_dttm</code>. Поля
     * отображения периода действия технической истории
     */
    public LocalDateTime getEffDttm() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.view_fpa_case_valid.action_ind</code>.
     * Индикатор операции DML(I-insert,D-delete,U-update)
     */
    public void setActionInd(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.view_fpa_case_valid.action_ind</code>.
     * Индикатор операции DML(I-insert,D-delete,U-update)
     */
    public String getActionInd() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, Long, OffsetDateTime, OffsetDateTime, LocalDateTime, LocalDateTime, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, Long, OffsetDateTime, OffsetDateTime, LocalDateTime, LocalDateTime, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ViewFpaCaseValid.VIEW_FPA_CASE_VALID.FPA_CASE_VALID_ID;
    }

    @Override
    public Field<Long> field2() {
        return ViewFpaCaseValid.VIEW_FPA_CASE_VALID.FPA_CASE_ISSUE_ID;
    }

    @Override
    public Field<Long> field3() {
        return ViewFpaCaseValid.VIEW_FPA_CASE_VALID.SRC_ID;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return ViewFpaCaseValid.VIEW_FPA_CASE_VALID.CREATE_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return ViewFpaCaseValid.VIEW_FPA_CASE_VALID.MODIFY_DTTM;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return ViewFpaCaseValid.VIEW_FPA_CASE_VALID.EXP_DTTM;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return ViewFpaCaseValid.VIEW_FPA_CASE_VALID.EFF_DTTM;
    }

    @Override
    public Field<String> field8() {
        return ViewFpaCaseValid.VIEW_FPA_CASE_VALID.ACTION_IND;
    }

    @Override
    public Long component1() {
        return getFpaCaseValidId();
    }

    @Override
    public Long component2() {
        return getFpaCaseIssueId();
    }

    @Override
    public Long component3() {
        return getSrcId();
    }

    @Override
    public OffsetDateTime component4() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime component5() {
        return getModifyDttm();
    }

    @Override
    public LocalDateTime component6() {
        return getExpDttm();
    }

    @Override
    public LocalDateTime component7() {
        return getEffDttm();
    }

    @Override
    public String component8() {
        return getActionInd();
    }

    @Override
    public Long value1() {
        return getFpaCaseValidId();
    }

    @Override
    public Long value2() {
        return getFpaCaseIssueId();
    }

    @Override
    public Long value3() {
        return getSrcId();
    }

    @Override
    public OffsetDateTime value4() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime value5() {
        return getModifyDttm();
    }

    @Override
    public LocalDateTime value6() {
        return getExpDttm();
    }

    @Override
    public LocalDateTime value7() {
        return getEffDttm();
    }

    @Override
    public String value8() {
        return getActionInd();
    }

    @Override
    public ViewFpaCaseValidRecord value1(Long value) {
        setFpaCaseValidId(value);
        return this;
    }

    @Override
    public ViewFpaCaseValidRecord value2(Long value) {
        setFpaCaseIssueId(value);
        return this;
    }

    @Override
    public ViewFpaCaseValidRecord value3(Long value) {
        setSrcId(value);
        return this;
    }

    @Override
    public ViewFpaCaseValidRecord value4(OffsetDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public ViewFpaCaseValidRecord value5(OffsetDateTime value) {
        setModifyDttm(value);
        return this;
    }

    @Override
    public ViewFpaCaseValidRecord value6(LocalDateTime value) {
        setExpDttm(value);
        return this;
    }

    @Override
    public ViewFpaCaseValidRecord value7(LocalDateTime value) {
        setEffDttm(value);
        return this;
    }

    @Override
    public ViewFpaCaseValidRecord value8(String value) {
        setActionInd(value);
        return this;
    }

    @Override
    public ViewFpaCaseValidRecord values(Long value1, Long value2, Long value3, OffsetDateTime value4, OffsetDateTime value5, LocalDateTime value6, LocalDateTime value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewFpaCaseValidRecord
     */
    public ViewFpaCaseValidRecord() {
        super(ViewFpaCaseValid.VIEW_FPA_CASE_VALID);
    }

    /**
     * Create a detached, initialised ViewFpaCaseValidRecord
     */
    public ViewFpaCaseValidRecord(Long fpaCaseValidId, Long fpaCaseIssueId, Long srcId, OffsetDateTime createDttm, OffsetDateTime modifyDttm, LocalDateTime expDttm, LocalDateTime effDttm, String actionInd) {
        super(ViewFpaCaseValid.VIEW_FPA_CASE_VALID);

        setFpaCaseValidId(fpaCaseValidId);
        setFpaCaseIssueId(fpaCaseIssueId);
        setSrcId(srcId);
        setCreateDttm(createDttm);
        setModifyDttm(modifyDttm);
        setExpDttm(expDttm);
        setEffDttm(effDttm);
        setActionInd(actionInd);
        resetChangedOnNotNull();
    }
}
