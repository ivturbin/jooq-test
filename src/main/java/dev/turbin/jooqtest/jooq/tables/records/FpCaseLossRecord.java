/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.FpCaseLoss;

import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Дело об утрате заграничного паспорта
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FpCaseLossRecord extends UpdatableRecordImpl<FpCaseLossRecord> implements Record14<Long, LocalDate, LocalDate, Long, String, String, String, Long, OffsetDateTime, OffsetDateTime, String, OffsetDateTime, OffsetDateTime, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>passport_international.fp_case_loss.loss_id</code>.
     * Идентификатор
     */
    public void setLossId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>passport_international.fp_case_loss.loss_id</code>.
     * Идентификатор
     */
    public Long getLossId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>passport_international.fp_case_loss.lost_dt</code>. Дата
     * утраты
     */
    public void setLostDt(LocalDate value) {
        set(1, value);
    }

    /**
     * Getter for <code>passport_international.fp_case_loss.lost_dt</code>. Дата
     * утраты
     */
    public LocalDate getLostDt() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>passport_international.fp_case_loss.lost_cert_dt</code>.
     * Дата выдачи справки об утрате
     */
    public void setLostCertDt(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>passport_international.fp_case_loss.lost_cert_dt</code>.
     * Дата выдачи справки об утрате
     */
    public LocalDate getLostCertDt() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_loss.fp_case_issuance_id</code>.
     * Дело по выдаче заграничного паспорта
     */
    public void setFpCaseIssuanceId(Long value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_loss.fp_case_issuance_id</code>.
     * Дело по выдаче заграничного паспорта
     */
    public Long getFpCaseIssuanceId() {
        return (Long) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_loss.lost_cert_number</code>. Номер
     * справки об утрате
     */
    public void setLostCertNumber(String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_loss.lost_cert_number</code>. Номер
     * справки об утрате
     */
    public String getLostCertNumber() {
        return (String) get(4);
    }

    /**
     * Setter for <code>passport_international.fp_case_loss.lost_reason</code>.
     * Причина утраты
     */
    public void setLostReason(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>passport_international.fp_case_loss.lost_reason</code>.
     * Причина утраты
     */
    public String getLostReason() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_loss.lost_cert_authority</code>.
     * Орган, выдавший справку об утрате
     */
    public void setLostCertAuthority(String value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_loss.lost_cert_authority</code>.
     * Орган, выдавший справку об утрате
     */
    public String getLostCertAuthority() {
        return (String) get(6);
    }

    /**
     * Setter for <code>passport_international.fp_case_loss.src_id</code>.
     * Идентификатор источника с которого получены информация
     */
    public void setSrcId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>passport_international.fp_case_loss.src_id</code>.
     * Идентификатор источника с которого получены информация
     */
    public Long getSrcId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>passport_international.fp_case_loss.create_dttm</code>.
     * Дата время вставки записи в таблицу
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>passport_international.fp_case_loss.create_dttm</code>.
     * Дата время вставки записи в таблицу
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(8);
    }

    /**
     * Setter for <code>passport_international.fp_case_loss.modify_dttm</code>.
     * Дата время последнего изменения записи
     */
    public void setModifyDttm(OffsetDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>passport_international.fp_case_loss.modify_dttm</code>.
     * Дата время последнего изменения записи
     */
    public OffsetDateTime getModifyDttm() {
        return (OffsetDateTime) get(9);
    }

    /**
     * Setter for <code>passport_international.fp_case_loss.action_ind</code>.
     * Индикатор операции DML(I-insert,D-delete,U-update)
     */
    public void setActionInd(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>passport_international.fp_case_loss.action_ind</code>.
     * Индикатор операции DML(I-insert,D-delete,U-update)
     */
    public String getActionInd() {
        return (String) get(10);
    }

    /**
     * Setter for <code>passport_international.fp_case_loss.eff_dttm</code>.
     * Поля отображения периода действия технической истории
     */
    public void setEffDttm(OffsetDateTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>passport_international.fp_case_loss.eff_dttm</code>.
     * Поля отображения периода действия технической истории
     */
    public OffsetDateTime getEffDttm() {
        return (OffsetDateTime) get(11);
    }

    /**
     * Setter for <code>passport_international.fp_case_loss.exp_dttm</code>.
     * Поля отображения периода действия технической истории
     */
    public void setExpDttm(OffsetDateTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>passport_international.fp_case_loss.exp_dttm</code>.
     * Поля отображения периода действия технической истории
     */
    public OffsetDateTime getExpDttm() {
        return (OffsetDateTime) get(12);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_loss.signer_user_id</code>.
     * Подписывающий сотрудник
     */
    public void setSignerUserId(Long value) {
        set(13, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_loss.signer_user_id</code>.
     * Подписывающий сотрудник
     */
    public Long getSignerUserId() {
        return (Long) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Long, LocalDate, LocalDate, Long, String, String, String, Long, OffsetDateTime, OffsetDateTime, String, OffsetDateTime, OffsetDateTime, Long> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Long, LocalDate, LocalDate, Long, String, String, String, Long, OffsetDateTime, OffsetDateTime, String, OffsetDateTime, OffsetDateTime, Long> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return FpCaseLoss.FP_CASE_LOSS.LOSS_ID;
    }

    @Override
    public Field<LocalDate> field2() {
        return FpCaseLoss.FP_CASE_LOSS.LOST_DT;
    }

    @Override
    public Field<LocalDate> field3() {
        return FpCaseLoss.FP_CASE_LOSS.LOST_CERT_DT;
    }

    @Override
    public Field<Long> field4() {
        return FpCaseLoss.FP_CASE_LOSS.FP_CASE_ISSUANCE_ID;
    }

    @Override
    public Field<String> field5() {
        return FpCaseLoss.FP_CASE_LOSS.LOST_CERT_NUMBER;
    }

    @Override
    public Field<String> field6() {
        return FpCaseLoss.FP_CASE_LOSS.LOST_REASON;
    }

    @Override
    public Field<String> field7() {
        return FpCaseLoss.FP_CASE_LOSS.LOST_CERT_AUTHORITY;
    }

    @Override
    public Field<Long> field8() {
        return FpCaseLoss.FP_CASE_LOSS.SRC_ID;
    }

    @Override
    public Field<OffsetDateTime> field9() {
        return FpCaseLoss.FP_CASE_LOSS.CREATE_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field10() {
        return FpCaseLoss.FP_CASE_LOSS.MODIFY_DTTM;
    }

    @Override
    public Field<String> field11() {
        return FpCaseLoss.FP_CASE_LOSS.ACTION_IND;
    }

    @Override
    public Field<OffsetDateTime> field12() {
        return FpCaseLoss.FP_CASE_LOSS.EFF_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field13() {
        return FpCaseLoss.FP_CASE_LOSS.EXP_DTTM;
    }

    @Override
    public Field<Long> field14() {
        return FpCaseLoss.FP_CASE_LOSS.SIGNER_USER_ID;
    }

    @Override
    public Long component1() {
        return getLossId();
    }

    @Override
    public LocalDate component2() {
        return getLostDt();
    }

    @Override
    public LocalDate component3() {
        return getLostCertDt();
    }

    @Override
    public Long component4() {
        return getFpCaseIssuanceId();
    }

    @Override
    public String component5() {
        return getLostCertNumber();
    }

    @Override
    public String component6() {
        return getLostReason();
    }

    @Override
    public String component7() {
        return getLostCertAuthority();
    }

    @Override
    public Long component8() {
        return getSrcId();
    }

    @Override
    public OffsetDateTime component9() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime component10() {
        return getModifyDttm();
    }

    @Override
    public String component11() {
        return getActionInd();
    }

    @Override
    public OffsetDateTime component12() {
        return getEffDttm();
    }

    @Override
    public OffsetDateTime component13() {
        return getExpDttm();
    }

    @Override
    public Long component14() {
        return getSignerUserId();
    }

    @Override
    public Long value1() {
        return getLossId();
    }

    @Override
    public LocalDate value2() {
        return getLostDt();
    }

    @Override
    public LocalDate value3() {
        return getLostCertDt();
    }

    @Override
    public Long value4() {
        return getFpCaseIssuanceId();
    }

    @Override
    public String value5() {
        return getLostCertNumber();
    }

    @Override
    public String value6() {
        return getLostReason();
    }

    @Override
    public String value7() {
        return getLostCertAuthority();
    }

    @Override
    public Long value8() {
        return getSrcId();
    }

    @Override
    public OffsetDateTime value9() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime value10() {
        return getModifyDttm();
    }

    @Override
    public String value11() {
        return getActionInd();
    }

    @Override
    public OffsetDateTime value12() {
        return getEffDttm();
    }

    @Override
    public OffsetDateTime value13() {
        return getExpDttm();
    }

    @Override
    public Long value14() {
        return getSignerUserId();
    }

    @Override
    public FpCaseLossRecord value1(Long value) {
        setLossId(value);
        return this;
    }

    @Override
    public FpCaseLossRecord value2(LocalDate value) {
        setLostDt(value);
        return this;
    }

    @Override
    public FpCaseLossRecord value3(LocalDate value) {
        setLostCertDt(value);
        return this;
    }

    @Override
    public FpCaseLossRecord value4(Long value) {
        setFpCaseIssuanceId(value);
        return this;
    }

    @Override
    public FpCaseLossRecord value5(String value) {
        setLostCertNumber(value);
        return this;
    }

    @Override
    public FpCaseLossRecord value6(String value) {
        setLostReason(value);
        return this;
    }

    @Override
    public FpCaseLossRecord value7(String value) {
        setLostCertAuthority(value);
        return this;
    }

    @Override
    public FpCaseLossRecord value8(Long value) {
        setSrcId(value);
        return this;
    }

    @Override
    public FpCaseLossRecord value9(OffsetDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public FpCaseLossRecord value10(OffsetDateTime value) {
        setModifyDttm(value);
        return this;
    }

    @Override
    public FpCaseLossRecord value11(String value) {
        setActionInd(value);
        return this;
    }

    @Override
    public FpCaseLossRecord value12(OffsetDateTime value) {
        setEffDttm(value);
        return this;
    }

    @Override
    public FpCaseLossRecord value13(OffsetDateTime value) {
        setExpDttm(value);
        return this;
    }

    @Override
    public FpCaseLossRecord value14(Long value) {
        setSignerUserId(value);
        return this;
    }

    @Override
    public FpCaseLossRecord values(Long value1, LocalDate value2, LocalDate value3, Long value4, String value5, String value6, String value7, Long value8, OffsetDateTime value9, OffsetDateTime value10, String value11, OffsetDateTime value12, OffsetDateTime value13, Long value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FpCaseLossRecord
     */
    public FpCaseLossRecord() {
        super(FpCaseLoss.FP_CASE_LOSS);
    }

    /**
     * Create a detached, initialised FpCaseLossRecord
     */
    public FpCaseLossRecord(Long lossId, LocalDate lostDt, LocalDate lostCertDt, Long fpCaseIssuanceId, String lostCertNumber, String lostReason, String lostCertAuthority, Long srcId, OffsetDateTime createDttm, OffsetDateTime modifyDttm, String actionInd, OffsetDateTime effDttm, OffsetDateTime expDttm, Long signerUserId) {
        super(FpCaseLoss.FP_CASE_LOSS);

        setLossId(lossId);
        setLostDt(lostDt);
        setLostCertDt(lostCertDt);
        setFpCaseIssuanceId(fpCaseIssuanceId);
        setLostCertNumber(lostCertNumber);
        setLostReason(lostReason);
        setLostCertAuthority(lostCertAuthority);
        setSrcId(srcId);
        setCreateDttm(createDttm);
        setModifyDttm(modifyDttm);
        setActionInd(actionInd);
        setEffDttm(effDttm);
        setExpDttm(expDttm);
        setSignerUserId(signerUserId);
        resetChangedOnNotNull();
    }
}
