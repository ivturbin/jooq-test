/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.AsrpFpaChildRestrict;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Ограничения выезда несовершеннолетнего из АС РП
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AsrpFpaChildRestrictRecord extends UpdatableRecordImpl<AsrpFpaChildRestrictRecord> implements Record20<Long, Long, Long, Long, Long, String, Long, Long, Long, Long, String, String, String, String, Long, OffsetDateTime, OffsetDateTime, String, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.asrp_fpa_child_restrict_id</code>.
     * Идентификатор записи в таблице
     */
    public void setAsrpFpaChildRestrictId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.asrp_fpa_child_restrict_id</code>.
     * Идентификатор записи в таблице
     */
    public Long getAsrpFpaChildRestrictId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.declarant_id</code>.
     * Идентификатор заявителя (законного представителя) из АС РП
     */
    public void setDeclarantId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.declarant_id</code>.
     * Идентификатор заявителя (законного представителя) из АС РП
     */
    public Long getDeclarantId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.declarant_person_id</code>.
     * Идентификатор заявителя (законного представителя) из ЕСФЛ
     */
    public void setDeclarantPersonId(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.declarant_person_id</code>.
     * Идентификатор заявителя (законного представителя) из ЕСФЛ
     */
    public Long getDeclarantPersonId() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.declarant_doc_id</code>.
     * Документ законного представителя из АС РП
     */
    public void setDeclarantDocId(Long value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.declarant_doc_id</code>.
     * Документ законного представителя из АС РП
     */
    public Long getDeclarantDocId() {
        return (Long) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.declarant_person_document_id</code>.
     * Идентификатор ДУЛ законного представителя
     */
    public void setDeclarantPersonDocumentId(Long value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.declarant_person_document_id</code>.
     * Идентификатор ДУЛ законного представителя
     */
    public Long getDeclarantPersonDocumentId() {
        return (Long) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.relation_doc</code>.
     * Документ, подтверждающий право законного представителя
     */
    public void setRelationDoc(String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.relation_doc</code>.
     * Документ, подтверждающий право законного представителя
     */
    public String getRelationDoc() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.child_id</code>.
     * Идентификатор ребенка из АС РП
     */
    public void setChildId(Long value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.child_id</code>.
     * Идентификатор ребенка из АС РП
     */
    public Long getChildId() {
        return (Long) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.child_person_id</code>.
     * Идентификатор ребенка из ЕСФЛ
     */
    public void setChildPersonId(Long value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.child_person_id</code>.
     * Идентификатор ребенка из ЕСФЛ
     */
    public Long getChildPersonId() {
        return (Long) get(7);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.child_doc_id</code>.
     * Идентификатор документа ребенка из АС РП
     */
    public void setChildDocId(Long value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.child_doc_id</code>.
     * Идентификатор документа ребенка из АС РП
     */
    public Long getChildDocId() {
        return (Long) get(8);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.child_person_document_id</code>.
     * Идентификатор ДУЛ ребенка
     */
    public void setChildPersonDocumentId(Long value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.child_person_document_id</code>.
     * Идентификатор ДУЛ ребенка
     */
    public Long getChildPersonDocumentId() {
        return (Long) get(9);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.declarant_reg</code>.
     * Адрес регистрации законного представителя
     */
    public void setDeclarantReg(String value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.declarant_reg</code>.
     * Адрес регистрации законного представителя
     */
    public String getDeclarantReg() {
        return (String) get(10);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.declarent_address</code>.
     * Адрес фактического проживания
     */
    public void setDeclarentAddress(String value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.declarent_address</code>.
     * Адрес фактического проживания
     */
    public String getDeclarentAddress() {
        return (String) get(11);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.child_reg</code>.
     * Адрес регистрации ребенка
     */
    public void setChildReg(String value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.child_reg</code>.
     * Адрес регистрации ребенка
     */
    public String getChildReg() {
        return (String) get(12);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.information</code>.
     * Информация об ограничении
     */
    public void setInformation(String value) {
        set(13, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.information</code>.
     * Информация об ограничении
     */
    public String getInformation() {
        return (String) get(13);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.relation_type</code>.
     * Степень отношения
     */
    public void setRelationType(Long value) {
        set(14, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.relation_type</code>.
     * Степень отношения
     */
    public Long getRelationType() {
        return (Long) get(14);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.create_dttm</code>.
     * Дата время вставки записи в таблицу
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(15, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.create_dttm</code>.
     * Дата время вставки записи в таблицу
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(15);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.modify_dttm</code>.
     * Дата время последнего изменения записи
     */
    public void setModifyDttm(OffsetDateTime value) {
        set(16, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.modify_dttm</code>.
     * Дата время последнего изменения записи
     */
    public OffsetDateTime getModifyDttm() {
        return (OffsetDateTime) get(16);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.action_ind</code>.
     * Индикатор операции dml(i-insert,d-delete,u-update)
     */
    public void setActionInd(String value) {
        set(17, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.action_ind</code>.
     * Индикатор операции dml(i-insert,d-delete,u-update)
     */
    public String getActionInd() {
        return (String) get(17);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.eff_dttm</code>.
     * Поля отображения периода действия технической истории
     */
    public void setEffDttm(OffsetDateTime value) {
        set(18, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.eff_dttm</code>.
     * Поля отображения периода действия технической истории
     */
    public OffsetDateTime getEffDttm() {
        return (OffsetDateTime) get(18);
    }

    /**
     * Setter for
     * <code>passport_international.asrp_fpa_child_restrict.exp_dttm</code>.
     * Поля отображения периода действия технической истории
     */
    public void setExpDttm(OffsetDateTime value) {
        set(19, value);
    }

    /**
     * Getter for
     * <code>passport_international.asrp_fpa_child_restrict.exp_dttm</code>.
     * Поля отображения периода действия технической истории
     */
    public OffsetDateTime getExpDttm() {
        return (OffsetDateTime) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row20<Long, Long, Long, Long, Long, String, Long, Long, Long, Long, String, String, String, String, Long, OffsetDateTime, OffsetDateTime, String, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    @Override
    public Row20<Long, Long, Long, Long, Long, String, Long, Long, Long, Long, String, String, String, String, Long, OffsetDateTime, OffsetDateTime, String, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row20) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.ASRP_FPA_CHILD_RESTRICT_ID;
    }

    @Override
    public Field<Long> field2() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.DECLARANT_ID;
    }

    @Override
    public Field<Long> field3() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.DECLARANT_PERSON_ID;
    }

    @Override
    public Field<Long> field4() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.DECLARANT_DOC_ID;
    }

    @Override
    public Field<Long> field5() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.DECLARANT_PERSON_DOCUMENT_ID;
    }

    @Override
    public Field<String> field6() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.RELATION_DOC;
    }

    @Override
    public Field<Long> field7() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.CHILD_ID;
    }

    @Override
    public Field<Long> field8() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.CHILD_PERSON_ID;
    }

    @Override
    public Field<Long> field9() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.CHILD_DOC_ID;
    }

    @Override
    public Field<Long> field10() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.CHILD_PERSON_DOCUMENT_ID;
    }

    @Override
    public Field<String> field11() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.DECLARANT_REG;
    }

    @Override
    public Field<String> field12() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.DECLARENT_ADDRESS;
    }

    @Override
    public Field<String> field13() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.CHILD_REG;
    }

    @Override
    public Field<String> field14() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.INFORMATION;
    }

    @Override
    public Field<Long> field15() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.RELATION_TYPE;
    }

    @Override
    public Field<OffsetDateTime> field16() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.CREATE_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field17() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.MODIFY_DTTM;
    }

    @Override
    public Field<String> field18() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.ACTION_IND;
    }

    @Override
    public Field<OffsetDateTime> field19() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.EFF_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field20() {
        return AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT.EXP_DTTM;
    }

    @Override
    public Long component1() {
        return getAsrpFpaChildRestrictId();
    }

    @Override
    public Long component2() {
        return getDeclarantId();
    }

    @Override
    public Long component3() {
        return getDeclarantPersonId();
    }

    @Override
    public Long component4() {
        return getDeclarantDocId();
    }

    @Override
    public Long component5() {
        return getDeclarantPersonDocumentId();
    }

    @Override
    public String component6() {
        return getRelationDoc();
    }

    @Override
    public Long component7() {
        return getChildId();
    }

    @Override
    public Long component8() {
        return getChildPersonId();
    }

    @Override
    public Long component9() {
        return getChildDocId();
    }

    @Override
    public Long component10() {
        return getChildPersonDocumentId();
    }

    @Override
    public String component11() {
        return getDeclarantReg();
    }

    @Override
    public String component12() {
        return getDeclarentAddress();
    }

    @Override
    public String component13() {
        return getChildReg();
    }

    @Override
    public String component14() {
        return getInformation();
    }

    @Override
    public Long component15() {
        return getRelationType();
    }

    @Override
    public OffsetDateTime component16() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime component17() {
        return getModifyDttm();
    }

    @Override
    public String component18() {
        return getActionInd();
    }

    @Override
    public OffsetDateTime component19() {
        return getEffDttm();
    }

    @Override
    public OffsetDateTime component20() {
        return getExpDttm();
    }

    @Override
    public Long value1() {
        return getAsrpFpaChildRestrictId();
    }

    @Override
    public Long value2() {
        return getDeclarantId();
    }

    @Override
    public Long value3() {
        return getDeclarantPersonId();
    }

    @Override
    public Long value4() {
        return getDeclarantDocId();
    }

    @Override
    public Long value5() {
        return getDeclarantPersonDocumentId();
    }

    @Override
    public String value6() {
        return getRelationDoc();
    }

    @Override
    public Long value7() {
        return getChildId();
    }

    @Override
    public Long value8() {
        return getChildPersonId();
    }

    @Override
    public Long value9() {
        return getChildDocId();
    }

    @Override
    public Long value10() {
        return getChildPersonDocumentId();
    }

    @Override
    public String value11() {
        return getDeclarantReg();
    }

    @Override
    public String value12() {
        return getDeclarentAddress();
    }

    @Override
    public String value13() {
        return getChildReg();
    }

    @Override
    public String value14() {
        return getInformation();
    }

    @Override
    public Long value15() {
        return getRelationType();
    }

    @Override
    public OffsetDateTime value16() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime value17() {
        return getModifyDttm();
    }

    @Override
    public String value18() {
        return getActionInd();
    }

    @Override
    public OffsetDateTime value19() {
        return getEffDttm();
    }

    @Override
    public OffsetDateTime value20() {
        return getExpDttm();
    }

    @Override
    public AsrpFpaChildRestrictRecord value1(Long value) {
        setAsrpFpaChildRestrictId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value2(Long value) {
        setDeclarantId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value3(Long value) {
        setDeclarantPersonId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value4(Long value) {
        setDeclarantDocId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value5(Long value) {
        setDeclarantPersonDocumentId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value6(String value) {
        setRelationDoc(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value7(Long value) {
        setChildId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value8(Long value) {
        setChildPersonId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value9(Long value) {
        setChildDocId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value10(Long value) {
        setChildPersonDocumentId(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value11(String value) {
        setDeclarantReg(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value12(String value) {
        setDeclarentAddress(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value13(String value) {
        setChildReg(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value14(String value) {
        setInformation(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value15(Long value) {
        setRelationType(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value16(OffsetDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value17(OffsetDateTime value) {
        setModifyDttm(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value18(String value) {
        setActionInd(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value19(OffsetDateTime value) {
        setEffDttm(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord value20(OffsetDateTime value) {
        setExpDttm(value);
        return this;
    }

    @Override
    public AsrpFpaChildRestrictRecord values(Long value1, Long value2, Long value3, Long value4, Long value5, String value6, Long value7, Long value8, Long value9, Long value10, String value11, String value12, String value13, String value14, Long value15, OffsetDateTime value16, OffsetDateTime value17, String value18, OffsetDateTime value19, OffsetDateTime value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AsrpFpaChildRestrictRecord
     */
    public AsrpFpaChildRestrictRecord() {
        super(AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT);
    }

    /**
     * Create a detached, initialised AsrpFpaChildRestrictRecord
     */
    public AsrpFpaChildRestrictRecord(Long asrpFpaChildRestrictId, Long declarantId, Long declarantPersonId, Long declarantDocId, Long declarantPersonDocumentId, String relationDoc, Long childId, Long childPersonId, Long childDocId, Long childPersonDocumentId, String declarantReg, String declarentAddress, String childReg, String information, Long relationType, OffsetDateTime createDttm, OffsetDateTime modifyDttm, String actionInd, OffsetDateTime effDttm, OffsetDateTime expDttm) {
        super(AsrpFpaChildRestrict.ASRP_FPA_CHILD_RESTRICT);

        setAsrpFpaChildRestrictId(asrpFpaChildRestrictId);
        setDeclarantId(declarantId);
        setDeclarantPersonId(declarantPersonId);
        setDeclarantDocId(declarantDocId);
        setDeclarantPersonDocumentId(declarantPersonDocumentId);
        setRelationDoc(relationDoc);
        setChildId(childId);
        setChildPersonId(childPersonId);
        setChildDocId(childDocId);
        setChildPersonDocumentId(childPersonDocumentId);
        setDeclarantReg(declarantReg);
        setDeclarentAddress(declarentAddress);
        setChildReg(childReg);
        setInformation(information);
        setRelationType(relationType);
        setCreateDttm(createDttm);
        setModifyDttm(modifyDttm);
        setActionInd(actionInd);
        setEffDttm(effDttm);
        setExpDttm(expDttm);
        resetChangedOnNotNull();
    }
}
