/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.BatchJobExecutionParams;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatchJobExecutionParamsRecord extends TableRecordImpl<BatchJobExecutionParamsRecord> implements Record8<Long, String, String, String, LocalDateTime, Long, Double, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.batch_job_execution_params.job_execution_id</code>.
     */
    public void setJobExecutionId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution_params.job_execution_id</code>.
     */
    public Long getJobExecutionId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution_params.type_cd</code>.
     */
    public void setTypeCd(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution_params.type_cd</code>.
     */
    public String getTypeCd() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution_params.key_name</code>.
     */
    public void setKeyName(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution_params.key_name</code>.
     */
    public String getKeyName() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution_params.string_val</code>.
     */
    public void setStringVal(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution_params.string_val</code>.
     */
    public String getStringVal() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution_params.date_val</code>.
     */
    public void setDateVal(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution_params.date_val</code>.
     */
    public LocalDateTime getDateVal() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution_params.long_val</code>.
     */
    public void setLongVal(Long value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution_params.long_val</code>.
     */
    public Long getLongVal() {
        return (Long) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution_params.double_val</code>.
     */
    public void setDoubleVal(Double value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution_params.double_val</code>.
     */
    public Double getDoubleVal() {
        return (Double) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution_params.identifying</code>.
     */
    public void setIdentifying(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution_params.identifying</code>.
     */
    public String getIdentifying() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, String, String, LocalDateTime, Long, Double, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, String, String, LocalDateTime, Long, Double, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS.JOB_EXECUTION_ID;
    }

    @Override
    public Field<String> field2() {
        return BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS.TYPE_CD;
    }

    @Override
    public Field<String> field3() {
        return BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS.KEY_NAME;
    }

    @Override
    public Field<String> field4() {
        return BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS.STRING_VAL;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS.DATE_VAL;
    }

    @Override
    public Field<Long> field6() {
        return BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS.LONG_VAL;
    }

    @Override
    public Field<Double> field7() {
        return BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS.DOUBLE_VAL;
    }

    @Override
    public Field<String> field8() {
        return BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS.IDENTIFYING;
    }

    @Override
    public Long component1() {
        return getJobExecutionId();
    }

    @Override
    public String component2() {
        return getTypeCd();
    }

    @Override
    public String component3() {
        return getKeyName();
    }

    @Override
    public String component4() {
        return getStringVal();
    }

    @Override
    public LocalDateTime component5() {
        return getDateVal();
    }

    @Override
    public Long component6() {
        return getLongVal();
    }

    @Override
    public Double component7() {
        return getDoubleVal();
    }

    @Override
    public String component8() {
        return getIdentifying();
    }

    @Override
    public Long value1() {
        return getJobExecutionId();
    }

    @Override
    public String value2() {
        return getTypeCd();
    }

    @Override
    public String value3() {
        return getKeyName();
    }

    @Override
    public String value4() {
        return getStringVal();
    }

    @Override
    public LocalDateTime value5() {
        return getDateVal();
    }

    @Override
    public Long value6() {
        return getLongVal();
    }

    @Override
    public Double value7() {
        return getDoubleVal();
    }

    @Override
    public String value8() {
        return getIdentifying();
    }

    @Override
    public BatchJobExecutionParamsRecord value1(Long value) {
        setJobExecutionId(value);
        return this;
    }

    @Override
    public BatchJobExecutionParamsRecord value2(String value) {
        setTypeCd(value);
        return this;
    }

    @Override
    public BatchJobExecutionParamsRecord value3(String value) {
        setKeyName(value);
        return this;
    }

    @Override
    public BatchJobExecutionParamsRecord value4(String value) {
        setStringVal(value);
        return this;
    }

    @Override
    public BatchJobExecutionParamsRecord value5(LocalDateTime value) {
        setDateVal(value);
        return this;
    }

    @Override
    public BatchJobExecutionParamsRecord value6(Long value) {
        setLongVal(value);
        return this;
    }

    @Override
    public BatchJobExecutionParamsRecord value7(Double value) {
        setDoubleVal(value);
        return this;
    }

    @Override
    public BatchJobExecutionParamsRecord value8(String value) {
        setIdentifying(value);
        return this;
    }

    @Override
    public BatchJobExecutionParamsRecord values(Long value1, String value2, String value3, String value4, LocalDateTime value5, Long value6, Double value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BatchJobExecutionParamsRecord
     */
    public BatchJobExecutionParamsRecord() {
        super(BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS);
    }

    /**
     * Create a detached, initialised BatchJobExecutionParamsRecord
     */
    public BatchJobExecutionParamsRecord(Long jobExecutionId, String typeCd, String keyName, String stringVal, LocalDateTime dateVal, Long longVal, Double doubleVal, String identifying) {
        super(BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS);

        setJobExecutionId(jobExecutionId);
        setTypeCd(typeCd);
        setKeyName(keyName);
        setStringVal(stringVal);
        setDateVal(dateVal);
        setLongVal(longVal);
        setDoubleVal(doubleVal);
        setIdentifying(identifying);
        resetChangedOnNotNull();
    }
}
