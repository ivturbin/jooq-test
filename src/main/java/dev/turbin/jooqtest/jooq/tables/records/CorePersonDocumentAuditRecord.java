/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.CorePersonDocumentAudit;

import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Таблица версионирования core_person_document
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CorePersonDocumentAuditRecord extends UpdatableRecordImpl<CorePersonDocumentAuditRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.id</code>.
     * Идентификатор
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.id</code>.
     * Идентификатор
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.record_id</code>.
     * Иденитификатор версионируемой записи
     */
    public void setRecordId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.record_id</code>.
     * Иденитификатор версионируемой записи
     */
    public Long getRecordId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.correction_log_id</code>.
     * Идентификатор лога коррекции дела
     */
    public void setCorrectionLogId(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.correction_log_id</code>.
     * Идентификатор лога коррекции дела
     */
    public Long getCorrectionLogId() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.update_user</code>.
     * Пользователь создавший версию
     */
    public void setUpdateUser(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.update_user</code>.
     * Пользователь создавший версию
     */
    public String getUpdateUser() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.eff_dttm</code>.
     * Время начала действия версии effective from
     */
    public void setEffDttm(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.eff_dttm</code>.
     * Время начала действия версии effective from
     */
    public OffsetDateTime getEffDttm() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.exp_dttm</code>.
     * Время окончания действия версии expired
     */
    public void setExpDttm(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.exp_dttm</code>.
     * Время окончания действия версии expired
     */
    public OffsetDateTime getExpDttm() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.type_id</code>.
     */
    public void setTypeId(Long value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.type_id</code>.
     */
    public Long getTypeId() {
        return (Long) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.doc_no</code>.
     */
    public void setDocNo(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.doc_no</code>.
     */
    public String getDocNo() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.series_code</code>.
     */
    public void setSeriesCode(String value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.series_code</code>.
     */
    public String getSeriesCode() {
        return (String) get(8);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.first_name</code>.
     */
    public void setFirstName(String value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(9);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.last_name</code>.
     */
    public void setLastName(String value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.last_name</code>.
     */
    public String getLastName() {
        return (String) get(10);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.middle_name</code>.
     */
    public void setMiddleName(String value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.middle_name</code>.
     */
    public String getMiddleName() {
        return (String) get(11);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.first_name_lat</code>.
     */
    public void setFirstNameLat(String value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.first_name_lat</code>.
     */
    public String getFirstNameLat() {
        return (String) get(12);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.last_name_lat</code>.
     */
    public void setLastNameLat(String value) {
        set(13, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.last_name_lat</code>.
     */
    public String getLastNameLat() {
        return (String) get(13);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.middle_name_lat</code>.
     */
    public void setMiddleNameLat(String value) {
        set(14, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.middle_name_lat</code>.
     */
    public String getMiddleNameLat() {
        return (String) get(14);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.birthday_dt</code>.
     */
    public void setBirthdayDt(LocalDate value) {
        set(15, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.birthday_dt</code>.
     */
    public LocalDate getBirthdayDt() {
        return (LocalDate) get(15);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.citizenship_id</code>.
     */
    public void setCitizenshipId(Long value) {
        set(16, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.citizenship_id</code>.
     */
    public Long getCitizenshipId() {
        return (Long) get(16);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.gender_id</code>.
     */
    public void setGenderId(Long value) {
        set(17, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.gender_id</code>.
     */
    public Long getGenderId() {
        return (Long) get(17);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.person_id</code>.
     */
    public void setPersonId(Long value) {
        set(18, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.person_id</code>.
     */
    public Long getPersonId() {
        return (Long) get(18);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.issue_dt</code>.
     */
    public void setIssueDt(LocalDate value) {
        set(19, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.issue_dt</code>.
     */
    public LocalDate getIssueDt() {
        return (LocalDate) get(19);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.issue_place_desc</code>.
     */
    public void setIssuePlaceDesc(String value) {
        set(20, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.issue_place_desc</code>.
     */
    public String getIssuePlaceDesc() {
        return (String) get(20);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.birth_place_desc</code>.
     */
    public void setBirthPlaceDesc(String value) {
        set(21, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.birth_place_desc</code>.
     */
    public String getBirthPlaceDesc() {
        return (String) get(21);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.birth_country_id</code>.
     */
    public void setBirthCountryId(Long value) {
        set(22, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.birth_country_id</code>.
     */
    public Long getBirthCountryId() {
        return (Long) get(22);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.snils_code</code>.
     */
    public void setSnilsCode(String value) {
        set(23, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.snils_code</code>.
     */
    public String getSnilsCode() {
        return (String) get(23);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.birth_place_region_desc</code>.
     */
    public void setBirthPlaceRegionDesc(String value) {
        set(24, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.birth_place_region_desc</code>.
     */
    public String getBirthPlaceRegionDesc() {
        return (String) get(24);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.birth_place_area_desc</code>.
     */
    public void setBirthPlaceAreaDesc(String value) {
        set(25, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.birth_place_area_desc</code>.
     */
    public String getBirthPlaceAreaDesc() {
        return (String) get(25);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.birth_place_city_desc</code>.
     */
    public void setBirthPlaceCityDesc(String value) {
        set(26, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.birth_place_city_desc</code>.
     */
    public String getBirthPlaceCityDesc() {
        return (String) get(26);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.birth_place_locality_desc</code>.
     */
    public void setBirthPlaceLocalityDesc(String value) {
        set(27, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.birth_place_locality_desc</code>.
     */
    public String getBirthPlaceLocalityDesc() {
        return (String) get(27);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.authority_code</code>.
     */
    public void setAuthorityCode(String value) {
        set(28, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.authority_code</code>.
     */
    public String getAuthorityCode() {
        return (String) get(28);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.valid_to_dt</code>.
     */
    public void setValidToDt(LocalDate value) {
        set(29, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.valid_to_dt</code>.
     */
    public LocalDate getValidToDt() {
        return (LocalDate) get(29);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.extended_to_dt</code>.
     */
    public void setExtendedToDt(LocalDate value) {
        set(30, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.extended_to_dt</code>.
     */
    public LocalDate getExtendedToDt() {
        return (LocalDate) get(30);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.birth_date_integrity</code>.
     */
    public void setBirthDateIntegrity(Integer value) {
        set(31, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.birth_date_integrity</code>.
     */
    public Integer getBirthDateIntegrity() {
        return (Integer) get(31);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_document_audit.version</code>.
     * Реализация оптимистической блокировки
     */
    public void setVersion(Integer value) {
        set(32, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_document_audit.version</code>.
     * Реализация оптимистической блокировки
     */
    public Integer getVersion() {
        return (Integer) get(32);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CorePersonDocumentAuditRecord
     */
    public CorePersonDocumentAuditRecord() {
        super(CorePersonDocumentAudit.CORE_PERSON_DOCUMENT_AUDIT);
    }

    /**
     * Create a detached, initialised CorePersonDocumentAuditRecord
     */
    public CorePersonDocumentAuditRecord(Long id, Long recordId, Long correctionLogId, String updateUser, OffsetDateTime effDttm, OffsetDateTime expDttm, Long typeId, String docNo, String seriesCode, String firstName, String lastName, String middleName, String firstNameLat, String lastNameLat, String middleNameLat, LocalDate birthdayDt, Long citizenshipId, Long genderId, Long personId, LocalDate issueDt, String issuePlaceDesc, String birthPlaceDesc, Long birthCountryId, String snilsCode, String birthPlaceRegionDesc, String birthPlaceAreaDesc, String birthPlaceCityDesc, String birthPlaceLocalityDesc, String authorityCode, LocalDate validToDt, LocalDate extendedToDt, Integer birthDateIntegrity, Integer version) {
        super(CorePersonDocumentAudit.CORE_PERSON_DOCUMENT_AUDIT);

        setId(id);
        setRecordId(recordId);
        setCorrectionLogId(correctionLogId);
        setUpdateUser(updateUser);
        setEffDttm(effDttm);
        setExpDttm(expDttm);
        setTypeId(typeId);
        setDocNo(docNo);
        setSeriesCode(seriesCode);
        setFirstName(firstName);
        setLastName(lastName);
        setMiddleName(middleName);
        setFirstNameLat(firstNameLat);
        setLastNameLat(lastNameLat);
        setMiddleNameLat(middleNameLat);
        setBirthdayDt(birthdayDt);
        setCitizenshipId(citizenshipId);
        setGenderId(genderId);
        setPersonId(personId);
        setIssueDt(issueDt);
        setIssuePlaceDesc(issuePlaceDesc);
        setBirthPlaceDesc(birthPlaceDesc);
        setBirthCountryId(birthCountryId);
        setSnilsCode(snilsCode);
        setBirthPlaceRegionDesc(birthPlaceRegionDesc);
        setBirthPlaceAreaDesc(birthPlaceAreaDesc);
        setBirthPlaceCityDesc(birthPlaceCityDesc);
        setBirthPlaceLocalityDesc(birthPlaceLocalityDesc);
        setAuthorityCode(authorityCode);
        setValidToDt(validToDt);
        setExtendedToDt(extendedToDt);
        setBirthDateIntegrity(birthDateIntegrity);
        setVersion(version);
        resetChangedOnNotNull();
    }
}
