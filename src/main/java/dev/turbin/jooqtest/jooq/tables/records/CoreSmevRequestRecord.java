/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.CoreSmevRequest;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Таблица для запросов от smev
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreSmevRequestRecord extends UpdatableRecordImpl<CoreSmevRequestRecord> implements Record13<Long, UUID, Long, String, String, OffsetDateTime, OffsetDateTime, String, Long, UUID, Boolean, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.core_smev_request.smev_request_id</code>.
     * Идентификатор
     */
    public void setSmevRequestId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_request.smev_request_id</code>.
     * Идентификатор
     */
    public Long getSmevRequestId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_request.message_uid</code>. UUID
     * сообщения
     */
    public void setMessageUid(UUID value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_request.message_uid</code>. UUID
     * сообщения
     */
    public UUID getMessageUid() {
        return (UUID) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_request.status_id</code>. Статус
     */
    public void setStatusId(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_request.status_id</code>. Статус
     */
    public Long getStatusId() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_request.sender_name</code>. Имя
     * отправителя
     */
    public void setSenderName(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_request.sender_name</code>. Имя
     * отправителя
     */
    public String getSenderName() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_request.content_dvalue</code>.
     * Тело сообщения в формате xml
     */
    public void setContentDvalue(String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_request.content_dvalue</code>.
     * Тело сообщения в формате xml
     */
    public String getContentDvalue() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_request.create_dttm</code>. Дата
     * время вставки записи
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_request.create_dttm</code>. Дата
     * время вставки записи
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_request.modify_dttm</code>. Дата
     * время последнего изменения записи
     */
    public void setModifyDttm(OffsetDateTime value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_request.modify_dttm</code>. Дата
     * время последнего изменения записи
     */
    public OffsetDateTime getModifyDttm() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_request.action_ind</code>.
     * Индикатор действия
     */
    public void setActionInd(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_request.action_ind</code>.
     * Индикатор действия
     */
    public String getActionInd() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_request.core_case_id</code>.
     * Идентификатор дела
     */
    public void setCoreCaseId(Long value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_request.core_case_id</code>.
     * Идентификатор дела
     */
    public Long getCoreCaseId() {
        return (Long) get(8);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_request.client_uid</code>.
     * Идентифкатор запроса
     */
    public void setClientUid(UUID value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_request.client_uid</code>.
     * Идентифкатор запроса
     */
    public UUID getClientUid() {
        return (UUID) get(9);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_request.initiator_bool</code>.
     * True, если инициатором запроса является сервис ГИСМУ, false - ПВВ
     */
    public void setInitiatorBool(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_request.initiator_bool</code>.
     * True, если инициатором запроса является сервис ГИСМУ, false - ПВВ
     */
    public Boolean getInitiatorBool() {
        return (Boolean) get(10);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_request.external_interaction_id</code>.
     * Идентификатор внешнего взаимодействия
     */
    public void setExternalInteractionId(Long value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_request.external_interaction_id</code>.
     * Идентификатор внешнего взаимодействия
     */
    public Long getExternalInteractionId() {
        return (Long) get(11);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_request.type_name</code>. Тип
     * запроса СМЭВ
     */
    public void setTypeName(String value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_request.type_name</code>. Тип
     * запроса СМЭВ
     */
    public String getTypeName() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, UUID, Long, String, String, OffsetDateTime, OffsetDateTime, String, Long, UUID, Boolean, Long, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Long, UUID, Long, String, String, OffsetDateTime, OffsetDateTime, String, Long, UUID, Boolean, Long, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CoreSmevRequest.CORE_SMEV_REQUEST.SMEV_REQUEST_ID;
    }

    @Override
    public Field<UUID> field2() {
        return CoreSmevRequest.CORE_SMEV_REQUEST.MESSAGE_UID;
    }

    @Override
    public Field<Long> field3() {
        return CoreSmevRequest.CORE_SMEV_REQUEST.STATUS_ID;
    }

    @Override
    public Field<String> field4() {
        return CoreSmevRequest.CORE_SMEV_REQUEST.SENDER_NAME;
    }

    @Override
    public Field<String> field5() {
        return CoreSmevRequest.CORE_SMEV_REQUEST.CONTENT_DVALUE;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return CoreSmevRequest.CORE_SMEV_REQUEST.CREATE_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field7() {
        return CoreSmevRequest.CORE_SMEV_REQUEST.MODIFY_DTTM;
    }

    @Override
    public Field<String> field8() {
        return CoreSmevRequest.CORE_SMEV_REQUEST.ACTION_IND;
    }

    @Override
    public Field<Long> field9() {
        return CoreSmevRequest.CORE_SMEV_REQUEST.CORE_CASE_ID;
    }

    @Override
    public Field<UUID> field10() {
        return CoreSmevRequest.CORE_SMEV_REQUEST.CLIENT_UID;
    }

    @Override
    public Field<Boolean> field11() {
        return CoreSmevRequest.CORE_SMEV_REQUEST.INITIATOR_BOOL;
    }

    @Override
    public Field<Long> field12() {
        return CoreSmevRequest.CORE_SMEV_REQUEST.EXTERNAL_INTERACTION_ID;
    }

    @Override
    public Field<String> field13() {
        return CoreSmevRequest.CORE_SMEV_REQUEST.TYPE_NAME;
    }

    @Override
    public Long component1() {
        return getSmevRequestId();
    }

    @Override
    public UUID component2() {
        return getMessageUid();
    }

    @Override
    public Long component3() {
        return getStatusId();
    }

    @Override
    public String component4() {
        return getSenderName();
    }

    @Override
    public String component5() {
        return getContentDvalue();
    }

    @Override
    public OffsetDateTime component6() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime component7() {
        return getModifyDttm();
    }

    @Override
    public String component8() {
        return getActionInd();
    }

    @Override
    public Long component9() {
        return getCoreCaseId();
    }

    @Override
    public UUID component10() {
        return getClientUid();
    }

    @Override
    public Boolean component11() {
        return getInitiatorBool();
    }

    @Override
    public Long component12() {
        return getExternalInteractionId();
    }

    @Override
    public String component13() {
        return getTypeName();
    }

    @Override
    public Long value1() {
        return getSmevRequestId();
    }

    @Override
    public UUID value2() {
        return getMessageUid();
    }

    @Override
    public Long value3() {
        return getStatusId();
    }

    @Override
    public String value4() {
        return getSenderName();
    }

    @Override
    public String value5() {
        return getContentDvalue();
    }

    @Override
    public OffsetDateTime value6() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime value7() {
        return getModifyDttm();
    }

    @Override
    public String value8() {
        return getActionInd();
    }

    @Override
    public Long value9() {
        return getCoreCaseId();
    }

    @Override
    public UUID value10() {
        return getClientUid();
    }

    @Override
    public Boolean value11() {
        return getInitiatorBool();
    }

    @Override
    public Long value12() {
        return getExternalInteractionId();
    }

    @Override
    public String value13() {
        return getTypeName();
    }

    @Override
    public CoreSmevRequestRecord value1(Long value) {
        setSmevRequestId(value);
        return this;
    }

    @Override
    public CoreSmevRequestRecord value2(UUID value) {
        setMessageUid(value);
        return this;
    }

    @Override
    public CoreSmevRequestRecord value3(Long value) {
        setStatusId(value);
        return this;
    }

    @Override
    public CoreSmevRequestRecord value4(String value) {
        setSenderName(value);
        return this;
    }

    @Override
    public CoreSmevRequestRecord value5(String value) {
        setContentDvalue(value);
        return this;
    }

    @Override
    public CoreSmevRequestRecord value6(OffsetDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public CoreSmevRequestRecord value7(OffsetDateTime value) {
        setModifyDttm(value);
        return this;
    }

    @Override
    public CoreSmevRequestRecord value8(String value) {
        setActionInd(value);
        return this;
    }

    @Override
    public CoreSmevRequestRecord value9(Long value) {
        setCoreCaseId(value);
        return this;
    }

    @Override
    public CoreSmevRequestRecord value10(UUID value) {
        setClientUid(value);
        return this;
    }

    @Override
    public CoreSmevRequestRecord value11(Boolean value) {
        setInitiatorBool(value);
        return this;
    }

    @Override
    public CoreSmevRequestRecord value12(Long value) {
        setExternalInteractionId(value);
        return this;
    }

    @Override
    public CoreSmevRequestRecord value13(String value) {
        setTypeName(value);
        return this;
    }

    @Override
    public CoreSmevRequestRecord values(Long value1, UUID value2, Long value3, String value4, String value5, OffsetDateTime value6, OffsetDateTime value7, String value8, Long value9, UUID value10, Boolean value11, Long value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreSmevRequestRecord
     */
    public CoreSmevRequestRecord() {
        super(CoreSmevRequest.CORE_SMEV_REQUEST);
    }

    /**
     * Create a detached, initialised CoreSmevRequestRecord
     */
    public CoreSmevRequestRecord(Long smevRequestId, UUID messageUid, Long statusId, String senderName, String contentDvalue, OffsetDateTime createDttm, OffsetDateTime modifyDttm, String actionInd, Long coreCaseId, UUID clientUid, Boolean initiatorBool, Long externalInteractionId, String typeName) {
        super(CoreSmevRequest.CORE_SMEV_REQUEST);

        setSmevRequestId(smevRequestId);
        setMessageUid(messageUid);
        setStatusId(statusId);
        setSenderName(senderName);
        setContentDvalue(contentDvalue);
        setCreateDttm(createDttm);
        setModifyDttm(modifyDttm);
        setActionInd(actionInd);
        setCoreCaseId(coreCaseId);
        setClientUid(clientUid);
        setInitiatorBool(initiatorBool);
        setExternalInteractionId(externalInteractionId);
        setTypeName(typeName);
        resetChangedOnNotNull();
    }
}
