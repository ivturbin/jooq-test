/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.DestructionActHistory;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * История актов уничтожения бланков заграна
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DestructionActHistoryRecord extends UpdatableRecordImpl<DestructionActHistoryRecord> implements Record9<Long, Long, Long, OffsetDateTime, OffsetDateTime, String, OffsetDateTime, OffsetDateTime, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.destruction_act_history.destruction_act_id</code>.
     * Индификатор акта
     */
    public void setDestructionActId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.destruction_act_history.destruction_act_id</code>.
     * Индификатор акта
     */
    public Long getDestructionActId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.destruction_act_history.core_document_id</code>.
     * Индификатор документа
     */
    public void setCoreDocumentId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.destruction_act_history.core_document_id</code>.
     * Индификатор документа
     */
    public Long getCoreDocumentId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.destruction_act_history.src_id</code>.
     * Идентификатор источника с которого получены информация
     */
    public void setSrcId(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.destruction_act_history.src_id</code>.
     * Идентификатор источника с которого получены информация
     */
    public Long getSrcId() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.destruction_act_history.create_dttm</code>.
     * Дата время вставки записи в таблицу
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.destruction_act_history.create_dttm</code>.
     * Дата время вставки записи в таблицу
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.destruction_act_history.modify_dttm</code>.
     * Дата время последнего изменения записи
     */
    public void setModifyDttm(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.destruction_act_history.modify_dttm</code>.
     * Дата время последнего изменения записи
     */
    public OffsetDateTime getModifyDttm() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.destruction_act_history.action_ind</code>.
     * Индикатор операции DML(I-insert,D-delete,U-update)
     */
    public void setActionInd(String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.destruction_act_history.action_ind</code>.
     * Индикатор операции DML(I-insert,D-delete,U-update)
     */
    public String getActionInd() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.destruction_act_history.eff_dttm</code>.
     * Поля отображения периода действия технической истории
     */
    public void setEffDttm(OffsetDateTime value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.destruction_act_history.eff_dttm</code>.
     * Поля отображения периода действия технической истории
     */
    public OffsetDateTime getEffDttm() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.destruction_act_history.exp_dttm</code>.
     * Поля отображения периода действия технической истории
     */
    public void setExpDttm(OffsetDateTime value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.destruction_act_history.exp_dttm</code>.
     * Поля отображения периода действия технической истории
     */
    public OffsetDateTime getExpDttm() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for
     * <code>passport_international.destruction_act_history.previous_doc_status_id</code>.
     * Предыдущий статус документа
     */
    public void setPreviousDocStatusId(Long value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>passport_international.destruction_act_history.previous_doc_status_id</code>.
     * Предыдущий статус документа
     */
    public Long getPreviousDocStatusId() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, Long, OffsetDateTime, OffsetDateTime, String, OffsetDateTime, OffsetDateTime, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, Long, Long, OffsetDateTime, OffsetDateTime, String, OffsetDateTime, OffsetDateTime, Long> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return DestructionActHistory.DESTRUCTION_ACT_HISTORY.DESTRUCTION_ACT_ID;
    }

    @Override
    public Field<Long> field2() {
        return DestructionActHistory.DESTRUCTION_ACT_HISTORY.CORE_DOCUMENT_ID;
    }

    @Override
    public Field<Long> field3() {
        return DestructionActHistory.DESTRUCTION_ACT_HISTORY.SRC_ID;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return DestructionActHistory.DESTRUCTION_ACT_HISTORY.CREATE_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return DestructionActHistory.DESTRUCTION_ACT_HISTORY.MODIFY_DTTM;
    }

    @Override
    public Field<String> field6() {
        return DestructionActHistory.DESTRUCTION_ACT_HISTORY.ACTION_IND;
    }

    @Override
    public Field<OffsetDateTime> field7() {
        return DestructionActHistory.DESTRUCTION_ACT_HISTORY.EFF_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field8() {
        return DestructionActHistory.DESTRUCTION_ACT_HISTORY.EXP_DTTM;
    }

    @Override
    public Field<Long> field9() {
        return DestructionActHistory.DESTRUCTION_ACT_HISTORY.PREVIOUS_DOC_STATUS_ID;
    }

    @Override
    public Long component1() {
        return getDestructionActId();
    }

    @Override
    public Long component2() {
        return getCoreDocumentId();
    }

    @Override
    public Long component3() {
        return getSrcId();
    }

    @Override
    public OffsetDateTime component4() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime component5() {
        return getModifyDttm();
    }

    @Override
    public String component6() {
        return getActionInd();
    }

    @Override
    public OffsetDateTime component7() {
        return getEffDttm();
    }

    @Override
    public OffsetDateTime component8() {
        return getExpDttm();
    }

    @Override
    public Long component9() {
        return getPreviousDocStatusId();
    }

    @Override
    public Long value1() {
        return getDestructionActId();
    }

    @Override
    public Long value2() {
        return getCoreDocumentId();
    }

    @Override
    public Long value3() {
        return getSrcId();
    }

    @Override
    public OffsetDateTime value4() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime value5() {
        return getModifyDttm();
    }

    @Override
    public String value6() {
        return getActionInd();
    }

    @Override
    public OffsetDateTime value7() {
        return getEffDttm();
    }

    @Override
    public OffsetDateTime value8() {
        return getExpDttm();
    }

    @Override
    public Long value9() {
        return getPreviousDocStatusId();
    }

    @Override
    public DestructionActHistoryRecord value1(Long value) {
        setDestructionActId(value);
        return this;
    }

    @Override
    public DestructionActHistoryRecord value2(Long value) {
        setCoreDocumentId(value);
        return this;
    }

    @Override
    public DestructionActHistoryRecord value3(Long value) {
        setSrcId(value);
        return this;
    }

    @Override
    public DestructionActHistoryRecord value4(OffsetDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public DestructionActHistoryRecord value5(OffsetDateTime value) {
        setModifyDttm(value);
        return this;
    }

    @Override
    public DestructionActHistoryRecord value6(String value) {
        setActionInd(value);
        return this;
    }

    @Override
    public DestructionActHistoryRecord value7(OffsetDateTime value) {
        setEffDttm(value);
        return this;
    }

    @Override
    public DestructionActHistoryRecord value8(OffsetDateTime value) {
        setExpDttm(value);
        return this;
    }

    @Override
    public DestructionActHistoryRecord value9(Long value) {
        setPreviousDocStatusId(value);
        return this;
    }

    @Override
    public DestructionActHistoryRecord values(Long value1, Long value2, Long value3, OffsetDateTime value4, OffsetDateTime value5, String value6, OffsetDateTime value7, OffsetDateTime value8, Long value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DestructionActHistoryRecord
     */
    public DestructionActHistoryRecord() {
        super(DestructionActHistory.DESTRUCTION_ACT_HISTORY);
    }

    /**
     * Create a detached, initialised DestructionActHistoryRecord
     */
    public DestructionActHistoryRecord(Long destructionActId, Long coreDocumentId, Long srcId, OffsetDateTime createDttm, OffsetDateTime modifyDttm, String actionInd, OffsetDateTime effDttm, OffsetDateTime expDttm, Long previousDocStatusId) {
        super(DestructionActHistory.DESTRUCTION_ACT_HISTORY);

        setDestructionActId(destructionActId);
        setCoreDocumentId(coreDocumentId);
        setSrcId(srcId);
        setCreateDttm(createDttm);
        setModifyDttm(modifyDttm);
        setActionInd(actionInd);
        setEffDttm(effDttm);
        setExpDttm(expDttm);
        setPreviousDocStatusId(previousDocStatusId);
        resetChangedOnNotNull();
    }
}
