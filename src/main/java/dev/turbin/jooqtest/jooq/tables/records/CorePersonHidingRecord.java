/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.CorePersonHiding;

import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Таблица сокрытых ФЛ
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CorePersonHidingRecord extends UpdatableRecordImpl<CorePersonHidingRecord> implements Record6<Long, Boolean, LocalDate, OffsetDateTime, OffsetDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.core_person_hiding.core_person_hiding_id</code>.
     * Идентификатор ФЛ
     */
    public void setCorePersonHidingId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_hiding.core_person_hiding_id</code>.
     * Идентификатор ФЛ
     */
    public Long getCorePersonHidingId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_hiding.hidden_status_bool</code>.
     * Статус если ФЛ сокрыт, то "true", иначе – "false"
     */
    public void setHiddenStatusBool(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_hiding.hidden_status_bool</code>.
     * Статус если ФЛ сокрыт, то "true", иначе – "false"
     */
    public Boolean getHiddenStatusBool() {
        return (Boolean) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_hiding.start_dt</code>. Дата
     * начала действия статуса ФЛ
     */
    public void setStartDt(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_hiding.start_dt</code>. Дата
     * начала действия статуса ФЛ
     */
    public LocalDate getStartDt() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_hiding.create_dttm</code>. Дата
     * время вставки записи
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_hiding.create_dttm</code>. Дата
     * время вставки записи
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_hiding.modify_dttm</code>. Дата
     * время последнего изменения записи
     */
    public void setModifyDttm(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_hiding.modify_dttm</code>. Дата
     * время последнего изменения записи
     */
    public OffsetDateTime getModifyDttm() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.core_person_hiding.action_ind</code>.
     * Индикатор действия
     */
    public void setActionInd(String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_person_hiding.action_ind</code>.
     * Индикатор действия
     */
    public String getActionInd() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Boolean, LocalDate, OffsetDateTime, OffsetDateTime, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Boolean, LocalDate, OffsetDateTime, OffsetDateTime, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CorePersonHiding.CORE_PERSON_HIDING.CORE_PERSON_HIDING_ID;
    }

    @Override
    public Field<Boolean> field2() {
        return CorePersonHiding.CORE_PERSON_HIDING.HIDDEN_STATUS_BOOL;
    }

    @Override
    public Field<LocalDate> field3() {
        return CorePersonHiding.CORE_PERSON_HIDING.START_DT;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return CorePersonHiding.CORE_PERSON_HIDING.CREATE_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return CorePersonHiding.CORE_PERSON_HIDING.MODIFY_DTTM;
    }

    @Override
    public Field<String> field6() {
        return CorePersonHiding.CORE_PERSON_HIDING.ACTION_IND;
    }

    @Override
    public Long component1() {
        return getCorePersonHidingId();
    }

    @Override
    public Boolean component2() {
        return getHiddenStatusBool();
    }

    @Override
    public LocalDate component3() {
        return getStartDt();
    }

    @Override
    public OffsetDateTime component4() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime component5() {
        return getModifyDttm();
    }

    @Override
    public String component6() {
        return getActionInd();
    }

    @Override
    public Long value1() {
        return getCorePersonHidingId();
    }

    @Override
    public Boolean value2() {
        return getHiddenStatusBool();
    }

    @Override
    public LocalDate value3() {
        return getStartDt();
    }

    @Override
    public OffsetDateTime value4() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime value5() {
        return getModifyDttm();
    }

    @Override
    public String value6() {
        return getActionInd();
    }

    @Override
    public CorePersonHidingRecord value1(Long value) {
        setCorePersonHidingId(value);
        return this;
    }

    @Override
    public CorePersonHidingRecord value2(Boolean value) {
        setHiddenStatusBool(value);
        return this;
    }

    @Override
    public CorePersonHidingRecord value3(LocalDate value) {
        setStartDt(value);
        return this;
    }

    @Override
    public CorePersonHidingRecord value4(OffsetDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public CorePersonHidingRecord value5(OffsetDateTime value) {
        setModifyDttm(value);
        return this;
    }

    @Override
    public CorePersonHidingRecord value6(String value) {
        setActionInd(value);
        return this;
    }

    @Override
    public CorePersonHidingRecord values(Long value1, Boolean value2, LocalDate value3, OffsetDateTime value4, OffsetDateTime value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CorePersonHidingRecord
     */
    public CorePersonHidingRecord() {
        super(CorePersonHiding.CORE_PERSON_HIDING);
    }

    /**
     * Create a detached, initialised CorePersonHidingRecord
     */
    public CorePersonHidingRecord(Long corePersonHidingId, Boolean hiddenStatusBool, LocalDate startDt, OffsetDateTime createDttm, OffsetDateTime modifyDttm, String actionInd) {
        super(CorePersonHiding.CORE_PERSON_HIDING);

        setCorePersonHidingId(corePersonHidingId);
        setHiddenStatusBool(hiddenStatusBool);
        setStartDt(startDt);
        setCreateDttm(createDttm);
        setModifyDttm(modifyDttm);
        setActionInd(actionInd);
        resetChangedOnNotNull();
    }
}
