/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.CoreSmevResponse;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Таблица для ответов smev
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreSmevResponseRecord extends UpdatableRecordImpl<CoreSmevResponseRecord> implements Record7<Long, Long, UUID, String, OffsetDateTime, OffsetDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.core_smev_response.smev_response_id</code>.
     * Идентификатор
     */
    public void setSmevResponseId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_response.smev_response_id</code>.
     * Идентификатор
     */
    public Long getSmevResponseId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_response.core_smev_request_id</code>.
     * Идентификатор записи запроса от smev
     */
    public void setCoreSmevRequestId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_response.core_smev_request_id</code>.
     * Идентификатор записи запроса от smev
     */
    public Long getCoreSmevRequestId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_response.client_uid</code>. UUID
     * сообщения ответа
     */
    public void setClientUid(UUID value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_response.client_uid</code>. UUID
     * сообщения ответа
     */
    public UUID getClientUid() {
        return (UUID) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_response.response_dvalue</code>.
     * Тело сообщения
     */
    public void setResponseDvalue(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_response.response_dvalue</code>.
     * Тело сообщения
     */
    public String getResponseDvalue() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_response.create_dttm</code>. Дата
     * время вставки записи
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_response.create_dttm</code>. Дата
     * время вставки записи
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_response.modify_dttm</code>. Дата
     * время последнего изменения записи
     */
    public void setModifyDttm(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_response.modify_dttm</code>. Дата
     * время последнего изменения записи
     */
    public OffsetDateTime getModifyDttm() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.core_smev_response.action_ind</code>.
     * Индикатор действия
     */
    public void setActionInd(String value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_smev_response.action_ind</code>.
     * Индикатор действия
     */
    public String getActionInd() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, UUID, String, OffsetDateTime, OffsetDateTime, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, UUID, String, OffsetDateTime, OffsetDateTime, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CoreSmevResponse.CORE_SMEV_RESPONSE.SMEV_RESPONSE_ID;
    }

    @Override
    public Field<Long> field2() {
        return CoreSmevResponse.CORE_SMEV_RESPONSE.CORE_SMEV_REQUEST_ID;
    }

    @Override
    public Field<UUID> field3() {
        return CoreSmevResponse.CORE_SMEV_RESPONSE.CLIENT_UID;
    }

    @Override
    public Field<String> field4() {
        return CoreSmevResponse.CORE_SMEV_RESPONSE.RESPONSE_DVALUE;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return CoreSmevResponse.CORE_SMEV_RESPONSE.CREATE_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return CoreSmevResponse.CORE_SMEV_RESPONSE.MODIFY_DTTM;
    }

    @Override
    public Field<String> field7() {
        return CoreSmevResponse.CORE_SMEV_RESPONSE.ACTION_IND;
    }

    @Override
    public Long component1() {
        return getSmevResponseId();
    }

    @Override
    public Long component2() {
        return getCoreSmevRequestId();
    }

    @Override
    public UUID component3() {
        return getClientUid();
    }

    @Override
    public String component4() {
        return getResponseDvalue();
    }

    @Override
    public OffsetDateTime component5() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime component6() {
        return getModifyDttm();
    }

    @Override
    public String component7() {
        return getActionInd();
    }

    @Override
    public Long value1() {
        return getSmevResponseId();
    }

    @Override
    public Long value2() {
        return getCoreSmevRequestId();
    }

    @Override
    public UUID value3() {
        return getClientUid();
    }

    @Override
    public String value4() {
        return getResponseDvalue();
    }

    @Override
    public OffsetDateTime value5() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime value6() {
        return getModifyDttm();
    }

    @Override
    public String value7() {
        return getActionInd();
    }

    @Override
    public CoreSmevResponseRecord value1(Long value) {
        setSmevResponseId(value);
        return this;
    }

    @Override
    public CoreSmevResponseRecord value2(Long value) {
        setCoreSmevRequestId(value);
        return this;
    }

    @Override
    public CoreSmevResponseRecord value3(UUID value) {
        setClientUid(value);
        return this;
    }

    @Override
    public CoreSmevResponseRecord value4(String value) {
        setResponseDvalue(value);
        return this;
    }

    @Override
    public CoreSmevResponseRecord value5(OffsetDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public CoreSmevResponseRecord value6(OffsetDateTime value) {
        setModifyDttm(value);
        return this;
    }

    @Override
    public CoreSmevResponseRecord value7(String value) {
        setActionInd(value);
        return this;
    }

    @Override
    public CoreSmevResponseRecord values(Long value1, Long value2, UUID value3, String value4, OffsetDateTime value5, OffsetDateTime value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreSmevResponseRecord
     */
    public CoreSmevResponseRecord() {
        super(CoreSmevResponse.CORE_SMEV_RESPONSE);
    }

    /**
     * Create a detached, initialised CoreSmevResponseRecord
     */
    public CoreSmevResponseRecord(Long smevResponseId, Long coreSmevRequestId, UUID clientUid, String responseDvalue, OffsetDateTime createDttm, OffsetDateTime modifyDttm, String actionInd) {
        super(CoreSmevResponse.CORE_SMEV_RESPONSE);

        setSmevResponseId(smevResponseId);
        setCoreSmevRequestId(coreSmevRequestId);
        setClientUid(clientUid);
        setResponseDvalue(responseDvalue);
        setCreateDttm(createDttm);
        setModifyDttm(modifyDttm);
        setActionInd(actionInd);
        resetChangedOnNotNull();
    }
}
