/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.CoreCaseTemp;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Записи о предделах/черновиках дел
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreCaseTempRecord extends UpdatableRecordImpl<CoreCaseTempRecord> implements Record5<Long, Long, String, OffsetDateTime, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>passport_international.core_case_temp.id</code>.
     * Идентификатор записи
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>passport_international.core_case_temp.id</code>.
     * Идентификатор записи
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_temp.core_case_id</code>.
     * Идентификатор преддела или черновика
     */
    public void setCoreCaseId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_temp.core_case_id</code>.
     * Идентификатор преддела или черновика
     */
    public Long getCoreCaseId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_temp.create_user</code>. Логин
     * пользователя, создавшего преддело или черновик
     */
    public void setCreateUser(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_temp.create_user</code>. Логин
     * пользователя, создавшего преддело или черновик
     */
    public String getCreateUser() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.core_case_temp.create_dttm</code>. Дата и
     * время вставки данных в таблицу
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_case_temp.create_dttm</code>. Дата и
     * время вставки данных в таблицу
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>passport_international.core_case_temp.source_id</code>.
     * Идентификатор системы-источника
     */
    public void setSourceId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>passport_international.core_case_temp.source_id</code>.
     * Идентификатор системы-источника
     */
    public Long getSourceId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, String, OffsetDateTime, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, String, OffsetDateTime, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CoreCaseTemp.CORE_CASE_TEMP.ID;
    }

    @Override
    public Field<Long> field2() {
        return CoreCaseTemp.CORE_CASE_TEMP.CORE_CASE_ID;
    }

    @Override
    public Field<String> field3() {
        return CoreCaseTemp.CORE_CASE_TEMP.CREATE_USER;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return CoreCaseTemp.CORE_CASE_TEMP.CREATE_DTTM;
    }

    @Override
    public Field<Long> field5() {
        return CoreCaseTemp.CORE_CASE_TEMP.SOURCE_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getCoreCaseId();
    }

    @Override
    public String component3() {
        return getCreateUser();
    }

    @Override
    public OffsetDateTime component4() {
        return getCreateDttm();
    }

    @Override
    public Long component5() {
        return getSourceId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getCoreCaseId();
    }

    @Override
    public String value3() {
        return getCreateUser();
    }

    @Override
    public OffsetDateTime value4() {
        return getCreateDttm();
    }

    @Override
    public Long value5() {
        return getSourceId();
    }

    @Override
    public CoreCaseTempRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CoreCaseTempRecord value2(Long value) {
        setCoreCaseId(value);
        return this;
    }

    @Override
    public CoreCaseTempRecord value3(String value) {
        setCreateUser(value);
        return this;
    }

    @Override
    public CoreCaseTempRecord value4(OffsetDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public CoreCaseTempRecord value5(Long value) {
        setSourceId(value);
        return this;
    }

    @Override
    public CoreCaseTempRecord values(Long value1, Long value2, String value3, OffsetDateTime value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreCaseTempRecord
     */
    public CoreCaseTempRecord() {
        super(CoreCaseTemp.CORE_CASE_TEMP);
    }

    /**
     * Create a detached, initialised CoreCaseTempRecord
     */
    public CoreCaseTempRecord(Long id, Long coreCaseId, String createUser, OffsetDateTime createDttm, Long sourceId) {
        super(CoreCaseTemp.CORE_CASE_TEMP);

        setId(id);
        setCoreCaseId(coreCaseId);
        setCreateUser(createUser);
        setCreateDttm(createDttm);
        setSourceId(sourceId);
        resetChangedOnNotNull();
    }
}
