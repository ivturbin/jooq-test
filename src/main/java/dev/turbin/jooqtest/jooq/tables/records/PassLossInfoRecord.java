/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.PassLossInfo;

import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PassLossInfoRecord extends UpdatableRecordImpl<PassLossInfoRecord> implements Record12<Long, Long, LocalDate, String, String, String, Long, OffsetDateTime, OffsetDateTime, String, LocalDate, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>passport_international.pass_loss_info.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>passport_international.pass_loss_info.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.pass_loss_info.core_document_id</code>.
     * Идентификатор выходящего документа
     */
    public void setCoreDocumentId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.pass_loss_info.core_document_id</code>.
     * Идентификатор выходящего документа
     */
    public Long getCoreDocumentId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>passport_international.pass_loss_info.lost_date</code>.
     * Дата утери документа
     */
    public void setLostDate(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>passport_international.pass_loss_info.lost_date</code>.
     * Дата утери документа
     */
    public LocalDate getLostDate() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>passport_international.pass_loss_info.executor</code>.
     * Пользователь, который обьявил паспорт утраченным (фамилия)
     */
    public void setExecutor(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>passport_international.pass_loss_info.executor</code>.
     * Пользователь, который обьявил паспорт утраченным (фамилия)
     */
    public String getExecutor() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.pass_loss_info.lost_reason</code>. Описание
     * причины утери
     */
    public void setLostReason(String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.pass_loss_info.lost_reason</code>. Описание
     * причины утери
     */
    public String getLostReason() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.pass_loss_info.lost_cert_authority</code>.
     * Название подразделения оформившего утерю
     */
    public void setLostCertAuthority(String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.pass_loss_info.lost_cert_authority</code>.
     * Название подразделения оформившего утерю
     */
    public String getLostCertAuthority() {
        return (String) get(5);
    }

    /**
     * Setter for <code>passport_international.pass_loss_info.src_id</code>.
     */
    public void setSrcId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>passport_international.pass_loss_info.src_id</code>.
     */
    public Long getSrcId() {
        return (Long) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.pass_loss_info.create_dttm</code>.
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.pass_loss_info.create_dttm</code>.
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for
     * <code>passport_international.pass_loss_info.modify_dttm</code>.
     */
    public void setModifyDttm(OffsetDateTime value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>passport_international.pass_loss_info.modify_dttm</code>.
     */
    public OffsetDateTime getModifyDttm() {
        return (OffsetDateTime) get(8);
    }

    /**
     * Setter for <code>passport_international.pass_loss_info.action_ind</code>.
     */
    public void setActionInd(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>passport_international.pass_loss_info.action_ind</code>.
     */
    public String getActionInd() {
        return (String) get(9);
    }

    /**
     * Setter for <code>passport_international.pass_loss_info.eff_dttm</code>.
     */
    public void setEffDttm(LocalDate value) {
        set(10, value);
    }

    /**
     * Getter for <code>passport_international.pass_loss_info.eff_dttm</code>.
     */
    public LocalDate getEffDttm() {
        return (LocalDate) get(10);
    }

    /**
     * Setter for <code>passport_international.pass_loss_info.exp_dttm</code>.
     */
    public void setExpDttm(LocalDate value) {
        set(11, value);
    }

    /**
     * Getter for <code>passport_international.pass_loss_info.exp_dttm</code>.
     */
    public LocalDate getExpDttm() {
        return (LocalDate) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, Long, LocalDate, String, String, String, Long, OffsetDateTime, OffsetDateTime, String, LocalDate, LocalDate> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Long, Long, LocalDate, String, String, String, Long, OffsetDateTime, OffsetDateTime, String, LocalDate, LocalDate> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PassLossInfo.PASS_LOSS_INFO.ID;
    }

    @Override
    public Field<Long> field2() {
        return PassLossInfo.PASS_LOSS_INFO.CORE_DOCUMENT_ID;
    }

    @Override
    public Field<LocalDate> field3() {
        return PassLossInfo.PASS_LOSS_INFO.LOST_DATE;
    }

    @Override
    public Field<String> field4() {
        return PassLossInfo.PASS_LOSS_INFO.EXECUTOR;
    }

    @Override
    public Field<String> field5() {
        return PassLossInfo.PASS_LOSS_INFO.LOST_REASON;
    }

    @Override
    public Field<String> field6() {
        return PassLossInfo.PASS_LOSS_INFO.LOST_CERT_AUTHORITY;
    }

    @Override
    public Field<Long> field7() {
        return PassLossInfo.PASS_LOSS_INFO.SRC_ID;
    }

    @Override
    public Field<OffsetDateTime> field8() {
        return PassLossInfo.PASS_LOSS_INFO.CREATE_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field9() {
        return PassLossInfo.PASS_LOSS_INFO.MODIFY_DTTM;
    }

    @Override
    public Field<String> field10() {
        return PassLossInfo.PASS_LOSS_INFO.ACTION_IND;
    }

    @Override
    public Field<LocalDate> field11() {
        return PassLossInfo.PASS_LOSS_INFO.EFF_DTTM;
    }

    @Override
    public Field<LocalDate> field12() {
        return PassLossInfo.PASS_LOSS_INFO.EXP_DTTM;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getCoreDocumentId();
    }

    @Override
    public LocalDate component3() {
        return getLostDate();
    }

    @Override
    public String component4() {
        return getExecutor();
    }

    @Override
    public String component5() {
        return getLostReason();
    }

    @Override
    public String component6() {
        return getLostCertAuthority();
    }

    @Override
    public Long component7() {
        return getSrcId();
    }

    @Override
    public OffsetDateTime component8() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime component9() {
        return getModifyDttm();
    }

    @Override
    public String component10() {
        return getActionInd();
    }

    @Override
    public LocalDate component11() {
        return getEffDttm();
    }

    @Override
    public LocalDate component12() {
        return getExpDttm();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getCoreDocumentId();
    }

    @Override
    public LocalDate value3() {
        return getLostDate();
    }

    @Override
    public String value4() {
        return getExecutor();
    }

    @Override
    public String value5() {
        return getLostReason();
    }

    @Override
    public String value6() {
        return getLostCertAuthority();
    }

    @Override
    public Long value7() {
        return getSrcId();
    }

    @Override
    public OffsetDateTime value8() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime value9() {
        return getModifyDttm();
    }

    @Override
    public String value10() {
        return getActionInd();
    }

    @Override
    public LocalDate value11() {
        return getEffDttm();
    }

    @Override
    public LocalDate value12() {
        return getExpDttm();
    }

    @Override
    public PassLossInfoRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PassLossInfoRecord value2(Long value) {
        setCoreDocumentId(value);
        return this;
    }

    @Override
    public PassLossInfoRecord value3(LocalDate value) {
        setLostDate(value);
        return this;
    }

    @Override
    public PassLossInfoRecord value4(String value) {
        setExecutor(value);
        return this;
    }

    @Override
    public PassLossInfoRecord value5(String value) {
        setLostReason(value);
        return this;
    }

    @Override
    public PassLossInfoRecord value6(String value) {
        setLostCertAuthority(value);
        return this;
    }

    @Override
    public PassLossInfoRecord value7(Long value) {
        setSrcId(value);
        return this;
    }

    @Override
    public PassLossInfoRecord value8(OffsetDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public PassLossInfoRecord value9(OffsetDateTime value) {
        setModifyDttm(value);
        return this;
    }

    @Override
    public PassLossInfoRecord value10(String value) {
        setActionInd(value);
        return this;
    }

    @Override
    public PassLossInfoRecord value11(LocalDate value) {
        setEffDttm(value);
        return this;
    }

    @Override
    public PassLossInfoRecord value12(LocalDate value) {
        setExpDttm(value);
        return this;
    }

    @Override
    public PassLossInfoRecord values(Long value1, Long value2, LocalDate value3, String value4, String value5, String value6, Long value7, OffsetDateTime value8, OffsetDateTime value9, String value10, LocalDate value11, LocalDate value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PassLossInfoRecord
     */
    public PassLossInfoRecord() {
        super(PassLossInfo.PASS_LOSS_INFO);
    }

    /**
     * Create a detached, initialised PassLossInfoRecord
     */
    public PassLossInfoRecord(Long id, Long coreDocumentId, LocalDate lostDate, String executor, String lostReason, String lostCertAuthority, Long srcId, OffsetDateTime createDttm, OffsetDateTime modifyDttm, String actionInd, LocalDate effDttm, LocalDate expDttm) {
        super(PassLossInfo.PASS_LOSS_INFO);

        setId(id);
        setCoreDocumentId(coreDocumentId);
        setLostDate(lostDate);
        setExecutor(executor);
        setLostReason(lostReason);
        setLostCertAuthority(lostCertAuthority);
        setSrcId(srcId);
        setCreateDttm(createDttm);
        setModifyDttm(modifyDttm);
        setActionInd(actionInd);
        setEffDttm(effDttm);
        setExpDttm(expDttm);
        resetChangedOnNotNull();
    }
}
