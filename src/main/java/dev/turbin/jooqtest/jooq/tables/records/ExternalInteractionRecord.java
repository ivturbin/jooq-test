/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.ExternalInteraction;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record19;
import org.jooq.Row19;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Таблица внешних взаимодействий
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExternalInteractionRecord extends UpdatableRecordImpl<ExternalInteractionRecord> implements Record19<Long, Long, Long, Long, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, String, Integer, OffsetDateTime, OffsetDateTime, String, String, Long, UUID, String, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.external_interaction.external_interaction_id</code>.
     * Идентификатор
     */
    public void setExternalInteractionId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.external_interaction_id</code>.
     * Идентификатор
     */
    public Long getExternalInteractionId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.core_case_id</code>.
     * Привязка к делу
     */
    public void setCoreCaseId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.core_case_id</code>.
     * Привязка к делу
     */
    public Long getCoreCaseId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.system_id</code>.
     * Внешняя система (Ведомство)
     */
    public void setSystemId(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.system_id</code>.
     * Внешняя система (Ведомство)
     */
    public Long getSystemId() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.interaction_type_id</code>.
     * Тип взаимодействия (Бумажный, СМЭВ)
     */
    public void setInteractionTypeId(Long value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.interaction_type_id</code>.
     * Тип взаимодействия (Бумажный, СМЭВ)
     */
    public Long getInteractionTypeId() {
        return (Long) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.create_dt</code>. Дата
     * создания запроса
     */
    public void setCreateDt(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.create_dt</code>. Дата
     * создания запроса
     */
    public OffsetDateTime getCreateDt() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.request_dt</code>. Дата
     * отправки запроса
     */
    public void setRequestDt(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.request_dt</code>. Дата
     * отправки запроса
     */
    public OffsetDateTime getRequestDt() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.response_dt</code>.
     * Дата ответа
     */
    public void setResponseDt(OffsetDateTime value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.response_dt</code>.
     * Дата ответа
     */
    public OffsetDateTime getResponseDt() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.check_dt</code>. Дата
     * обработки ответа
     */
    public void setCheckDt(OffsetDateTime value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.check_dt</code>. Дата
     * обработки ответа
     */
    public OffsetDateTime getCheckDt() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.response_cval</code>.
     * Ответ в текстовом виде
     */
    public void setResponseCval(String value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.response_cval</code>.
     * Ответ в текстовом виде
     */
    public String getResponseCval() {
        return (String) get(8);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.version</code>.
     */
    public void setVersion(Integer value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(9);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.create_dttm</code>.
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.create_dttm</code>.
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(10);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.modify_dttm</code>.
     */
    public void setModifyDttm(OffsetDateTime value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.modify_dttm</code>.
     */
    public OffsetDateTime getModifyDttm() {
        return (OffsetDateTime) get(11);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.action_ind</code>.
     */
    public void setActionInd(String value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.action_ind</code>.
     */
    public String getActionInd() {
        return (String) get(12);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.request_cval</code>.
     * Запрос в текстовом виде
     */
    public void setRequestCval(String value) {
        set(13, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.request_cval</code>.
     * Запрос в текстовом виде
     */
    public String getRequestCval() {
        return (String) get(13);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.interaction_subtype_id</code>.
     * Уникальный тип запроса
     */
    public void setInteractionSubtypeId(Long value) {
        set(14, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.interaction_subtype_id</code>.
     * Уникальный тип запроса
     */
    public Long getInteractionSubtypeId() {
        return (Long) get(14);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.response_file_uuid</code>.
     * UUID файла ответа по СМЕВ
     */
    public void setResponseFileUuid(UUID value) {
        set(15, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.response_file_uuid</code>.
     * UUID файла ответа по СМЕВ
     */
    public UUID getResponseFileUuid() {
        return (UUID) get(15);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.short_smev_answer_cval</code>.
     * Краткий ответ на основании полученного ответа от СМЕВа
     */
    public void setShortSmevAnswerCval(String value) {
        set(16, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.short_smev_answer_cval</code>.
     * Краткий ответ на основании полученного ответа от СМЕВа
     */
    public String getShortSmevAnswerCval() {
        return (String) get(16);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.migr_source_system_id</code>.
     * Идентификатор системы источник
     */
    public void setMigrSourceSystemId(Long value) {
        set(17, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.migr_source_system_id</code>.
     * Идентификатор системы источник
     */
    public Long getMigrSourceSystemId() {
        return (Long) get(17);
    }

    /**
     * Setter for
     * <code>passport_international.external_interaction.migr_source_id</code>.
     * Идентификатор в системе источник
     */
    public void setMigrSourceId(Long value) {
        set(18, value);
    }

    /**
     * Getter for
     * <code>passport_international.external_interaction.migr_source_id</code>.
     * Идентификатор в системе источник
     */
    public Long getMigrSourceId() {
        return (Long) get(18);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record19 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row19<Long, Long, Long, Long, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, String, Integer, OffsetDateTime, OffsetDateTime, String, String, Long, UUID, String, Long, Long> fieldsRow() {
        return (Row19) super.fieldsRow();
    }

    @Override
    public Row19<Long, Long, Long, Long, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, String, Integer, OffsetDateTime, OffsetDateTime, String, String, Long, UUID, String, Long, Long> valuesRow() {
        return (Row19) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ExternalInteraction.EXTERNAL_INTERACTION.EXTERNAL_INTERACTION_ID;
    }

    @Override
    public Field<Long> field2() {
        return ExternalInteraction.EXTERNAL_INTERACTION.CORE_CASE_ID;
    }

    @Override
    public Field<Long> field3() {
        return ExternalInteraction.EXTERNAL_INTERACTION.SYSTEM_ID;
    }

    @Override
    public Field<Long> field4() {
        return ExternalInteraction.EXTERNAL_INTERACTION.INTERACTION_TYPE_ID;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return ExternalInteraction.EXTERNAL_INTERACTION.CREATE_DT;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return ExternalInteraction.EXTERNAL_INTERACTION.REQUEST_DT;
    }

    @Override
    public Field<OffsetDateTime> field7() {
        return ExternalInteraction.EXTERNAL_INTERACTION.RESPONSE_DT;
    }

    @Override
    public Field<OffsetDateTime> field8() {
        return ExternalInteraction.EXTERNAL_INTERACTION.CHECK_DT;
    }

    @Override
    public Field<String> field9() {
        return ExternalInteraction.EXTERNAL_INTERACTION.RESPONSE_CVAL;
    }

    @Override
    public Field<Integer> field10() {
        return ExternalInteraction.EXTERNAL_INTERACTION.VERSION;
    }

    @Override
    public Field<OffsetDateTime> field11() {
        return ExternalInteraction.EXTERNAL_INTERACTION.CREATE_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field12() {
        return ExternalInteraction.EXTERNAL_INTERACTION.MODIFY_DTTM;
    }

    @Override
    public Field<String> field13() {
        return ExternalInteraction.EXTERNAL_INTERACTION.ACTION_IND;
    }

    @Override
    public Field<String> field14() {
        return ExternalInteraction.EXTERNAL_INTERACTION.REQUEST_CVAL;
    }

    @Override
    public Field<Long> field15() {
        return ExternalInteraction.EXTERNAL_INTERACTION.INTERACTION_SUBTYPE_ID;
    }

    @Override
    public Field<UUID> field16() {
        return ExternalInteraction.EXTERNAL_INTERACTION.RESPONSE_FILE_UUID;
    }

    @Override
    public Field<String> field17() {
        return ExternalInteraction.EXTERNAL_INTERACTION.SHORT_SMEV_ANSWER_CVAL;
    }

    @Override
    public Field<Long> field18() {
        return ExternalInteraction.EXTERNAL_INTERACTION.MIGR_SOURCE_SYSTEM_ID;
    }

    @Override
    public Field<Long> field19() {
        return ExternalInteraction.EXTERNAL_INTERACTION.MIGR_SOURCE_ID;
    }

    @Override
    public Long component1() {
        return getExternalInteractionId();
    }

    @Override
    public Long component2() {
        return getCoreCaseId();
    }

    @Override
    public Long component3() {
        return getSystemId();
    }

    @Override
    public Long component4() {
        return getInteractionTypeId();
    }

    @Override
    public OffsetDateTime component5() {
        return getCreateDt();
    }

    @Override
    public OffsetDateTime component6() {
        return getRequestDt();
    }

    @Override
    public OffsetDateTime component7() {
        return getResponseDt();
    }

    @Override
    public OffsetDateTime component8() {
        return getCheckDt();
    }

    @Override
    public String component9() {
        return getResponseCval();
    }

    @Override
    public Integer component10() {
        return getVersion();
    }

    @Override
    public OffsetDateTime component11() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime component12() {
        return getModifyDttm();
    }

    @Override
    public String component13() {
        return getActionInd();
    }

    @Override
    public String component14() {
        return getRequestCval();
    }

    @Override
    public Long component15() {
        return getInteractionSubtypeId();
    }

    @Override
    public UUID component16() {
        return getResponseFileUuid();
    }

    @Override
    public String component17() {
        return getShortSmevAnswerCval();
    }

    @Override
    public Long component18() {
        return getMigrSourceSystemId();
    }

    @Override
    public Long component19() {
        return getMigrSourceId();
    }

    @Override
    public Long value1() {
        return getExternalInteractionId();
    }

    @Override
    public Long value2() {
        return getCoreCaseId();
    }

    @Override
    public Long value3() {
        return getSystemId();
    }

    @Override
    public Long value4() {
        return getInteractionTypeId();
    }

    @Override
    public OffsetDateTime value5() {
        return getCreateDt();
    }

    @Override
    public OffsetDateTime value6() {
        return getRequestDt();
    }

    @Override
    public OffsetDateTime value7() {
        return getResponseDt();
    }

    @Override
    public OffsetDateTime value8() {
        return getCheckDt();
    }

    @Override
    public String value9() {
        return getResponseCval();
    }

    @Override
    public Integer value10() {
        return getVersion();
    }

    @Override
    public OffsetDateTime value11() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime value12() {
        return getModifyDttm();
    }

    @Override
    public String value13() {
        return getActionInd();
    }

    @Override
    public String value14() {
        return getRequestCval();
    }

    @Override
    public Long value15() {
        return getInteractionSubtypeId();
    }

    @Override
    public UUID value16() {
        return getResponseFileUuid();
    }

    @Override
    public String value17() {
        return getShortSmevAnswerCval();
    }

    @Override
    public Long value18() {
        return getMigrSourceSystemId();
    }

    @Override
    public Long value19() {
        return getMigrSourceId();
    }

    @Override
    public ExternalInteractionRecord value1(Long value) {
        setExternalInteractionId(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value2(Long value) {
        setCoreCaseId(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value3(Long value) {
        setSystemId(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value4(Long value) {
        setInteractionTypeId(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value5(OffsetDateTime value) {
        setCreateDt(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value6(OffsetDateTime value) {
        setRequestDt(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value7(OffsetDateTime value) {
        setResponseDt(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value8(OffsetDateTime value) {
        setCheckDt(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value9(String value) {
        setResponseCval(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value10(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value11(OffsetDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value12(OffsetDateTime value) {
        setModifyDttm(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value13(String value) {
        setActionInd(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value14(String value) {
        setRequestCval(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value15(Long value) {
        setInteractionSubtypeId(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value16(UUID value) {
        setResponseFileUuid(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value17(String value) {
        setShortSmevAnswerCval(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value18(Long value) {
        setMigrSourceSystemId(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord value19(Long value) {
        setMigrSourceId(value);
        return this;
    }

    @Override
    public ExternalInteractionRecord values(Long value1, Long value2, Long value3, Long value4, OffsetDateTime value5, OffsetDateTime value6, OffsetDateTime value7, OffsetDateTime value8, String value9, Integer value10, OffsetDateTime value11, OffsetDateTime value12, String value13, String value14, Long value15, UUID value16, String value17, Long value18, Long value19) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExternalInteractionRecord
     */
    public ExternalInteractionRecord() {
        super(ExternalInteraction.EXTERNAL_INTERACTION);
    }

    /**
     * Create a detached, initialised ExternalInteractionRecord
     */
    public ExternalInteractionRecord(Long externalInteractionId, Long coreCaseId, Long systemId, Long interactionTypeId, OffsetDateTime createDt, OffsetDateTime requestDt, OffsetDateTime responseDt, OffsetDateTime checkDt, String responseCval, Integer version, OffsetDateTime createDttm, OffsetDateTime modifyDttm, String actionInd, String requestCval, Long interactionSubtypeId, UUID responseFileUuid, String shortSmevAnswerCval, Long migrSourceSystemId, Long migrSourceId) {
        super(ExternalInteraction.EXTERNAL_INTERACTION);

        setExternalInteractionId(externalInteractionId);
        setCoreCaseId(coreCaseId);
        setSystemId(systemId);
        setInteractionTypeId(interactionTypeId);
        setCreateDt(createDt);
        setRequestDt(requestDt);
        setResponseDt(responseDt);
        setCheckDt(checkDt);
        setResponseCval(responseCval);
        setVersion(version);
        setCreateDttm(createDttm);
        setModifyDttm(modifyDttm);
        setActionInd(actionInd);
        setRequestCval(requestCval);
        setInteractionSubtypeId(interactionSubtypeId);
        setResponseFileUuid(responseFileUuid);
        setShortSmevAnswerCval(shortSmevAnswerCval);
        setMigrSourceSystemId(migrSourceSystemId);
        setMigrSourceId(migrSourceId);
        resetChangedOnNotNull();
    }
}
