/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables;


import dev.turbin.jooqtest.jooq.PassportInternational;
import dev.turbin.jooqtest.jooq.tables.records.ViewUploadApplicationFileRecord;

import java.time.OffsetDateTime;
import java.util.UUID;
import java.util.function.Function;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function7;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewUploadApplicationFile extends TableImpl<ViewUploadApplicationFileRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>passport_international.view_upload_application_file</code>
     */
    public static final ViewUploadApplicationFile VIEW_UPLOAD_APPLICATION_FILE = new ViewUploadApplicationFile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ViewUploadApplicationFileRecord> getRecordType() {
        return ViewUploadApplicationFileRecord.class;
    }

    /**
     * The column
     * <code>passport_international.view_upload_application_file.upload_application_file_id</code>.
     */
    public final TableField<ViewUploadApplicationFileRecord, Long> UPLOAD_APPLICATION_FILE_ID = createField(DSL.name("upload_application_file_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>passport_international.view_upload_application_file.application_id</code>.
     */
    public final TableField<ViewUploadApplicationFileRecord, Long> APPLICATION_ID = createField(DSL.name("application_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>passport_international.view_upload_application_file.file_type_id</code>.
     */
    public final TableField<ViewUploadApplicationFileRecord, Long> FILE_TYPE_ID = createField(DSL.name("file_type_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>passport_international.view_upload_application_file.file_uid</code>.
     */
    public final TableField<ViewUploadApplicationFileRecord, UUID> FILE_UID = createField(DSL.name("file_uid"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>passport_international.view_upload_application_file.create_dttm</code>.
     */
    public final TableField<ViewUploadApplicationFileRecord, OffsetDateTime> CREATE_DTTM = createField(DSL.name("create_dttm"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    /**
     * The column
     * <code>passport_international.view_upload_application_file.modify_dttm</code>.
     */
    public final TableField<ViewUploadApplicationFileRecord, OffsetDateTime> MODIFY_DTTM = createField(DSL.name("modify_dttm"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    /**
     * The column
     * <code>passport_international.view_upload_application_file.action_ind</code>.
     */
    public final TableField<ViewUploadApplicationFileRecord, String> ACTION_IND = createField(DSL.name("action_ind"), SQLDataType.VARCHAR(1), this, "");

    private ViewUploadApplicationFile(Name alias, Table<ViewUploadApplicationFileRecord> aliased) {
        this(alias, aliased, null);
    }

    private ViewUploadApplicationFile(Name alias, Table<ViewUploadApplicationFileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("""
        create view "view_upload_application_file" as  SELECT uploaded_application_file.uploaded_application_file_id AS upload_application_file_id,
         uploaded_application_file.application_id,
         uploaded_application_file.file_type_id,
         uploaded_application_file.file_uid,
         uploaded_application_file.create_dttm,
         uploaded_application_file.modify_dttm,
         uploaded_application_file.action_ind
        FROM uploaded_application_file;
        """));
    }

    /**
     * Create an aliased
     * <code>passport_international.view_upload_application_file</code> table
     * reference
     */
    public ViewUploadApplicationFile(String alias) {
        this(DSL.name(alias), VIEW_UPLOAD_APPLICATION_FILE);
    }

    /**
     * Create an aliased
     * <code>passport_international.view_upload_application_file</code> table
     * reference
     */
    public ViewUploadApplicationFile(Name alias) {
        this(alias, VIEW_UPLOAD_APPLICATION_FILE);
    }

    /**
     * Create a <code>passport_international.view_upload_application_file</code>
     * table reference
     */
    public ViewUploadApplicationFile() {
        this(DSL.name("view_upload_application_file"), null);
    }

    public <O extends Record> ViewUploadApplicationFile(Table<O> child, ForeignKey<O, ViewUploadApplicationFileRecord> key) {
        super(child, key, VIEW_UPLOAD_APPLICATION_FILE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : PassportInternational.PASSPORT_INTERNATIONAL;
    }

    @Override
    public ViewUploadApplicationFile as(String alias) {
        return new ViewUploadApplicationFile(DSL.name(alias), this);
    }

    @Override
    public ViewUploadApplicationFile as(Name alias) {
        return new ViewUploadApplicationFile(alias, this);
    }

    @Override
    public ViewUploadApplicationFile as(Table<?> alias) {
        return new ViewUploadApplicationFile(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewUploadApplicationFile rename(String name) {
        return new ViewUploadApplicationFile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewUploadApplicationFile rename(Name name) {
        return new ViewUploadApplicationFile(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewUploadApplicationFile rename(Table<?> name) {
        return new ViewUploadApplicationFile(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Long, UUID, OffsetDateTime, OffsetDateTime, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function7<? super Long, ? super Long, ? super Long, ? super UUID, ? super OffsetDateTime, ? super OffsetDateTime, ? super String, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function7<? super Long, ? super Long, ? super Long, ? super UUID, ? super OffsetDateTime, ? super OffsetDateTime, ? super String, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
