/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.CoreDocumentAudit;

import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Таблица версионирования core_document
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreDocumentAuditRecord extends UpdatableRecordImpl<CoreDocumentAuditRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>passport_international.core_document_audit.id</code>.
     * Идентификатор
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>passport_international.core_document_audit.id</code>.
     * Идентификатор
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.record_id</code>.
     * Иденитификатор версионируемой записи
     */
    public void setRecordId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.record_id</code>.
     * Иденитификатор версионируемой записи
     */
    public Long getRecordId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.correction_log_id</code>.
     * Идентификатор лога коррекции дела
     */
    public void setCorrectionLogId(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.correction_log_id</code>.
     * Идентификатор лога коррекции дела
     */
    public Long getCorrectionLogId() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.update_user</code>.
     * Пользователь создавший версию
     */
    public void setUpdateUser(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.update_user</code>.
     * Пользователь создавший версию
     */
    public String getUpdateUser() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.eff_dttm</code>. Время
     * начала действия версии effective from
     */
    public void setEffDttm(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.eff_dttm</code>. Время
     * начала действия версии effective from
     */
    public OffsetDateTime getEffDttm() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.exp_dttm</code>. Время
     * окончания действия версии expired
     */
    public void setExpDttm(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.exp_dttm</code>. Время
     * окончания действия версии expired
     */
    public OffsetDateTime getExpDttm() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.version</code>.
     */
    public void setVersion(Integer value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.invalid_bool</code>.
     */
    public void setInvalidBool(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.invalid_bool</code>.
     */
    public Boolean getInvalidBool() {
        return (Boolean) get(7);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.type_id</code>.
     */
    public void setTypeId(Long value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.type_id</code>.
     */
    public Long getTypeId() {
        return (Long) get(8);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.status_id</code>.
     */
    public void setStatusId(Long value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.status_id</code>.
     */
    public Long getStatusId() {
        return (Long) get(9);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.change_dt</code>.
     */
    public void setChangeDt(LocalDate value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.change_dt</code>.
     */
    public LocalDate getChangeDt() {
        return (LocalDate) get(10);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.doc_no</code>.
     */
    public void setDocNo(String value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.doc_no</code>.
     */
    public String getDocNo() {
        return (String) get(11);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.series_code</code>.
     */
    public void setSeriesCode(String value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.series_code</code>.
     */
    public String getSeriesCode() {
        return (String) get(12);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.issued_dt</code>.
     */
    public void setIssuedDt(LocalDate value) {
        set(13, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.issued_dt</code>.
     */
    public LocalDate getIssuedDt() {
        return (LocalDate) get(13);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.extend_to_dt</code>.
     */
    public void setExtendToDt(LocalDate value) {
        set(14, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.extend_to_dt</code>.
     */
    public LocalDate getExtendToDt() {
        return (LocalDate) get(14);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.valid_from_dt</code>.
     */
    public void setValidFromDt(LocalDate value) {
        set(15, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.valid_from_dt</code>.
     */
    public LocalDate getValidFromDt() {
        return (LocalDate) get(15);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.valid_to_dt</code>.
     */
    public void setValidToDt(LocalDate value) {
        set(16, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.valid_to_dt</code>.
     */
    public LocalDate getValidToDt() {
        return (LocalDate) get(16);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.destruction_dt</code>.
     */
    public void setDestructionDt(LocalDate value) {
        set(17, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.destruction_dt</code>.
     */
    public LocalDate getDestructionDt() {
        return (LocalDate) get(17);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.invalid_dt</code>.
     */
    public void setInvalidDt(LocalDate value) {
        set(18, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.invalid_dt</code>.
     */
    public LocalDate getInvalidDt() {
        return (LocalDate) get(18);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.invalid_user</code>.
     */
    public void setInvalidUser(String value) {
        set(19, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.invalid_user</code>.
     */
    public String getInvalidUser() {
        return (String) get(19);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.authority_organ_id</code>.
     */
    public void setAuthorityOrganId(Long value) {
        set(20, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.authority_organ_id</code>.
     */
    public Long getAuthorityOrganId() {
        return (Long) get(20);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.blank_series_code</code>.
     */
    public void setBlankSeriesCode(String value) {
        set(21, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.blank_series_code</code>.
     */
    public String getBlankSeriesCode() {
        return (String) get(21);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.blank_number_code</code>.
     */
    public void setBlankNumberCode(String value) {
        set(22, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.blank_number_code</code>.
     */
    public String getBlankNumberCode() {
        return (String) get(22);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.authority_code</code>.
     */
    public void setAuthorityCode(String value) {
        set(23, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.authority_code</code>.
     */
    public String getAuthorityCode() {
        return (String) get(23);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.series_doc_no_hash_cval</code>.
     */
    public void setSeriesDocNoHashCval(String value) {
        set(24, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.series_doc_no_hash_cval</code>.
     */
    public String getSeriesDocNoHashCval() {
        return (String) get(24);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.series_doc_no_hash_strict_cval</code>.
     */
    public void setSeriesDocNoHashStrictCval(String value) {
        set(25, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.series_doc_no_hash_strict_cval</code>.
     */
    public String getSeriesDocNoHashStrictCval() {
        return (String) get(25);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.doc_birth_place_desc</code>.
     */
    public void setDocBirthPlaceDesc(String value) {
        set(26, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.doc_birth_place_desc</code>.
     */
    public String getDocBirthPlaceDesc() {
        return (String) get(26);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.authority_desc</code>.
     */
    public void setAuthorityDesc(String value) {
        set(27, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.authority_desc</code>.
     */
    public String getAuthorityDesc() {
        return (String) get(27);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.authorized_officer_cval</code>.
     */
    public void setAuthorizedOfficerCval(String value) {
        set(28, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.authorized_officer_cval</code>.
     */
    public String getAuthorizedOfficerCval() {
        return (String) get(28);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.parent_authority_organ_id</code>.
     */
    public void setParentAuthorityOrganId(Long value) {
        set(29, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.parent_authority_organ_id</code>.
     */
    public Long getParentAuthorityOrganId() {
        return (Long) get(29);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.person_id</code>.
     */
    public void setPersonId(Long value) {
        set(30, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.person_id</code>.
     */
    public Long getPersonId() {
        return (Long) get(30);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.create_user</code>.
     */
    public void setCreateUser(String value) {
        set(31, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.create_user</code>.
     */
    public String getCreateUser() {
        return (String) get(31);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.correction_reason_cval</code>.
     */
    public void setCorrectionReasonCval(String value) {
        set(32, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.correction_reason_cval</code>.
     */
    public String getCorrectionReasonCval() {
        return (String) get(32);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.gender_cval</code>.
     */
    public void setGenderCval(String value) {
        set(33, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.gender_cval</code>.
     */
    public String getGenderCval() {
        return (String) get(33);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.birth_dt</code>.
     */
    public void setBirthDt(LocalDate value) {
        set(34, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.birth_dt</code>.
     */
    public LocalDate getBirthDt() {
        return (LocalDate) get(34);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.new_document_id</code>.
     */
    public void setNewDocumentId(Long value) {
        set(35, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.new_document_id</code>.
     */
    public Long getNewDocumentId() {
        return (Long) get(35);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.core_person_document_id</code>.
     */
    public void setCorePersonDocumentId(Long value) {
        set(36, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.core_person_document_id</code>.
     */
    public Long getCorePersonDocumentId() {
        return (Long) get(36);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.destruction_act_id</code>.
     */
    public void setDestructionActId(Long value) {
        set(37, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.destruction_act_id</code>.
     */
    public Long getDestructionActId() {
        return (Long) get(37);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.core_case_id</code>.
     */
    public void setCoreCaseId(Long value) {
        set(38, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.core_case_id</code>.
     */
    public Long getCoreCaseId() {
        return (Long) get(38);
    }

    /**
     * Setter for
     * <code>passport_international.core_document_audit.core_document_id</code>.
     */
    public void setCoreDocumentId(Long value) {
        set(39, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_document_audit.core_document_id</code>.
     */
    public Long getCoreDocumentId() {
        return (Long) get(39);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreDocumentAuditRecord
     */
    public CoreDocumentAuditRecord() {
        super(CoreDocumentAudit.CORE_DOCUMENT_AUDIT);
    }

    /**
     * Create a detached, initialised CoreDocumentAuditRecord
     */
    public CoreDocumentAuditRecord(Long id, Long recordId, Long correctionLogId, String updateUser, OffsetDateTime effDttm, OffsetDateTime expDttm, Integer version, Boolean invalidBool, Long typeId, Long statusId, LocalDate changeDt, String docNo, String seriesCode, LocalDate issuedDt, LocalDate extendToDt, LocalDate validFromDt, LocalDate validToDt, LocalDate destructionDt, LocalDate invalidDt, String invalidUser, Long authorityOrganId, String blankSeriesCode, String blankNumberCode, String authorityCode, String seriesDocNoHashCval, String seriesDocNoHashStrictCval, String docBirthPlaceDesc, String authorityDesc, String authorizedOfficerCval, Long parentAuthorityOrganId, Long personId, String createUser, String correctionReasonCval, String genderCval, LocalDate birthDt, Long newDocumentId, Long corePersonDocumentId, Long destructionActId, Long coreCaseId, Long coreDocumentId) {
        super(CoreDocumentAudit.CORE_DOCUMENT_AUDIT);

        setId(id);
        setRecordId(recordId);
        setCorrectionLogId(correctionLogId);
        setUpdateUser(updateUser);
        setEffDttm(effDttm);
        setExpDttm(expDttm);
        setVersion(version);
        setInvalidBool(invalidBool);
        setTypeId(typeId);
        setStatusId(statusId);
        setChangeDt(changeDt);
        setDocNo(docNo);
        setSeriesCode(seriesCode);
        setIssuedDt(issuedDt);
        setExtendToDt(extendToDt);
        setValidFromDt(validFromDt);
        setValidToDt(validToDt);
        setDestructionDt(destructionDt);
        setInvalidDt(invalidDt);
        setInvalidUser(invalidUser);
        setAuthorityOrganId(authorityOrganId);
        setBlankSeriesCode(blankSeriesCode);
        setBlankNumberCode(blankNumberCode);
        setAuthorityCode(authorityCode);
        setSeriesDocNoHashCval(seriesDocNoHashCval);
        setSeriesDocNoHashStrictCval(seriesDocNoHashStrictCval);
        setDocBirthPlaceDesc(docBirthPlaceDesc);
        setAuthorityDesc(authorityDesc);
        setAuthorizedOfficerCval(authorizedOfficerCval);
        setParentAuthorityOrganId(parentAuthorityOrganId);
        setPersonId(personId);
        setCreateUser(createUser);
        setCorrectionReasonCval(correctionReasonCval);
        setGenderCval(genderCval);
        setBirthDt(birthDt);
        setNewDocumentId(newDocumentId);
        setCorePersonDocumentId(corePersonDocumentId);
        setDestructionActId(destructionActId);
        setCoreCaseId(coreCaseId);
        setCoreDocumentId(coreDocumentId);
        resetChangedOnNotNull();
    }
}
