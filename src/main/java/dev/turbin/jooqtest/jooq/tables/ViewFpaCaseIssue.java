/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables;


import dev.turbin.jooqtest.jooq.PassportInternational;
import dev.turbin.jooqtest.jooq.tables.records.ViewFpaCaseIssueRecord;

import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewFpaCaseIssue extends TableImpl<ViewFpaCaseIssueRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>passport_international.view_fpa_case_issue</code>
     */
    public static final ViewFpaCaseIssue VIEW_FPA_CASE_ISSUE = new ViewFpaCaseIssue();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ViewFpaCaseIssueRecord> getRecordType() {
        return ViewFpaCaseIssueRecord.class;
    }

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.fpa_case_issue_id</code>.
     */
    public final TableField<ViewFpaCaseIssueRecord, Long> FPA_CASE_ISSUE_ID = createField(DSL.name("fpa_case_issue_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.preferential_category_bool</code>.
     */
    public final TableField<ViewFpaCaseIssueRecord, Boolean> PREFERENTIAL_CATEGORY_BOOL = createField(DSL.name("preferential_category_bool"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.application_place_id</code>.
     * Тип места обращения
     */
    public final TableField<ViewFpaCaseIssueRecord, Long> APPLICATION_PLACE_ID = createField(DSL.name("application_place_id"), SQLDataType.BIGINT, this, "Тип места обращения");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.secret_access_id</code>.
     * Имеется ли допуск к секретным сведениям
     */
    public final TableField<ViewFpaCaseIssueRecord, Long> SECRET_ACCESS_ID = createField(DSL.name("secret_access_id"), SQLDataType.BIGINT, this, "Имеется ли допуск к секретным сведениям");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.contract_due_id</code>.
     */
    public final TableField<ViewFpaCaseIssueRecord, Long> CONTRACT_DUE_ID = createField(DSL.name("contract_due_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.application_reason_id</code>.
     * Цель получения (ЗАПОЛНЕНИЕ ПОЛЯ ОТМЕНЕНО)
     */
    public final TableField<ViewFpaCaseIssueRecord, Long> APPLICATION_REASON_ID = createField(DSL.name("application_reason_id"), SQLDataType.BIGINT, this, "Цель получения (ЗАПОЛНЕНИЕ ПОЛЯ ОТМЕНЕНО)");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.application_urgency_reason_id</code>.
     */
    public final TableField<ViewFpaCaseIssueRecord, Long> APPLICATION_URGENCY_REASON_ID = createField(DSL.name("application_urgency_reason_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.additional_citizenship_id</code>.
     */
    public final TableField<ViewFpaCaseIssueRecord, Long> ADDITIONAL_CITIZENSHIP_ID = createField(DSL.name("additional_citizenship_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.target_country_id</code>.
     * Страна выезда на ПМЖ
     */
    public final TableField<ViewFpaCaseIssueRecord, Long> TARGET_COUNTRY_ID = createField(DSL.name("target_country_id"), SQLDataType.BIGINT, this, "Страна выезда на ПМЖ");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.applicant_category_id</code>.
     * Категория заявителя
     */
    public final TableField<ViewFpaCaseIssueRecord, Long> APPLICANT_CATEGORY_ID = createField(DSL.name("applicant_category_id"), SQLDataType.BIGINT, this, "Категория заявителя");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.issue_dt</code>. Дата
     * фактической выдачи паспорта
     */
    public final TableField<ViewFpaCaseIssueRecord, LocalDate> ISSUE_DT = createField(DSL.name("issue_dt"), SQLDataType.LOCALDATE, this, "Дата фактической выдачи паспорта");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.secret_access_dt</code>.
     * Дата оформления допуска к секретным сведениям
     */
    public final TableField<ViewFpaCaseIssueRecord, LocalDate> SECRET_ACCESS_DT = createField(DSL.name("secret_access_dt"), SQLDataType.LOCALDATE, this, "Дата оформления допуска к секретным сведениям");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.contract_due_dt</code>.
     */
    public final TableField<ViewFpaCaseIssueRecord, LocalDate> CONTRACT_DUE_DT = createField(DSL.name("contract_due_dt"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.blank_receipt_dt</code>.
     * Дата получения бланка
     */
    public final TableField<ViewFpaCaseIssueRecord, LocalDate> BLANK_RECEIPT_DT = createField(DSL.name("blank_receipt_dt"), SQLDataType.LOCALDATE, this, "Дата получения бланка");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.secret_access_organization_name</code>.
     */
    public final TableField<ViewFpaCaseIssueRecord, String> SECRET_ACCESS_ORGANIZATION_NAME = createField(DSL.name("secret_access_organization_name"), SQLDataType.VARCHAR(256), this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.contract_due_organization_name</code>.
     */
    public final TableField<ViewFpaCaseIssueRecord, String> CONTRACT_DUE_ORGANIZATION_NAME = createField(DSL.name("contract_due_organization_name"), SQLDataType.VARCHAR(256), this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.src_id</code>.
     * Идентификатор источника с которого получены информация
     */
    public final TableField<ViewFpaCaseIssueRecord, Long> SRC_ID = createField(DSL.name("src_id"), SQLDataType.BIGINT, this, "Идентификатор источника с которого получены информация");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.create_dttm</code>. Дата
     * время вставки записи в таблицу
     */
    public final TableField<ViewFpaCaseIssueRecord, OffsetDateTime> CREATE_DTTM = createField(DSL.name("create_dttm"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "Дата время вставки записи в таблицу");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.modify_dttm</code>. Дата
     * время последнего изменения записи
     */
    public final TableField<ViewFpaCaseIssueRecord, OffsetDateTime> MODIFY_DTTM = createField(DSL.name("modify_dttm"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "Дата время последнего изменения записи");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.eff_dttm</code>. Поля
     * отображения периода действия технической истории
     */
    public final TableField<ViewFpaCaseIssueRecord, OffsetDateTime> EFF_DTTM = createField(DSL.name("eff_dttm"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "Поля отображения периода действия технической истории");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.exp_dttm</code>. Поля
     * отображения периода действия технической истории
     */
    public final TableField<ViewFpaCaseIssueRecord, OffsetDateTime> EXP_DTTM = createField(DSL.name("exp_dttm"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "Поля отображения периода действия технической истории");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.action_ind</code>.
     * Индикатор операции DML(I-insert,D-delete,U-update)
     */
    public final TableField<ViewFpaCaseIssueRecord, String> ACTION_IND = createField(DSL.name("action_ind"), SQLDataType.VARCHAR(1), this, "Индикатор операции DML(I-insert,D-delete,U-update)");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.sign_user</code>.
     */
    public final TableField<ViewFpaCaseIssueRecord, String> SIGN_USER = createField(DSL.name("sign_user"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.reason_issue_id</code>.
     * Причина выдачи заграна
     */
    public final TableField<ViewFpaCaseIssueRecord, Long> REASON_ISSUE_ID = createField(DSL.name("reason_issue_id"), SQLDataType.BIGINT, this, "Причина выдачи заграна");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.convicted_bool</code>.
     */
    public final TableField<ViewFpaCaseIssueRecord, Boolean> CONVICTED_BOOL = createField(DSL.name("convicted_bool"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.military_contract_bool</code>.
     */
    public final TableField<ViewFpaCaseIssueRecord, Boolean> MILITARY_CONTRACT_BOOL = createField(DSL.name("military_contract_bool"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.suspect_bool</code>.
     */
    public final TableField<ViewFpaCaseIssueRecord, Boolean> SUSPECT_BOOL = createField(DSL.name("suspect_bool"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.court_due_violation_bool</code>.
     */
    public final TableField<ViewFpaCaseIssueRecord, Boolean> COURT_DUE_VIOLATION_BOOL = createField(DSL.name("court_due_violation_bool"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.bankrupt_bool</code>.
     */
    public final TableField<ViewFpaCaseIssueRecord, Boolean> BANKRUPT_BOOL = createField(DSL.name("bankrupt_bool"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column
     * <code>passport_international.view_fpa_case_issue.type_applicant_id</code>.
     * Вид заявления (от совершенолетнего или от несовершеннолетнего)
     */
    public final TableField<ViewFpaCaseIssueRecord, Long> TYPE_APPLICANT_ID = createField(DSL.name("type_applicant_id"), SQLDataType.BIGINT, this, "Вид заявления (от совершенолетнего или от несовершеннолетнего)");

    private ViewFpaCaseIssue(Name alias, Table<ViewFpaCaseIssueRecord> aliased) {
        this(alias, aliased, null);
    }

    private ViewFpaCaseIssue(Name alias, Table<ViewFpaCaseIssueRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("""
        create view "view_fpa_case_issue" as  SELECT fp_case_issuance.issuance_id AS fpa_case_issue_id,
         fp_case_issuance.preferential_category AS preferential_category_bool,
         fp_case_issuance.application_place_id,
         fp_case_issuance.secret_access_id,
         fp_case_issuance.contract_obligation_id AS contract_due_id,
         fp_case_issuance.application_reason_id,
         fp_case_issuance.application_urgent_reason_id AS application_urgency_reason_id,
         fp_case_issuance.addit_citizenship_id AS additional_citizenship_id,
         fp_case_issuance.target_country_id,
         fp_case_issuance.applicant_category_id,
         fp_case_issuance.issue_dt,
         fp_case_issuance.secret_access_dt,
         fp_case_issuance.contract_obligation_dt AS contract_due_dt,
         fp_case_issuance.blank_receipt_dt,
         fp_case_issuance.secret_access_org_name AS secret_access_organization_name,
         fp_case_issuance.contract_obligation_org_name AS contract_due_organization_name,
         fp_case_issuance.src_id,
         fp_case_issuance.create_dttm,
         fp_case_issuance.modify_dttm,
         fp_case_issuance.eff_dttm,
         fp_case_issuance.exp_dttm,
         fp_case_issuance.action_ind,
         fp_case_issuance.signer AS sign_user,
         fp_case_issuance.reason_issue_id,
         fp_case_issuance.convicted AS convicted_bool,
         fp_case_issuance.military_contract AS military_contract_bool,
         fp_case_issuance.suspect AS suspect_bool,
         fp_case_issuance.court_obligation_avoided AS court_due_violation_bool,
         fp_case_issuance.bankrupt AS bankrupt_bool,
         fp_case_issuance.type_applicant_id
        FROM fp_case_issuance;
        """));
    }

    /**
     * Create an aliased <code>passport_international.view_fpa_case_issue</code>
     * table reference
     */
    public ViewFpaCaseIssue(String alias) {
        this(DSL.name(alias), VIEW_FPA_CASE_ISSUE);
    }

    /**
     * Create an aliased <code>passport_international.view_fpa_case_issue</code>
     * table reference
     */
    public ViewFpaCaseIssue(Name alias) {
        this(alias, VIEW_FPA_CASE_ISSUE);
    }

    /**
     * Create a <code>passport_international.view_fpa_case_issue</code> table
     * reference
     */
    public ViewFpaCaseIssue() {
        this(DSL.name("view_fpa_case_issue"), null);
    }

    public <O extends Record> ViewFpaCaseIssue(Table<O> child, ForeignKey<O, ViewFpaCaseIssueRecord> key) {
        super(child, key, VIEW_FPA_CASE_ISSUE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : PassportInternational.PASSPORT_INTERNATIONAL;
    }

    @Override
    public ViewFpaCaseIssue as(String alias) {
        return new ViewFpaCaseIssue(DSL.name(alias), this);
    }

    @Override
    public ViewFpaCaseIssue as(Name alias) {
        return new ViewFpaCaseIssue(alias, this);
    }

    @Override
    public ViewFpaCaseIssue as(Table<?> alias) {
        return new ViewFpaCaseIssue(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewFpaCaseIssue rename(String name) {
        return new ViewFpaCaseIssue(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewFpaCaseIssue rename(Name name) {
        return new ViewFpaCaseIssue(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewFpaCaseIssue rename(Table<?> name) {
        return new ViewFpaCaseIssue(name.getQualifiedName(), null);
    }
}
