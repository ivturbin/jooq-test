/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.FpCaseInvalidationAudit;

import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Таблица версионирования fp_case_invalidation
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FpCaseInvalidationAuditRecord extends UpdatableRecordImpl<FpCaseInvalidationAuditRecord> implements Record13<Long, Long, Long, String, OffsetDateTime, OffsetDateTime, Long, Long, String, LocalDate, LocalDate, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.fp_case_invalidation_audit.id</code>.
     * Идентификатор "fp_case_invalidation_audit" с данными коррекции
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_invalidation_audit.id</code>.
     * Идентификатор "fp_case_invalidation_audit" с данными коррекции
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_invalidation_audit.record_id</code>.
     * Внешний ключ на запись в таблице-мастере
     */
    public void setRecordId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_invalidation_audit.record_id</code>.
     * Внешний ключ на запись в таблице-мастере
     */
    public Long getRecordId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_invalidation_audit.correction_log_id</code>.
     * Идентификатор лога коррекции дела
     */
    public void setCorrectionLogId(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_invalidation_audit.correction_log_id</code>.
     * Идентификатор лога коррекции дела
     */
    public Long getCorrectionLogId() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_invalidation_audit.update_user</code>.
     * Пользователь, скорректировавший дело
     */
    public void setUpdateUser(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_invalidation_audit.update_user</code>.
     * Пользователь, скорректировавший дело
     */
    public String getUpdateUser() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_invalidation_audit.eff_dttm</code>.
     * Дата начала действия версии
     */
    public void setEffDttm(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_invalidation_audit.eff_dttm</code>.
     * Дата начала действия версии
     */
    public OffsetDateTime getEffDttm() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_invalidation_audit.exp_dttm</code>.
     * Дата окончания действия версии
     */
    public void setExpDttm(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_invalidation_audit.exp_dttm</code>.
     * Дата окончания действия версии
     */
    public OffsetDateTime getExpDttm() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_invalidation_audit.inv_reason_id</code>.
     */
    public void setInvReasonId(Long value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_invalidation_audit.inv_reason_id</code>.
     */
    public Long getInvReasonId() {
        return (Long) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_invalidation_audit.inv_evidence_type_id</code>.
     */
    public void setInvEvidenceTypeId(Long value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_invalidation_audit.inv_evidence_type_id</code>.
     */
    public Long getInvEvidenceTypeId() {
        return (Long) get(7);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_invalidation_audit.inv_evidence_number</code>.
     */
    public void setInvEvidenceNumber(String value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_invalidation_audit.inv_evidence_number</code>.
     */
    public String getInvEvidenceNumber() {
        return (String) get(8);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_invalidation_audit.inv_evidence_dt</code>.
     */
    public void setInvEvidenceDt(LocalDate value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_invalidation_audit.inv_evidence_dt</code>.
     */
    public LocalDate getInvEvidenceDt() {
        return (LocalDate) get(9);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_invalidation_audit.date_invalidation</code>.
     */
    public void setDateInvalidation(LocalDate value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_invalidation_audit.date_invalidation</code>.
     */
    public LocalDate getDateInvalidation() {
        return (LocalDate) get(10);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_invalidation_audit.signer_id</code>.
     */
    public void setSignerId(Long value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_invalidation_audit.signer_id</code>.
     */
    public Long getSignerId() {
        return (Long) get(11);
    }

    /**
     * Setter for
     * <code>passport_international.fp_case_invalidation_audit.comment</code>.
     */
    public void setComment(String value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_case_invalidation_audit.comment</code>.
     */
    public String getComment() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, Long, Long, String, OffsetDateTime, OffsetDateTime, Long, Long, String, LocalDate, LocalDate, Long, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Long, Long, Long, String, OffsetDateTime, OffsetDateTime, Long, Long, String, LocalDate, LocalDate, Long, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return FpCaseInvalidationAudit.FP_CASE_INVALIDATION_AUDIT.ID;
    }

    @Override
    public Field<Long> field2() {
        return FpCaseInvalidationAudit.FP_CASE_INVALIDATION_AUDIT.RECORD_ID;
    }

    @Override
    public Field<Long> field3() {
        return FpCaseInvalidationAudit.FP_CASE_INVALIDATION_AUDIT.CORRECTION_LOG_ID;
    }

    @Override
    public Field<String> field4() {
        return FpCaseInvalidationAudit.FP_CASE_INVALIDATION_AUDIT.UPDATE_USER;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return FpCaseInvalidationAudit.FP_CASE_INVALIDATION_AUDIT.EFF_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return FpCaseInvalidationAudit.FP_CASE_INVALIDATION_AUDIT.EXP_DTTM;
    }

    @Override
    public Field<Long> field7() {
        return FpCaseInvalidationAudit.FP_CASE_INVALIDATION_AUDIT.INV_REASON_ID;
    }

    @Override
    public Field<Long> field8() {
        return FpCaseInvalidationAudit.FP_CASE_INVALIDATION_AUDIT.INV_EVIDENCE_TYPE_ID;
    }

    @Override
    public Field<String> field9() {
        return FpCaseInvalidationAudit.FP_CASE_INVALIDATION_AUDIT.INV_EVIDENCE_NUMBER;
    }

    @Override
    public Field<LocalDate> field10() {
        return FpCaseInvalidationAudit.FP_CASE_INVALIDATION_AUDIT.INV_EVIDENCE_DT;
    }

    @Override
    public Field<LocalDate> field11() {
        return FpCaseInvalidationAudit.FP_CASE_INVALIDATION_AUDIT.DATE_INVALIDATION;
    }

    @Override
    public Field<Long> field12() {
        return FpCaseInvalidationAudit.FP_CASE_INVALIDATION_AUDIT.SIGNER_ID;
    }

    @Override
    public Field<String> field13() {
        return FpCaseInvalidationAudit.FP_CASE_INVALIDATION_AUDIT.COMMENT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getRecordId();
    }

    @Override
    public Long component3() {
        return getCorrectionLogId();
    }

    @Override
    public String component4() {
        return getUpdateUser();
    }

    @Override
    public OffsetDateTime component5() {
        return getEffDttm();
    }

    @Override
    public OffsetDateTime component6() {
        return getExpDttm();
    }

    @Override
    public Long component7() {
        return getInvReasonId();
    }

    @Override
    public Long component8() {
        return getInvEvidenceTypeId();
    }

    @Override
    public String component9() {
        return getInvEvidenceNumber();
    }

    @Override
    public LocalDate component10() {
        return getInvEvidenceDt();
    }

    @Override
    public LocalDate component11() {
        return getDateInvalidation();
    }

    @Override
    public Long component12() {
        return getSignerId();
    }

    @Override
    public String component13() {
        return getComment();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getRecordId();
    }

    @Override
    public Long value3() {
        return getCorrectionLogId();
    }

    @Override
    public String value4() {
        return getUpdateUser();
    }

    @Override
    public OffsetDateTime value5() {
        return getEffDttm();
    }

    @Override
    public OffsetDateTime value6() {
        return getExpDttm();
    }

    @Override
    public Long value7() {
        return getInvReasonId();
    }

    @Override
    public Long value8() {
        return getInvEvidenceTypeId();
    }

    @Override
    public String value9() {
        return getInvEvidenceNumber();
    }

    @Override
    public LocalDate value10() {
        return getInvEvidenceDt();
    }

    @Override
    public LocalDate value11() {
        return getDateInvalidation();
    }

    @Override
    public Long value12() {
        return getSignerId();
    }

    @Override
    public String value13() {
        return getComment();
    }

    @Override
    public FpCaseInvalidationAuditRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FpCaseInvalidationAuditRecord value2(Long value) {
        setRecordId(value);
        return this;
    }

    @Override
    public FpCaseInvalidationAuditRecord value3(Long value) {
        setCorrectionLogId(value);
        return this;
    }

    @Override
    public FpCaseInvalidationAuditRecord value4(String value) {
        setUpdateUser(value);
        return this;
    }

    @Override
    public FpCaseInvalidationAuditRecord value5(OffsetDateTime value) {
        setEffDttm(value);
        return this;
    }

    @Override
    public FpCaseInvalidationAuditRecord value6(OffsetDateTime value) {
        setExpDttm(value);
        return this;
    }

    @Override
    public FpCaseInvalidationAuditRecord value7(Long value) {
        setInvReasonId(value);
        return this;
    }

    @Override
    public FpCaseInvalidationAuditRecord value8(Long value) {
        setInvEvidenceTypeId(value);
        return this;
    }

    @Override
    public FpCaseInvalidationAuditRecord value9(String value) {
        setInvEvidenceNumber(value);
        return this;
    }

    @Override
    public FpCaseInvalidationAuditRecord value10(LocalDate value) {
        setInvEvidenceDt(value);
        return this;
    }

    @Override
    public FpCaseInvalidationAuditRecord value11(LocalDate value) {
        setDateInvalidation(value);
        return this;
    }

    @Override
    public FpCaseInvalidationAuditRecord value12(Long value) {
        setSignerId(value);
        return this;
    }

    @Override
    public FpCaseInvalidationAuditRecord value13(String value) {
        setComment(value);
        return this;
    }

    @Override
    public FpCaseInvalidationAuditRecord values(Long value1, Long value2, Long value3, String value4, OffsetDateTime value5, OffsetDateTime value6, Long value7, Long value8, String value9, LocalDate value10, LocalDate value11, Long value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FpCaseInvalidationAuditRecord
     */
    public FpCaseInvalidationAuditRecord() {
        super(FpCaseInvalidationAudit.FP_CASE_INVALIDATION_AUDIT);
    }

    /**
     * Create a detached, initialised FpCaseInvalidationAuditRecord
     */
    public FpCaseInvalidationAuditRecord(Long id, Long recordId, Long correctionLogId, String updateUser, OffsetDateTime effDttm, OffsetDateTime expDttm, Long invReasonId, Long invEvidenceTypeId, String invEvidenceNumber, LocalDate invEvidenceDt, LocalDate dateInvalidation, Long signerId, String comment) {
        super(FpCaseInvalidationAudit.FP_CASE_INVALIDATION_AUDIT);

        setId(id);
        setRecordId(recordId);
        setCorrectionLogId(correctionLogId);
        setUpdateUser(updateUser);
        setEffDttm(effDttm);
        setExpDttm(expDttm);
        setInvReasonId(invReasonId);
        setInvEvidenceTypeId(invEvidenceTypeId);
        setInvEvidenceNumber(invEvidenceNumber);
        setInvEvidenceDt(invEvidenceDt);
        setDateInvalidation(dateInvalidation);
        setSignerId(signerId);
        setComment(comment);
        resetChangedOnNotNull();
    }
}
