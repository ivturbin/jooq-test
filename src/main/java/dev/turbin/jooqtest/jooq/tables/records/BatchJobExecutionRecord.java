/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.BatchJobExecution;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatchJobExecutionRecord extends UpdatableRecordImpl<BatchJobExecutionRecord> implements Record11<Long, Long, Long, LocalDateTime, LocalDateTime, LocalDateTime, String, String, String, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.batch_job_execution.job_execution_id</code>.
     */
    public void setJobExecutionId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution.job_execution_id</code>.
     */
    public Long getJobExecutionId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution.version</code>.
     */
    public void setVersion(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution.version</code>.
     */
    public Long getVersion() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution.job_instance_id</code>.
     */
    public void setJobInstanceId(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution.job_instance_id</code>.
     */
    public Long getJobInstanceId() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution.start_time</code>.
     */
    public void setStartTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution.start_time</code>.
     */
    public LocalDateTime getStartTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution.end_time</code>.
     */
    public void setEndTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution.end_time</code>.
     */
    public LocalDateTime getEndTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution.status</code>.
     */
    public void setStatus(String value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution.status</code>.
     */
    public String getStatus() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution.exit_code</code>.
     */
    public void setExitCode(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution.exit_code</code>.
     */
    public String getExitCode() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution.exit_message</code>.
     */
    public void setExitMessage(String value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution.exit_message</code>.
     */
    public String getExitMessage() {
        return (String) get(8);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution.last_updated</code>.
     */
    public void setLastUpdated(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution.last_updated</code>.
     */
    public LocalDateTime getLastUpdated() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for
     * <code>passport_international.batch_job_execution.job_configuration_location</code>.
     */
    public void setJobConfigurationLocation(String value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>passport_international.batch_job_execution.job_configuration_location</code>.
     */
    public String getJobConfigurationLocation() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Long, Long, LocalDateTime, LocalDateTime, LocalDateTime, String, String, String, LocalDateTime, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, Long, Long, LocalDateTime, LocalDateTime, LocalDateTime, String, String, String, LocalDateTime, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return BatchJobExecution.BATCH_JOB_EXECUTION.JOB_EXECUTION_ID;
    }

    @Override
    public Field<Long> field2() {
        return BatchJobExecution.BATCH_JOB_EXECUTION.VERSION;
    }

    @Override
    public Field<Long> field3() {
        return BatchJobExecution.BATCH_JOB_EXECUTION.JOB_INSTANCE_ID;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return BatchJobExecution.BATCH_JOB_EXECUTION.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return BatchJobExecution.BATCH_JOB_EXECUTION.START_TIME;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return BatchJobExecution.BATCH_JOB_EXECUTION.END_TIME;
    }

    @Override
    public Field<String> field7() {
        return BatchJobExecution.BATCH_JOB_EXECUTION.STATUS;
    }

    @Override
    public Field<String> field8() {
        return BatchJobExecution.BATCH_JOB_EXECUTION.EXIT_CODE;
    }

    @Override
    public Field<String> field9() {
        return BatchJobExecution.BATCH_JOB_EXECUTION.EXIT_MESSAGE;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return BatchJobExecution.BATCH_JOB_EXECUTION.LAST_UPDATED;
    }

    @Override
    public Field<String> field11() {
        return BatchJobExecution.BATCH_JOB_EXECUTION.JOB_CONFIGURATION_LOCATION;
    }

    @Override
    public Long component1() {
        return getJobExecutionId();
    }

    @Override
    public Long component2() {
        return getVersion();
    }

    @Override
    public Long component3() {
        return getJobInstanceId();
    }

    @Override
    public LocalDateTime component4() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component5() {
        return getStartTime();
    }

    @Override
    public LocalDateTime component6() {
        return getEndTime();
    }

    @Override
    public String component7() {
        return getStatus();
    }

    @Override
    public String component8() {
        return getExitCode();
    }

    @Override
    public String component9() {
        return getExitMessage();
    }

    @Override
    public LocalDateTime component10() {
        return getLastUpdated();
    }

    @Override
    public String component11() {
        return getJobConfigurationLocation();
    }

    @Override
    public Long value1() {
        return getJobExecutionId();
    }

    @Override
    public Long value2() {
        return getVersion();
    }

    @Override
    public Long value3() {
        return getJobInstanceId();
    }

    @Override
    public LocalDateTime value4() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value5() {
        return getStartTime();
    }

    @Override
    public LocalDateTime value6() {
        return getEndTime();
    }

    @Override
    public String value7() {
        return getStatus();
    }

    @Override
    public String value8() {
        return getExitCode();
    }

    @Override
    public String value9() {
        return getExitMessage();
    }

    @Override
    public LocalDateTime value10() {
        return getLastUpdated();
    }

    @Override
    public String value11() {
        return getJobConfigurationLocation();
    }

    @Override
    public BatchJobExecutionRecord value1(Long value) {
        setJobExecutionId(value);
        return this;
    }

    @Override
    public BatchJobExecutionRecord value2(Long value) {
        setVersion(value);
        return this;
    }

    @Override
    public BatchJobExecutionRecord value3(Long value) {
        setJobInstanceId(value);
        return this;
    }

    @Override
    public BatchJobExecutionRecord value4(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public BatchJobExecutionRecord value5(LocalDateTime value) {
        setStartTime(value);
        return this;
    }

    @Override
    public BatchJobExecutionRecord value6(LocalDateTime value) {
        setEndTime(value);
        return this;
    }

    @Override
    public BatchJobExecutionRecord value7(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public BatchJobExecutionRecord value8(String value) {
        setExitCode(value);
        return this;
    }

    @Override
    public BatchJobExecutionRecord value9(String value) {
        setExitMessage(value);
        return this;
    }

    @Override
    public BatchJobExecutionRecord value10(LocalDateTime value) {
        setLastUpdated(value);
        return this;
    }

    @Override
    public BatchJobExecutionRecord value11(String value) {
        setJobConfigurationLocation(value);
        return this;
    }

    @Override
    public BatchJobExecutionRecord values(Long value1, Long value2, Long value3, LocalDateTime value4, LocalDateTime value5, LocalDateTime value6, String value7, String value8, String value9, LocalDateTime value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BatchJobExecutionRecord
     */
    public BatchJobExecutionRecord() {
        super(BatchJobExecution.BATCH_JOB_EXECUTION);
    }

    /**
     * Create a detached, initialised BatchJobExecutionRecord
     */
    public BatchJobExecutionRecord(Long jobExecutionId, Long version, Long jobInstanceId, LocalDateTime createTime, LocalDateTime startTime, LocalDateTime endTime, String status, String exitCode, String exitMessage, LocalDateTime lastUpdated, String jobConfigurationLocation) {
        super(BatchJobExecution.BATCH_JOB_EXECUTION);

        setJobExecutionId(jobExecutionId);
        setVersion(version);
        setJobInstanceId(jobInstanceId);
        setCreateTime(createTime);
        setStartTime(startTime);
        setEndTime(endTime);
        setStatus(status);
        setExitCode(exitCode);
        setExitMessage(exitMessage);
        setLastUpdated(lastUpdated);
        setJobConfigurationLocation(jobConfigurationLocation);
        resetChangedOnNotNull();
    }
}
