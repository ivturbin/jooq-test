/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables;


import dev.turbin.jooqtest.jooq.PassportInternational;
import dev.turbin.jooqtest.jooq.tables.records.ViewCoreCaseRecord;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewCoreCase extends TableImpl<ViewCoreCaseRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>passport_international.view_core_case</code>
     */
    public static final ViewCoreCase VIEW_CORE_CASE = new ViewCoreCase();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ViewCoreCaseRecord> getRecordType() {
        return ViewCoreCaseRecord.class;
    }

    /**
     * The column
     * <code>passport_international.view_core_case.core_case_id</code>.
     * Идентификатор базового дела ГИСМУ
     */
    public final TableField<ViewCoreCaseRecord, Long> CORE_CASE_ID = createField(DSL.name("core_case_id"), SQLDataType.BIGINT, this, "Идентификатор базового дела ГИСМУ");

    /**
     * The column <code>passport_international.view_core_case.version</code>.
     * Реализация оптимистической блокировки
     */
    public final TableField<ViewCoreCaseRecord, Integer> VERSION = createField(DSL.name("version"), SQLDataType.INTEGER, this, "Реализация оптимистической блокировки");

    /**
     * The column <code>passport_international.view_core_case.invalid_id</code>.
     * Признак корректности дела: 0 - корректное, 1 - отменено, 2 - скрытое
     */
    public final TableField<ViewCoreCaseRecord, Long> INVALID_ID = createField(DSL.name("invalid_id"), SQLDataType.BIGINT, this, "Признак корректности дела: 0 - корректное, 1 - отменено, 2 - скрытое");

    /**
     * The column
     * <code>passport_international.view_core_case.in_checklist_bool</code>.
     * Заявитель находится в контрольном списке, если 1
     */
    public final TableField<ViewCoreCaseRecord, Boolean> IN_CHECKLIST_BOOL = createField(DSL.name("in_checklist_bool"), SQLDataType.BOOLEAN, this, "Заявитель находится в контрольном списке, если 1");

    /**
     * The column
     * <code>passport_international.view_core_case.data_corrected_code_nval</code>.
     * Признак корректировки основных объектов учета дела. Битовая маска: 1 -
     * УД/ДУЛ ФЛ, 2 - УД/ДОС ЮЛ, 4 - адрес ФЛ, 8 - адрес ЮЛ
     */
    public final TableField<ViewCoreCaseRecord, BigDecimal> DATA_CORRECTED_CODE_NVAL = createField(DSL.name("data_corrected_code_nval"), SQLDataType.NUMERIC, this, "Признак корректировки основных объектов учета дела. Битовая маска: 1 - УД/ДУЛ ФЛ, 2 - УД/ДОС ЮЛ, 4 - адрес ФЛ, 8 - адрес ЮЛ");

    /**
     * The column
     * <code>passport_international.view_core_case.from_draft_bool</code>. Дело
     * создано из черновика заявления (очищаемая таблица EXS_DRAFT_CASE), если 1
     */
    public final TableField<ViewCoreCaseRecord, Boolean> FROM_DRAFT_BOOL = createField(DSL.name("from_draft_bool"), SQLDataType.BOOLEAN, this, "Дело создано из черновика заявления (очищаемая таблица EXS_DRAFT_CASE), если 1");

    /**
     * The column
     * <code>passport_international.view_core_case.case_type_id</code>. Тип дела
     */
    public final TableField<ViewCoreCaseRecord, Long> CASE_TYPE_ID = createField(DSL.name("case_type_id"), SQLDataType.BIGINT, this, "Тип дела");

    /**
     * The column
     * <code>passport_international.view_core_case.department_id</code>.
     * Подразделение в котором заводили дело
     */
    public final TableField<ViewCoreCaseRecord, Long> DEPARTMENT_ID = createField(DSL.name("department_id"), SQLDataType.BIGINT, this, "Подразделение в котором заводили дело");

    /**
     * The column
     * <code>passport_international.view_core_case.case_status_id</code>. Статус
     * дела
     */
    public final TableField<ViewCoreCaseRecord, Long> CASE_STATUS_ID = createField(DSL.name("case_status_id"), SQLDataType.BIGINT, this, "Статус дела");

    /**
     * The column
     * <code>passport_international.view_core_case.create_supplier_id</code>.
     * Идентификатор поставщика, в системе которого создано дело
     */
    public final TableField<ViewCoreCaseRecord, Long> CREATE_SUPPLIER_ID = createField(DSL.name("create_supplier_id"), SQLDataType.BIGINT, this, "Идентификатор поставщика, в системе которого создано дело");

    /**
     * The column
     * <code>passport_international.view_core_case.reception_supplier_id</code>.
     * Идентификатор поставщика данных для дела
     */
    public final TableField<ViewCoreCaseRecord, Long> RECEPTION_SUPPLIER_ID = createField(DSL.name("reception_supplier_id"), SQLDataType.BIGINT, this, "Идентификатор поставщика данных для дела");

    /**
     * The column
     * <code>passport_international.view_core_case.reception_dt</code>. Дата и
     * время приема заявления
     */
    public final TableField<ViewCoreCaseRecord, LocalDate> RECEPTION_DT = createField(DSL.name("reception_dt"), SQLDataType.LOCALDATE, this, "Дата и время приема заявления");

    /**
     * The column <code>passport_international.view_core_case.invalid_dt</code>.
     * Дата инвалидации дела
     */
    public final TableField<ViewCoreCaseRecord, LocalDate> INVALID_DT = createField(DSL.name("invalid_dt"), SQLDataType.LOCALDATE, this, "Дата инвалидации дела");

    /**
     * The column
     * <code>passport_international.view_core_case.cessation_dt</code>. Дата
     * прекращения дела
     */
    public final TableField<ViewCoreCaseRecord, LocalDate> CESSATION_DT = createField(DSL.name("cessation_dt"), SQLDataType.LOCALDATE, this, "Дата прекращения дела");

    /**
     * The column
     * <code>passport_international.view_core_case.parent_core_case_id</code>.
     */
    public final TableField<ViewCoreCaseRecord, Long> PARENT_CORE_CASE_ID = createField(DSL.name("parent_core_case_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>passport_international.view_core_case.cessation_reason_id</code>.
     * Причина прекращения дела
     */
    public final TableField<ViewCoreCaseRecord, Long> CESSATION_REASON_ID = createField(DSL.name("cessation_reason_id"), SQLDataType.BIGINT, this, "Причина прекращения дела");

    /**
     * The column
     * <code>passport_international.view_core_case.cessation_user</code>.
     * Пользователь, прекративший дело
     */
    public final TableField<ViewCoreCaseRecord, String> CESSATION_USER = createField(DSL.name("cessation_user"), SQLDataType.VARCHAR(255), this, "Пользователь, прекративший дело");

    /**
     * The column
     * <code>passport_international.view_core_case.invalid_user</code>.
     * Пользователь, инвалидировавший дело
     */
    public final TableField<ViewCoreCaseRecord, String> INVALID_USER = createField(DSL.name("invalid_user"), SQLDataType.VARCHAR(255), this, "Пользователь, инвалидировавший дело");

    /**
     * The column <code>passport_international.view_core_case.case_no</code>.
     * Номер дела
     */
    public final TableField<ViewCoreCaseRecord, String> CASE_NO = createField(DSL.name("case_no"), SQLDataType.VARCHAR(128), this, "Номер дела");

    /**
     * The column
     * <code>passport_international.view_core_case.case_archive_no</code>.
     */
    public final TableField<ViewCoreCaseRecord, String> CASE_ARCHIVE_NO = createField(DSL.name("case_archive_no"), SQLDataType.VARCHAR(128), this, "");

    /**
     * The column
     * <code>passport_international.view_core_case.cessation_basis_desc</code>.
     * Основание прекращения дела
     */
    public final TableField<ViewCoreCaseRecord, String> CESSATION_BASIS_DESC = createField(DSL.name("cessation_basis_desc"), SQLDataType.CLOB, this, "Основание прекращения дела");

    /**
     * The column
     * <code>passport_international.view_core_case.comment_desc</code>.
     */
    public final TableField<ViewCoreCaseRecord, String> COMMENT_DESC = createField(DSL.name("comment_desc"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>passport_international.view_core_case.case_reason_id</code>.
     * Причина оказания услуги
     */
    public final TableField<ViewCoreCaseRecord, Long> CASE_REASON_ID = createField(DSL.name("case_reason_id"), SQLDataType.BIGINT, this, "Причина оказания услуги");

    /**
     * The column <code>passport_international.view_core_case.person_id</code>.
     * Физлицо, которому оказывается услуга
     */
    public final TableField<ViewCoreCaseRecord, Long> PERSON_ID = createField(DSL.name("person_id"), SQLDataType.BIGINT, this, "Физлицо, которому оказывается услуга");

    /**
     * The column
     * <code>passport_international.view_core_case.cancelled_bool</code>. Статус
     * отменен (true) в результате отмены дела
     */
    public final TableField<ViewCoreCaseRecord, Boolean> CANCELLED_BOOL = createField(DSL.name("cancelled_bool"), SQLDataType.BOOLEAN, this, "Статус отменен (true) в результате отмены дела");

    /**
     * The column <code>passport_international.view_core_case.src_id</code>.
     * Источник
     */
    public final TableField<ViewCoreCaseRecord, Long> SRC_ID = createField(DSL.name("src_id"), SQLDataType.BIGINT, this, "Источник");

    /**
     * The column
     * <code>passport_international.view_core_case.create_dttm</code>. Дата
     * время вставки записи в таблицу
     */
    public final TableField<ViewCoreCaseRecord, OffsetDateTime> CREATE_DTTM = createField(DSL.name("create_dttm"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "Дата время вставки записи в таблицу");

    /**
     * The column
     * <code>passport_international.view_core_case.modify_dttm</code>. Дата
     * время последнего изменения записи
     */
    public final TableField<ViewCoreCaseRecord, OffsetDateTime> MODIFY_DTTM = createField(DSL.name("modify_dttm"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "Дата время последнего изменения записи");

    /**
     * The column <code>passport_international.view_core_case.action_ind</code>.
     * Индикатор операции DML(I-insert,D-delete,U-update)
     */
    public final TableField<ViewCoreCaseRecord, String> ACTION_IND = createField(DSL.name("action_ind"), SQLDataType.VARCHAR(1), this, "Индикатор операции DML(I-insert,D-delete,U-update)");

    /**
     * The column <code>passport_international.view_core_case.eff_dttm</code>.
     * Дата начала действия периода
     */
    public final TableField<ViewCoreCaseRecord, OffsetDateTime> EFF_DTTM = createField(DSL.name("eff_dttm"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "Дата начала действия периода");

    /**
     * The column <code>passport_international.view_core_case.exp_dttm</code>.
     * Дата окончания действия периода
     */
    public final TableField<ViewCoreCaseRecord, OffsetDateTime> EXP_DTTM = createField(DSL.name("exp_dttm"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "Дата окончания действия периода");

    /**
     * The column
     * <code>passport_international.view_core_case.create_user</code>.
     * Пользователь создавший запись
     */
    public final TableField<ViewCoreCaseRecord, String> CREATE_USER = createField(DSL.name("create_user"), SQLDataType.VARCHAR(255), this, "Пользователь создавший запись");

    /**
     * The column
     * <code>passport_international.view_core_case.update_user</code>.
     * Пользователь обновивший запись
     */
    public final TableField<ViewCoreCaseRecord, String> UPDATE_USER = createField(DSL.name("update_user"), SQLDataType.VARCHAR(255), this, "Пользователь обновивший запись");

    /**
     * The column
     * <code>passport_international.view_core_case.person_status_id</code>.
     * Статус состояния физического лица
     */
    public final TableField<ViewCoreCaseRecord, Long> PERSON_STATUS_ID = createField(DSL.name("person_status_id"), SQLDataType.BIGINT, this, "Статус состояния физического лица");

    /**
     * The column
     * <code>passport_international.view_core_case.department_code</code>. Код
     * департамента
     */
    public final TableField<ViewCoreCaseRecord, String> DEPARTMENT_CODE = createField(DSL.name("department_code"), SQLDataType.VARCHAR(128), this, "Код департамента");

    /**
     * The column
     * <code>passport_international.view_core_case.core_person_doc_id</code>.
     */
    public final TableField<ViewCoreCaseRecord, Long> CORE_PERSON_DOC_ID = createField(DSL.name("core_person_doc_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>passport_international.view_core_case.region_id</code>.
     * Регион
     */
    public final TableField<ViewCoreCaseRecord, Long> REGION_ID = createField(DSL.name("region_id"), SQLDataType.BIGINT, this, "Регион");

    /**
     * The column
     * <code>passport_international.view_core_case.application_no</code>.
     */
    public final TableField<ViewCoreCaseRecord, String> APPLICATION_NO = createField(DSL.name("application_no"), SQLDataType.VARCHAR(128), this, "");

    /**
     * The column
     * <code>passport_international.view_core_case.source_case_code</code>.
     * Идентификатор дела в источнике
     */
    public final TableField<ViewCoreCaseRecord, String> SOURCE_CASE_CODE = createField(DSL.name("source_case_code"), SQLDataType.VARCHAR(128), this, "Идентификатор дела в источнике");

    /**
     * The column <code>passport_international.view_core_case.source_id</code>.
     * Идентификатор источника
     */
    public final TableField<ViewCoreCaseRecord, Long> SOURCE_ID = createField(DSL.name("source_id"), SQLDataType.BIGINT, this, "Идентификатор источника");

    /**
     * The column
     * <code>passport_international.view_core_case.federal_code</code>.
     * Идентификатор дела в ФУ
     */
    public final TableField<ViewCoreCaseRecord, String> FEDERAL_CODE = createField(DSL.name("federal_code"), SQLDataType.VARCHAR(128), this, "Идентификатор дела в ФУ");

    private ViewCoreCase(Name alias, Table<ViewCoreCaseRecord> aliased) {
        this(alias, aliased, null);
    }

    private ViewCoreCase(Name alias, Table<ViewCoreCaseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("""
        create view "view_core_case" as  SELECT core_case.core_case_id,
         core_case.version,
         core_case.invalid_id,
         core_case.in_checklist_bool,
         core_case.data_corrected_code_nval,
         core_case.from_draft_bool,
         core_case.case_type_id,
         core_case.department_id,
         core_case.case_status_id,
         core_case.create_supplier_id,
         core_case.reception_supplier_id,
         core_case.reception_dt,
         core_case.invalid_dt,
         core_case.cessation_dt,
         core_case.parent_case_id AS parent_core_case_id,
         core_case.cessation_reason_id,
         core_case.cessation_user,
         core_case.invalid_user,
         core_case.case_no,
         core_case.case_arc_no AS case_archive_no,
         core_case.cessation_basis_desc,
         core_case.comments_desc AS comment_desc,
         core_case.case_reason_id,
         core_case.person_id,
         core_case.cancelled_bool,
         core_case.src_id,
         core_case.create_dttm,
         core_case.modify_dttm,
         core_case.action_ind,
         core_case.eff_dttm,
         core_case.exp_dttm,
         core_case.create_user,
         core_case.update_user,
         core_case.person_status_id,
         core_case.department_code,
         core_case.person_document_id AS core_person_doc_id,
         core_case.region_id,
         core_case.application_no,
         core_case.source_case_id AS source_case_code,
         core_case.source_id,
         core_case.federal_id AS federal_code
        FROM core_case;
        """));
    }

    /**
     * Create an aliased <code>passport_international.view_core_case</code>
     * table reference
     */
    public ViewCoreCase(String alias) {
        this(DSL.name(alias), VIEW_CORE_CASE);
    }

    /**
     * Create an aliased <code>passport_international.view_core_case</code>
     * table reference
     */
    public ViewCoreCase(Name alias) {
        this(alias, VIEW_CORE_CASE);
    }

    /**
     * Create a <code>passport_international.view_core_case</code> table
     * reference
     */
    public ViewCoreCase() {
        this(DSL.name("view_core_case"), null);
    }

    public <O extends Record> ViewCoreCase(Table<O> child, ForeignKey<O, ViewCoreCaseRecord> key) {
        super(child, key, VIEW_CORE_CASE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : PassportInternational.PASSPORT_INTERNATIONAL;
    }

    @Override
    public ViewCoreCase as(String alias) {
        return new ViewCoreCase(DSL.name(alias), this);
    }

    @Override
    public ViewCoreCase as(Name alias) {
        return new ViewCoreCase(alias, this);
    }

    @Override
    public ViewCoreCase as(Table<?> alias) {
        return new ViewCoreCase(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewCoreCase rename(String name) {
        return new ViewCoreCase(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewCoreCase rename(Name name) {
        return new ViewCoreCase(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewCoreCase rename(Table<?> name) {
        return new ViewCoreCase(name.getQualifiedName(), null);
    }
}
