/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.FpInformalLegalPerson;

import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Данные законного представителя выезд с которым запрещен
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FpInformalLegalPersonRecord extends UpdatableRecordImpl<FpInformalLegalPersonRecord> implements Record14<Long, String, String, String, LocalDate, String, String, Long, Long, String, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.fp_informal_legal_person.fp_informal_legal_person_id</code>.
     * Идентификатор
     */
    public void setFpInformalLegalPersonId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_informal_legal_person.fp_informal_legal_person_id</code>.
     * Идентификатор
     */
    public Long getFpInformalLegalPersonId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.fp_informal_legal_person.last_name</code>.
     * Фамилия
     */
    public void setLastName(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_informal_legal_person.last_name</code>.
     * Фамилия
     */
    public String getLastName() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.fp_informal_legal_person.first_name</code>.
     * Имя
     */
    public void setFirstName(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_informal_legal_person.first_name</code>.
     * Имя
     */
    public String getFirstName() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>passport_international.fp_informal_legal_person.middle_name</code>.
     * Отчество
     */
    public void setMiddleName(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_informal_legal_person.middle_name</code>.
     * Отчество
     */
    public String getMiddleName() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.fp_informal_legal_person.birthday_dt</code>.
     * Дата рождения
     */
    public void setBirthdayDt(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_informal_legal_person.birthday_dt</code>.
     * Дата рождения
     */
    public LocalDate getBirthdayDt() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for
     * <code>passport_international.fp_informal_legal_person.birth_place</code>.
     * Место рождения
     */
    public void setBirthPlace(String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_informal_legal_person.birth_place</code>.
     * Место рождения
     */
    public String getBirthPlace() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.fp_informal_legal_person.reg_living_address</code>.
     * Адрес регистрации по месту жительства
     */
    public void setRegLivingAddress(String value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_informal_legal_person.reg_living_address</code>.
     * Адрес регистрации по месту жительства
     */
    public String getRegLivingAddress() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.fp_informal_legal_person.citizenship</code>.
     * Гражданство
     */
    public void setCitizenship(Long value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_informal_legal_person.citizenship</code>.
     * Гражданство
     */
    public Long getCitizenship() {
        return (Long) get(7);
    }

    /**
     * Setter for
     * <code>passport_international.fp_informal_legal_person.relation_type_id</code>.
     * Степень родства
     */
    public void setRelationTypeId(Long value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_informal_legal_person.relation_type_id</code>.
     * Степень родства
     */
    public Long getRelationTypeId() {
        return (Long) get(8);
    }

    /**
     * Setter for
     * <code>passport_international.fp_informal_legal_person.action_ind</code>.
     */
    public void setActionInd(String value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_informal_legal_person.action_ind</code>.
     */
    public String getActionInd() {
        return (String) get(9);
    }

    /**
     * Setter for
     * <code>passport_international.fp_informal_legal_person.create_dttm</code>.
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_informal_legal_person.create_dttm</code>.
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(10);
    }

    /**
     * Setter for
     * <code>passport_international.fp_informal_legal_person.modify_dttm</code>.
     */
    public void setModifyDttm(OffsetDateTime value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_informal_legal_person.modify_dttm</code>.
     */
    public OffsetDateTime getModifyDttm() {
        return (OffsetDateTime) get(11);
    }

    /**
     * Setter for
     * <code>passport_international.fp_informal_legal_person.eff_dttm</code>.
     */
    public void setEffDttm(OffsetDateTime value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_informal_legal_person.eff_dttm</code>.
     */
    public OffsetDateTime getEffDttm() {
        return (OffsetDateTime) get(12);
    }

    /**
     * Setter for
     * <code>passport_international.fp_informal_legal_person.exp_dttm</code>.
     */
    public void setExpDttm(OffsetDateTime value) {
        set(13, value);
    }

    /**
     * Getter for
     * <code>passport_international.fp_informal_legal_person.exp_dttm</code>.
     */
    public OffsetDateTime getExpDttm() {
        return (OffsetDateTime) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Long, String, String, String, LocalDate, String, String, Long, Long, String, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Long, String, String, String, LocalDate, String, String, Long, Long, String, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return FpInformalLegalPerson.FP_INFORMAL_LEGAL_PERSON.FP_INFORMAL_LEGAL_PERSON_ID;
    }

    @Override
    public Field<String> field2() {
        return FpInformalLegalPerson.FP_INFORMAL_LEGAL_PERSON.LAST_NAME;
    }

    @Override
    public Field<String> field3() {
        return FpInformalLegalPerson.FP_INFORMAL_LEGAL_PERSON.FIRST_NAME;
    }

    @Override
    public Field<String> field4() {
        return FpInformalLegalPerson.FP_INFORMAL_LEGAL_PERSON.MIDDLE_NAME;
    }

    @Override
    public Field<LocalDate> field5() {
        return FpInformalLegalPerson.FP_INFORMAL_LEGAL_PERSON.BIRTHDAY_DT;
    }

    @Override
    public Field<String> field6() {
        return FpInformalLegalPerson.FP_INFORMAL_LEGAL_PERSON.BIRTH_PLACE;
    }

    @Override
    public Field<String> field7() {
        return FpInformalLegalPerson.FP_INFORMAL_LEGAL_PERSON.REG_LIVING_ADDRESS;
    }

    @Override
    public Field<Long> field8() {
        return FpInformalLegalPerson.FP_INFORMAL_LEGAL_PERSON.CITIZENSHIP;
    }

    @Override
    public Field<Long> field9() {
        return FpInformalLegalPerson.FP_INFORMAL_LEGAL_PERSON.RELATION_TYPE_ID;
    }

    @Override
    public Field<String> field10() {
        return FpInformalLegalPerson.FP_INFORMAL_LEGAL_PERSON.ACTION_IND;
    }

    @Override
    public Field<OffsetDateTime> field11() {
        return FpInformalLegalPerson.FP_INFORMAL_LEGAL_PERSON.CREATE_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field12() {
        return FpInformalLegalPerson.FP_INFORMAL_LEGAL_PERSON.MODIFY_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field13() {
        return FpInformalLegalPerson.FP_INFORMAL_LEGAL_PERSON.EFF_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field14() {
        return FpInformalLegalPerson.FP_INFORMAL_LEGAL_PERSON.EXP_DTTM;
    }

    @Override
    public Long component1() {
        return getFpInformalLegalPersonId();
    }

    @Override
    public String component2() {
        return getLastName();
    }

    @Override
    public String component3() {
        return getFirstName();
    }

    @Override
    public String component4() {
        return getMiddleName();
    }

    @Override
    public LocalDate component5() {
        return getBirthdayDt();
    }

    @Override
    public String component6() {
        return getBirthPlace();
    }

    @Override
    public String component7() {
        return getRegLivingAddress();
    }

    @Override
    public Long component8() {
        return getCitizenship();
    }

    @Override
    public Long component9() {
        return getRelationTypeId();
    }

    @Override
    public String component10() {
        return getActionInd();
    }

    @Override
    public OffsetDateTime component11() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime component12() {
        return getModifyDttm();
    }

    @Override
    public OffsetDateTime component13() {
        return getEffDttm();
    }

    @Override
    public OffsetDateTime component14() {
        return getExpDttm();
    }

    @Override
    public Long value1() {
        return getFpInformalLegalPersonId();
    }

    @Override
    public String value2() {
        return getLastName();
    }

    @Override
    public String value3() {
        return getFirstName();
    }

    @Override
    public String value4() {
        return getMiddleName();
    }

    @Override
    public LocalDate value5() {
        return getBirthdayDt();
    }

    @Override
    public String value6() {
        return getBirthPlace();
    }

    @Override
    public String value7() {
        return getRegLivingAddress();
    }

    @Override
    public Long value8() {
        return getCitizenship();
    }

    @Override
    public Long value9() {
        return getRelationTypeId();
    }

    @Override
    public String value10() {
        return getActionInd();
    }

    @Override
    public OffsetDateTime value11() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime value12() {
        return getModifyDttm();
    }

    @Override
    public OffsetDateTime value13() {
        return getEffDttm();
    }

    @Override
    public OffsetDateTime value14() {
        return getExpDttm();
    }

    @Override
    public FpInformalLegalPersonRecord value1(Long value) {
        setFpInformalLegalPersonId(value);
        return this;
    }

    @Override
    public FpInformalLegalPersonRecord value2(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public FpInformalLegalPersonRecord value3(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public FpInformalLegalPersonRecord value4(String value) {
        setMiddleName(value);
        return this;
    }

    @Override
    public FpInformalLegalPersonRecord value5(LocalDate value) {
        setBirthdayDt(value);
        return this;
    }

    @Override
    public FpInformalLegalPersonRecord value6(String value) {
        setBirthPlace(value);
        return this;
    }

    @Override
    public FpInformalLegalPersonRecord value7(String value) {
        setRegLivingAddress(value);
        return this;
    }

    @Override
    public FpInformalLegalPersonRecord value8(Long value) {
        setCitizenship(value);
        return this;
    }

    @Override
    public FpInformalLegalPersonRecord value9(Long value) {
        setRelationTypeId(value);
        return this;
    }

    @Override
    public FpInformalLegalPersonRecord value10(String value) {
        setActionInd(value);
        return this;
    }

    @Override
    public FpInformalLegalPersonRecord value11(OffsetDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public FpInformalLegalPersonRecord value12(OffsetDateTime value) {
        setModifyDttm(value);
        return this;
    }

    @Override
    public FpInformalLegalPersonRecord value13(OffsetDateTime value) {
        setEffDttm(value);
        return this;
    }

    @Override
    public FpInformalLegalPersonRecord value14(OffsetDateTime value) {
        setExpDttm(value);
        return this;
    }

    @Override
    public FpInformalLegalPersonRecord values(Long value1, String value2, String value3, String value4, LocalDate value5, String value6, String value7, Long value8, Long value9, String value10, OffsetDateTime value11, OffsetDateTime value12, OffsetDateTime value13, OffsetDateTime value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FpInformalLegalPersonRecord
     */
    public FpInformalLegalPersonRecord() {
        super(FpInformalLegalPerson.FP_INFORMAL_LEGAL_PERSON);
    }

    /**
     * Create a detached, initialised FpInformalLegalPersonRecord
     */
    public FpInformalLegalPersonRecord(Long fpInformalLegalPersonId, String lastName, String firstName, String middleName, LocalDate birthdayDt, String birthPlace, String regLivingAddress, Long citizenship, Long relationTypeId, String actionInd, OffsetDateTime createDttm, OffsetDateTime modifyDttm, OffsetDateTime effDttm, OffsetDateTime expDttm) {
        super(FpInformalLegalPerson.FP_INFORMAL_LEGAL_PERSON);

        setFpInformalLegalPersonId(fpInformalLegalPersonId);
        setLastName(lastName);
        setFirstName(firstName);
        setMiddleName(middleName);
        setBirthdayDt(birthdayDt);
        setBirthPlace(birthPlace);
        setRegLivingAddress(regLivingAddress);
        setCitizenship(citizenship);
        setRelationTypeId(relationTypeId);
        setActionInd(actionInd);
        setCreateDttm(createDttm);
        setModifyDttm(modifyDttm);
        setEffDttm(effDttm);
        setExpDttm(expDttm);
        resetChangedOnNotNull();
    }
}
