/*
 * This file is generated by jOOQ.
 */
package dev.turbin.jooqtest.jooq.tables.records;


import dev.turbin.jooqtest.jooq.tables.CoreFileStorage;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Связанные файлы с делом
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreFileStorageRecord extends UpdatableRecordImpl<CoreFileStorageRecord> implements Record17<Long, UUID, Long, String, String, LocalDate, Long, String, String, OffsetDateTime, OffsetDateTime, String, Long, Long, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>passport_international.core_file_storage.core_file_storage_id</code>.
     * Идентификатор
     */
    public void setCoreFileStorageId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_file_storage.core_file_storage_id</code>.
     * Идентификатор
     */
    public Long getCoreFileStorageId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>passport_international.core_file_storage.file_uid</code>. UID файла
     */
    public void setFileUid(UUID value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_file_storage.file_uid</code>. UID файла
     */
    public UUID getFileUid() {
        return (UUID) get(1);
    }

    /**
     * Setter for
     * <code>passport_international.core_file_storage.file_type_id</code>. Тип
     * файла
     */
    public void setFileTypeId(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_file_storage.file_type_id</code>. Тип
     * файла
     */
    public Long getFileTypeId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>passport_international.core_file_storage.doc_no</code>.
     * Номер документа
     */
    public void setDocNo(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>passport_international.core_file_storage.doc_no</code>.
     * Номер документа
     */
    public String getDocNo() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>passport_international.core_file_storage.file_desc</code>. Описание
     */
    public void setFileDesc(String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_file_storage.file_desc</code>. Описание
     */
    public String getFileDesc() {
        return (String) get(4);
    }

    /**
     * Setter for <code>passport_international.core_file_storage.file_dt</code>.
     * Дата документа
     */
    public void setFileDt(LocalDate value) {
        set(5, value);
    }

    /**
     * Getter for <code>passport_international.core_file_storage.file_dt</code>.
     * Дата документа
     */
    public LocalDate getFileDt() {
        return (LocalDate) get(5);
    }

    /**
     * Setter for
     * <code>passport_international.core_file_storage.core_case_id</code>.
     * Идентификатор дела
     */
    public void setCoreCaseId(Long value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_file_storage.core_case_id</code>.
     * Идентификатор дела
     */
    public Long getCoreCaseId() {
        return (Long) get(6);
    }

    /**
     * Setter for
     * <code>passport_international.core_file_storage.create_user</code>. Логин
     * пользователя создавшего запись
     */
    public void setCreateUser(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_file_storage.create_user</code>. Логин
     * пользователя создавшего запись
     */
    public String getCreateUser() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>passport_international.core_file_storage.modify_user</code>. Логин
     * пользователя изменившего запись
     */
    public void setModifyUser(String value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_file_storage.modify_user</code>. Логин
     * пользователя изменившего запись
     */
    public String getModifyUser() {
        return (String) get(8);
    }

    /**
     * Setter for
     * <code>passport_international.core_file_storage.create_dttm</code>. Дата
     * время вставки записи
     */
    public void setCreateDttm(OffsetDateTime value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_file_storage.create_dttm</code>. Дата
     * время вставки записи
     */
    public OffsetDateTime getCreateDttm() {
        return (OffsetDateTime) get(9);
    }

    /**
     * Setter for
     * <code>passport_international.core_file_storage.modify_dttm</code>. Дата
     * время последнего изменения записи
     */
    public void setModifyDttm(OffsetDateTime value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_file_storage.modify_dttm</code>. Дата
     * время последнего изменения записи
     */
    public OffsetDateTime getModifyDttm() {
        return (OffsetDateTime) get(10);
    }

    /**
     * Setter for
     * <code>passport_international.core_file_storage.action_ind</code>.
     * Индикатор действия
     */
    public void setActionInd(String value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_file_storage.action_ind</code>.
     * Индикатор действия
     */
    public String getActionInd() {
        return (String) get(11);
    }

    /**
     * Setter for
     * <code>passport_international.core_file_storage.core_document_id</code>.
     * Ссылка на базовый документ
     */
    public void setCoreDocumentId(Long value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_file_storage.core_document_id</code>.
     * Ссылка на базовый документ
     */
    public Long getCoreDocumentId() {
        return (Long) get(12);
    }

    /**
     * Setter for
     * <code>passport_international.core_file_storage.migr_source_system_id</code>.
     * Идентификатор системы источник
     */
    public void setMigrSourceSystemId(Long value) {
        set(13, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_file_storage.migr_source_system_id</code>.
     * Идентификатор системы источник
     */
    public Long getMigrSourceSystemId() {
        return (Long) get(13);
    }

    /**
     * Setter for
     * <code>passport_international.core_file_storage.migr_source_id</code>.
     * Идентификатор в системе источник
     */
    public void setMigrSourceId(Long value) {
        set(14, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_file_storage.migr_source_id</code>.
     * Идентификатор в системе источник
     */
    public Long getMigrSourceId() {
        return (Long) get(14);
    }

    /**
     * Setter for
     * <code>passport_international.core_file_storage.migr_file_link_cval</code>.
     * Ссылка на ФХ
     */
    public void setMigrFileLinkCval(String value) {
        set(15, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_file_storage.migr_file_link_cval</code>.
     * Ссылка на ФХ
     */
    public String getMigrFileLinkCval() {
        return (String) get(15);
    }

    /**
     * Setter for
     * <code>passport_international.core_file_storage.comment_desc</code>.
     * Описание комментария
     */
    public void setCommentDesc(String value) {
        set(16, value);
    }

    /**
     * Getter for
     * <code>passport_international.core_file_storage.comment_desc</code>.
     * Описание комментария
     */
    public String getCommentDesc() {
        return (String) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<Long, UUID, Long, String, String, LocalDate, Long, String, String, OffsetDateTime, OffsetDateTime, String, Long, Long, Long, String, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<Long, UUID, Long, String, String, LocalDate, Long, String, String, OffsetDateTime, OffsetDateTime, String, Long, Long, Long, String, String> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CoreFileStorage.CORE_FILE_STORAGE.CORE_FILE_STORAGE_ID;
    }

    @Override
    public Field<UUID> field2() {
        return CoreFileStorage.CORE_FILE_STORAGE.FILE_UID;
    }

    @Override
    public Field<Long> field3() {
        return CoreFileStorage.CORE_FILE_STORAGE.FILE_TYPE_ID;
    }

    @Override
    public Field<String> field4() {
        return CoreFileStorage.CORE_FILE_STORAGE.DOC_NO;
    }

    @Override
    public Field<String> field5() {
        return CoreFileStorage.CORE_FILE_STORAGE.FILE_DESC;
    }

    @Override
    public Field<LocalDate> field6() {
        return CoreFileStorage.CORE_FILE_STORAGE.FILE_DT;
    }

    @Override
    public Field<Long> field7() {
        return CoreFileStorage.CORE_FILE_STORAGE.CORE_CASE_ID;
    }

    @Override
    public Field<String> field8() {
        return CoreFileStorage.CORE_FILE_STORAGE.CREATE_USER;
    }

    @Override
    public Field<String> field9() {
        return CoreFileStorage.CORE_FILE_STORAGE.MODIFY_USER;
    }

    @Override
    public Field<OffsetDateTime> field10() {
        return CoreFileStorage.CORE_FILE_STORAGE.CREATE_DTTM;
    }

    @Override
    public Field<OffsetDateTime> field11() {
        return CoreFileStorage.CORE_FILE_STORAGE.MODIFY_DTTM;
    }

    @Override
    public Field<String> field12() {
        return CoreFileStorage.CORE_FILE_STORAGE.ACTION_IND;
    }

    @Override
    public Field<Long> field13() {
        return CoreFileStorage.CORE_FILE_STORAGE.CORE_DOCUMENT_ID;
    }

    @Override
    public Field<Long> field14() {
        return CoreFileStorage.CORE_FILE_STORAGE.MIGR_SOURCE_SYSTEM_ID;
    }

    @Override
    public Field<Long> field15() {
        return CoreFileStorage.CORE_FILE_STORAGE.MIGR_SOURCE_ID;
    }

    @Override
    public Field<String> field16() {
        return CoreFileStorage.CORE_FILE_STORAGE.MIGR_FILE_LINK_CVAL;
    }

    @Override
    public Field<String> field17() {
        return CoreFileStorage.CORE_FILE_STORAGE.COMMENT_DESC;
    }

    @Override
    public Long component1() {
        return getCoreFileStorageId();
    }

    @Override
    public UUID component2() {
        return getFileUid();
    }

    @Override
    public Long component3() {
        return getFileTypeId();
    }

    @Override
    public String component4() {
        return getDocNo();
    }

    @Override
    public String component5() {
        return getFileDesc();
    }

    @Override
    public LocalDate component6() {
        return getFileDt();
    }

    @Override
    public Long component7() {
        return getCoreCaseId();
    }

    @Override
    public String component8() {
        return getCreateUser();
    }

    @Override
    public String component9() {
        return getModifyUser();
    }

    @Override
    public OffsetDateTime component10() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime component11() {
        return getModifyDttm();
    }

    @Override
    public String component12() {
        return getActionInd();
    }

    @Override
    public Long component13() {
        return getCoreDocumentId();
    }

    @Override
    public Long component14() {
        return getMigrSourceSystemId();
    }

    @Override
    public Long component15() {
        return getMigrSourceId();
    }

    @Override
    public String component16() {
        return getMigrFileLinkCval();
    }

    @Override
    public String component17() {
        return getCommentDesc();
    }

    @Override
    public Long value1() {
        return getCoreFileStorageId();
    }

    @Override
    public UUID value2() {
        return getFileUid();
    }

    @Override
    public Long value3() {
        return getFileTypeId();
    }

    @Override
    public String value4() {
        return getDocNo();
    }

    @Override
    public String value5() {
        return getFileDesc();
    }

    @Override
    public LocalDate value6() {
        return getFileDt();
    }

    @Override
    public Long value7() {
        return getCoreCaseId();
    }

    @Override
    public String value8() {
        return getCreateUser();
    }

    @Override
    public String value9() {
        return getModifyUser();
    }

    @Override
    public OffsetDateTime value10() {
        return getCreateDttm();
    }

    @Override
    public OffsetDateTime value11() {
        return getModifyDttm();
    }

    @Override
    public String value12() {
        return getActionInd();
    }

    @Override
    public Long value13() {
        return getCoreDocumentId();
    }

    @Override
    public Long value14() {
        return getMigrSourceSystemId();
    }

    @Override
    public Long value15() {
        return getMigrSourceId();
    }

    @Override
    public String value16() {
        return getMigrFileLinkCval();
    }

    @Override
    public String value17() {
        return getCommentDesc();
    }

    @Override
    public CoreFileStorageRecord value1(Long value) {
        setCoreFileStorageId(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value2(UUID value) {
        setFileUid(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value3(Long value) {
        setFileTypeId(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value4(String value) {
        setDocNo(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value5(String value) {
        setFileDesc(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value6(LocalDate value) {
        setFileDt(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value7(Long value) {
        setCoreCaseId(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value8(String value) {
        setCreateUser(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value9(String value) {
        setModifyUser(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value10(OffsetDateTime value) {
        setCreateDttm(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value11(OffsetDateTime value) {
        setModifyDttm(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value12(String value) {
        setActionInd(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value13(Long value) {
        setCoreDocumentId(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value14(Long value) {
        setMigrSourceSystemId(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value15(Long value) {
        setMigrSourceId(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value16(String value) {
        setMigrFileLinkCval(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value17(String value) {
        setCommentDesc(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord values(Long value1, UUID value2, Long value3, String value4, String value5, LocalDate value6, Long value7, String value8, String value9, OffsetDateTime value10, OffsetDateTime value11, String value12, Long value13, Long value14, Long value15, String value16, String value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreFileStorageRecord
     */
    public CoreFileStorageRecord() {
        super(CoreFileStorage.CORE_FILE_STORAGE);
    }

    /**
     * Create a detached, initialised CoreFileStorageRecord
     */
    public CoreFileStorageRecord(Long coreFileStorageId, UUID fileUid, Long fileTypeId, String docNo, String fileDesc, LocalDate fileDt, Long coreCaseId, String createUser, String modifyUser, OffsetDateTime createDttm, OffsetDateTime modifyDttm, String actionInd, Long coreDocumentId, Long migrSourceSystemId, Long migrSourceId, String migrFileLinkCval, String commentDesc) {
        super(CoreFileStorage.CORE_FILE_STORAGE);

        setCoreFileStorageId(coreFileStorageId);
        setFileUid(fileUid);
        setFileTypeId(fileTypeId);
        setDocNo(docNo);
        setFileDesc(fileDesc);
        setFileDt(fileDt);
        setCoreCaseId(coreCaseId);
        setCreateUser(createUser);
        setModifyUser(modifyUser);
        setCreateDttm(createDttm);
        setModifyDttm(modifyDttm);
        setActionInd(actionInd);
        setCoreDocumentId(coreDocumentId);
        setMigrSourceSystemId(migrSourceSystemId);
        setMigrSourceId(migrSourceId);
        setMigrFileLinkCval(migrFileLinkCval);
        setCommentDesc(commentDesc);
        resetChangedOnNotNull();
    }
}
